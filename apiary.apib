FORMAT: 1A
HOST: http://www.exacttargetapis.com/

# ExactTarget API Specifications - Prototype
Prototypes of ExactTarget APIs.

# Group Account Resource

## Account Object DRAFT [/accounts/{id,objectId}]

Definition of an Account resource

+ Model (application/json)
    JSON Representation of a single Account resource. Based on http://help.exacttarget.com/en/technical_library/web_service_guide/objects/account/  
    + Body
    
            {
                "accountType" : "EXACTTARGET",
                "address" : "301 Brannan St., Suite 100, San Francisco, CA 94107",
                "brandId" : 0, 
                "businessName" : "Business Name of an account's owner",
                "children" : [ 1, 2, 3, 4], 
                "city" : "San Francisco",
                "client" : "<client-id>",
                "country" : "United States",
                "createdDate" : "2014-02-27T22:14:38+00:00",
                "deletedDate" : "2014-02-27T22:14:38+00:00",
                "editionId" : 123,
                "email" : "an@email.com",
                "fax" : "415-555-5555",
                "fromName" : "Sender's Name - Deprecated",
                "id" : 123,
                "inheritedAddress" : false,
                "isActive" : 1,
                "isTestAccount" : false,
                 "localeCode" : "US",
                "modifiedDate": "2014-02-27T22:14:38+00:00",
                "name" : "A fake account",
                "objectId" : "<guid>",
                "orgId" : 323,
                "ownerId" : 123,
                "parentId" : 133,
                "partnerKey" : "myPartnerKey",
                "phone" : "415-555-5322",
                "state" : "California",
                "timezoneId" : 87,
                "zip" : "94107"
            }

+ Parameters
    + objectId (optional) ... objectId for the account, required if no id is specified
    + id (required) ... id for the account, required if no objectId is specified

### Retrieve an Account [GET]

+ Response 200
    [Account Object DRAFT][]




## EmailSnippetsEntity [/v1/accounts/{memberId}/snippets/email]
A single EmailSnippetsEntity with all of its details


+ Model (application/json)

        {
            "_links": {
                "parent": { "href": "/v1/accounts/{memberId}"},
                "self":   { "href": "/v1/accounts/{memberId}/snippets/email" }
            },
            "emailSnippets": [{
                "name": "TRACK_EMAIL",
                "displayName": "Track Email Opens",
                "value": "<custom name=\"opencounter\" type=\"tracking\">"
            },
            {
                "name": "PHYSICAL_MAILING",
                "displayName": "Physical Mailing Address (Required)",
                "value": "<table cellpadding=\"2\" cellspacing=\"0\" width=\"600\" ID=\"Table5\" Border=0><tr><td><font face=\"verdana\" size=\"1\" color=\"#444444\">This email was sent to:  %%emailaddr%% <br><br><b>Email Sent By:</b> %%Member_Busname%%<br>%%Member_Addr%% %%Member_City%%, %%Member_State%%, %%Member_PostalCode%%, %%Member_Country%%<br><br></font></td></tr></table>"
            },
            {
                "name": "FORWARD_FRIEND",
                "displayName": "Forward to a Friend",
                "value": "<a href=\"%%ftaf_url%%\"><img src=\"http://www.exacttarget.com/members/newsletters/gfx/forwardafriendicon.gif\" border=\"0\"></a>"
            },
            {
                "name": "VIEW_EMAIL",
                "displayName": "View Email as a Web Page",
                "value": "To view this email as a web page, click <a href=\"%%view_email_url%%\">here.</a>"
            },
            {
                "name": "PRIVACY_POLICY",
                "displayName": "Privacy Policy",
                "value": "We respect your right to privacy - click <a href=\"http://email.exacttarget.com/company-anti-sp-policy.asp\">here</a> to view our policy."
            },
            {
                "name": "UNSUBSCRIBE_CENTER",
                "displayName": "Unsubscribe Center",
                "value": "<a href=\"%%unsub_center_url%%\" alias=\"Unsubscribe\">Unsubscribe</a>"
            },
            {
                "name": "PROFILE_CENTER",
                "displayName": "Profile Center (Required)",
                "value": "<a href=\"%%profile_center_url%%\" alias=\"Update Profile\">Update Profile</a>"
            },
            {
                "name": "SUBSCRIPTION_CENTER",
                "displayName": "Subscription Center",
                "value": "<a href=\"%%subscription_center_url%%\" alias=\"Manage Subscriptions\">Manage Subscriptions</a>"
            },
            {
                "name": "POWERED_BY_LOGO",
                "displayName": "Powered By Logo",
                "value": "<a href=\"http://www.exacttarget.com\"><img src=\"http://images.exacttarget.com/smalllogo2.gif\" border=\"0\"></a>"
            },
            {
                "name": "SOCIAL_MARKUP",
                "displayName": "Social Markup",
                "value": "<!-- RegionStart[ contentslot:\"slotname\", title:\"Title of Shared Content web page\", description:\"customer key of CSS file in portfolio\", csskey:\"Description of Shared Content web page\"] -->\n<!-- Creates a link to share this content with a social network -->\n<a href=\"%%=GetSocialPublishURL('replacewithsocialnetwork','slotname')=%%\" alias=\"Publish to Social Network Name - slotname\" title=\"Publish to Social Network Name\"><img src=\"icon url\" alt=\"Social Network Name\" title=\"Social Network Name\" border=\"0\"></a>\n<!-- RegionEnd[ contentslot:\"slotname\"] -->"
            },
            {
                "name": "FACEBOOK_LIKE_1",
                "displayName": "Facebook Like",
                "value": "<!-- RegionStart[ contentslot:\"slotname\"] -->\r\n\r\n<!-- Creates a Facebook 'LIKE' button.  Content slot name in RegionStart/RegionEnd must match the value of the \"contentslot\" \r\n     JSON property.  JSON properties in \"templates\" map to Facebook Like Widget properties as of '8/25/2011'.   \r\n     See http://developers.facebook.com/docs/reference/plugins/like/ for additional documentation for the 'LIKE' properties below. -->\r\n\r\n<div id=\"CONTAINER_FB1399386754263\"><!-- %%[ IF _MessageContext == \"Social\" THEN ]%% -->\r\n<!--__FBDIV_FB1399386754263__-->\r\n<!-- %%[ ELSE ]%% -->\r\n<a href=\"%%=GetSocialPublishURL('13','FB1399386754263')=%%\" id=\"FB1399386754263\" alias=\"Publish Like to Facebook\" fb=\"true\">\r\n<img border=\"0\" alt=\"Facebook Like\" src=\"\" />\r\n</a>\r\n<!-- %%[ ENDIF ]%% -->\r\n  <!-- {\"id\":\"FB1399386754263\",\r\n        \"type\":\"facebooklike\",\r\n        \"contentslot\":\"slotname\",\r\n        \"templates\":{\r\n        \"ogtags\":[{\"property\":\"og:title\",\"content\":\"title\"},\r\n                    {\"property\":\"og:description\",\"content\":\"\"},\r\n                    {\"property\":\"og:site_name\",\"content\":\"localhost\"},\r\n                    {\"property\":\"og:image\",\"content\":\"\"},\r\n                    {\"property\":\"fb:app_id\",\"content\":\"1234567890\"},\r\n                    {\"property\":\"og:type\",\"content\":\"article\"}],\r\n        \"fblike\":{\r\n          \"send\":false,\r\n          \"layout\":\"standard\",\r\n          \"show_faces\":true,\r\n          \"width\":450,\r\n          \"action\":\"like\",\r\n          \"font\":\"arial\",\r\n          \"colorscheme\":\"light\",\r\n          \"ref\":\"\"}}} -->\r\n</div>\r\n<!-- RegionEnd[ contentslot:\"slotname\"] -->\r\n"
            }]
        }

### Retrieve emailSnippets [GET]
+ Response 200 (application/json)

    [EmailSnippetsEntity][]
    



# Group Jobs resource

## Jobs - v1 [/v1/jobs/]
A collection of job objects.

+ Model (application/json)
    JSON Representation of a subscriber with list status data.
    + Body
    
            {
                "count":2,
                "page":1,
                "pageSize":25,
                "_links": {
                    "self": { "href": "/jobs/" }
                },
                "items" : [
                    {
                        "id" : "15324",
                        "emailId" : 31448, 
                        "status" : "Pending",
                        "fromName" : "Scott",
                        "fromEmail" : "Scott@exacttarget.com",
                        "name" : "Amp Script in Email",
                        "emailSubject" : "Amp Script in Email",
                        "scheduledTime" : "2014-03-29T17:00:00",
                        "totalSendCount" : 0,
                        "targetLists" : [
                            {
                                "id" : 10253,
                                "name" : "Main List",
                                "objectType" : "List"
                            },
                            {
                                "id" : 134064,
                                "name" : "Gmail",
                                "objectType" : "List"
                            }
                        ],
                        "suppressionLists" : [
                            {
                                "objectId" : "8E844912-1429-E211-B468-0022642D9886",
                                "name" : "Another List",
                                "objectType" : "CustomObject"
                            },
                            {
                                "id":134065,
                                "name":"Not This One",
                                "objectType" : "List"
                            }
                        ]
                    },
                    {
                        "id" : "36548",
                        "emailId" : 31448, 
                        "status" : "Pending",
                        "fromName" : "Scott",
                        "fromEmail" : "Scott@exacttarget.com",
                        "name" : "Another Email",
                        "emailSubject" : "This is another email",
                        "scheduledTime" : "2014-03-30T09:00:00",
                        "totalSendCount" : 0,
                        "targetLists" : [
                            {
                                "id" : 10253,
                                "name" : "Main List",
                                "objectType" : "List"
                            },
                            {
                                "id" : 134064,
                                "name" : "Gmail",
                                "objectType" : "List"
                            }
                        ],
                        "suppressionLists" : [
                            {
                                "objectId" : "8E844912-1429-E211-B468-0022642D9886",
                                "name" : "Another List",
                                "objectType" : "CustomObject"
                            },
                            {
                                "id":134065,
                                "name":"Not This One",
                                "objectType" : "List"
                            }
                        ]
                    }
                ]
            }

### Retrieve a collection of jobs [GET]
+ Response 200
    [Jobs - v1][]

## Job - v1 [/v1/jobs/{id}]
A single job object.

+ Parameters
    + id (required, number, `123`) ... Numeric `id` of the job.

+ Model (application/json)
    JSON Representation of a subscriber with list status data.
    + Body
    
            {
                "_links": {
                    "self": { "href": "/jobs/{id}" },
                    "parent": { "href": "/jobs/" },
                    "events" : { "href" : "/jobs/{id}/events" },
                    "status" : { "href" : "/jobs/{id}/status" }
                },
                "id" : "{id}",
                "emailId" : 31448, 
                "status" : "Pending",
                "fromName" : "Scott",
                "fromEmail" : "Scott@exacttarget.com",
                "name" : "Amp Script in Email",
                "emailSubject" : "Amp Script in Email",
                "scheduledTime" : "2014-03-29T17:00:00",
                "totalSendCount" : 0,
                "targetLists" : [
                    {
                        "id" : 10253,
                        "name" : "Main List",
                        "objectType" : "List"
                    },
                    {
                        "id" : 134064,
                        "name" : "Gmail",
                        "objectType" : "List"
                    }
                ],
                "suppressionLists" : [
                    {
                        "objectId" : "8E844912-1429-E211-B468-0022642D9886",
                        "name" : "Another List",
                        "objectType" : "CustomObject"
                    },
                    {
                        "id":134065,
                        "name":"Not This One",
                        "objectType" : "List"
                    }
                ]
            }

### Retrieve a job [GET]
+ Response 200
    [Job - v1][]

### Update a job [PATCH]
+ Request (application/json)

        {
            "scheduledTime" : "2014-03-29T17:00:00"
        }
        
+ Response 200
    [Job - v1][]

## Jobs Events [/jobs/{id}/events{?fields}]
A single Event object belonging to a job.  Always returns the latest values for the job, no date/time filtering allowed.

+ Parameters
    + id (required, number, `123`) ... Numeric `id` of the Job to retrieve events from
    + fields (optional, string, `sent,delivered,bouncesHard,bouncesSoft,bouncesBLocked,uniqueOpened,uniqueClicked,unsubscribed` ) ... Comma Separated string of event fields to be returned. 

+ Model (application/json)
    JSON Representation of events that have occurred on a job. Percents are a percent of toSend.  Need to discuss minimum percentages.
    + Body
    
            {
                "_links": {
                    "self": { "href": "/jobs/{id}/events" },
                    "message" : { "href" : "/messages/{messageId}" },
                    "parent": { "href": "/jobs/{id}" }
                },
                "id": "{id}",
                "memberId" : "{memberId}",
                "messageId" : "{messageId}",
                "sent" : { 
                  "count" : 18500 
                },
                "delivered": { 
                  "count" : 18336, 
                  "percent" : 99.114
                },
                "bounced" : { 
                  "count" : 164, 
                  "percent" : 0.009,
                  "hard" : 12, 
                  "soft" : 100, 
                  "blocked" : 50,
                  "technical" : 1,
                  "unknown" : 1
                },
                "opened" : { 
                  "unique" : {
                    "count" : 18133,
                    "percent" : 98.731
                  },
                  "count" : 18200
                },
                "clicked" : { 
                  "unique" : {
                    "count" : 18022,
                    "percent" : 98.288
                  },
                  "count" : 18300
                },
                "unsubscribed": { 
                  "count" : 33, 
                  "percent" : 0.002 
                },
                "errored" : { 
                  "count" : 0
                }
            }

### Retrieve Events for a job [GET]
+ Response 200
    [Jobs Events][]

## Jobs Status [/jobs/{id}/status{?fields}]
Status information of a job

+ Parameters
    + id (required) ... id of the job
    + fields (optional, string ) ... Comma Separated string of event fields to be returned.
        + Values 
            + `total`
            + `pending`
            + `processing`
            + `completed`

+ Model (application/json)
    JSON Representation of status of a job.
    + Body
    
            {
                "_links": {
                    "self": { "href": "/jobs/{id}/status" },
                    "parent": { "href": "/jobs/{id}" }
                },
                "id": "{id}",
                "total": 100000,
                "pending" : { 
                    "count" : 2000,
                    "percent" : 2.000
                },
                "processing" : { 
                    "count" : 3000,
                    "percent" : 3.000
                },
                "completed" : { 
                    "count" : 95000,
                    "percent" : 95.000
                }
            }

### Retrieve Account Job Status [GET]
+ Response 200
    [Jobs Status][]


# Group Message Resource

## Get Applications [/messaging-internal/v1/messages/applications/{id}]

### Retrieve an application by ID [GET]

+ Parameters
    + id (guid, required, `e1b6fdd1-6986-4260-9a0d-0f6ed643d23c`) ... The Application `id`.

+ Response 200 (application/json)

        {
            id: "e1b6fdd1-6986-4260-9a0d-0f6ed643d23c"
            name: "Administration"
            description: "Administration"
            createdDate: "2013-07-02T12:12:00"
            modifiedDate: "2014-06-10T15:10:37.73"
            applicationType: 2
            applicationState: 1
            uRL: "http://imh.IN5580/Admin/"
            iconURL: "http://imh.IN5580/hub/images/admin-icon.png"
            logoutURL: "http://IN5580/Presentation/Logout.aspx"
            isVisibleIMH: false
        }
        
## Get Application Collection [/messaging-internal/v1/messages/applications{?page,pageSize,fields,filter,orderBy}]

### Gets the application collection [GET]

+ Parameters
    + page = `1` (integer, optional)
        Page of the collection to return.
    + pageSize = `25` (integer, optional)
        Number of objects to display per page.
    + orderBy = `name asc` (string, optional, `modifiedDate desc`)
        Field and direction used to sort the results. System-defined *sortable* fields are listed to the right.
        + Values
            + `name`
            + `createdDate`
            + `modifiedDate`
    + filter (string, optional)
        JSON Collection of filter objects to be used to filter results.
        + Values
            + `name`
            + `description`
            + `createdDate`

+ Response 200 (application/json)

        {
            count: 54
            page: 1
            pageSize: 3
            -links: {
                -self: {
                    href: "/v1/messages/applications?$page=1&$pagesize=3"
                }
                -next: {
                        href: "/v1/messages/applications?$page=2&$pagesize=3"
                }
            }
            -items: [3]
                -0:  {
                    id: "e1b6fdd1-6986-4260-9a0d-0f6ed643d23c"
                    name: "Administration"
                    description: "Administration"
                    createdDate: "2013-07-02T12:12:00"
                    modifiedDate: "2014-06-10T15:10:37.73"
                    applicationType: 2
                    applicationState: 1
                    uRL: "http://imh.IN5580/Admin/"
                    iconURL: "http://imh.IN5580/hub/images/admin-icon.png"
                    logoutURL: "http://IN5580/Presentation/Logout.aspx"
                    isVisibleIMH: false
                }
                -1:  {
                    id: "995faa9d-32c5-4b5b-b383-4fa147de88f8"
                    name: "Adobe Analytics"
                    description: "Adobe Analytics"
                    createdDate: "2013-07-02T12:12:00"
                    modifiedDate: "2014-06-10T15:10:37.73"
                    applicationType: 3
                    applicationState: 1
                    uRL: "http://imh.IN5580/AdobeAnalytics/default.html"
                    iconURL: "http://imh.IN5580/AdobeAnalytics/images/generic-icon.png"
                    logoutURL: ""
                    isVisibleIMH: true
                }
                -2:  {
                    id: "2370e7c0-caf9-e011-af50-001cc4948c0a"
                    name: "AdSleuth"
                    description: "AdSleuth for the HubExchange enables Marketers to visualize and manage online display and search "
                    createdDate: "2013-07-02T12:12:00"
                    modifiedDate: "2014-06-10T15:00:36.98"
                    applicationType: 4
                    applicationState: 1
                    uRL: "http://adsleuth.rarebirdinc.com/dashboard"
                    iconURL: "http://imh.IN5580/hub/images/dev-icon.png"
                    logoutURL: "http://adsleuth.rarebirdinc.com/saml/logout"
                    isVisibleIMH: true
                }
            
        }

## Send a Triggered Message [/messaging-internal/v1/messages/{id}/send]

### Send a triggered send definition message [PUT]
+ Request (application/json)

        {
            "customerKey": "Send Customer Key",
            "emailAddress" : "an@email.com",
            "subscriberKey" : "an@email.com",
            "attributes" : [
                /* any attributes */
            ]
        }
        
+ Response 202

# Group Lists Resource

## Lists [/MessagingService-Internal/v1/lists]

### Create a List [POST]
+ Request(application/json)

        {
            "key": "My key",
            "name": "A new list",
            "description": "blah blah blah",
            "categoryId": 5501,
            "SendClassificationId": "ee03d794-fcbf-4ca6-87c4-7a8b58eeaccf",
            "SubConfirmEmailId": 1234,
            "SubConfirm": true,
            "ConfirmLandingPage": "www.mylandingpage.com",
            "ConfirmLandingPageId": 12345,
            "WelcomeEmailId": 1234,
            "Type": "Private",
            "UseDefaultLandingPage": true,
            "bOIReplyEmail" : "signmeup"
        }


        
+ Response 201 
   
## Get ListsCounts [/emailservice/v1/lists/subscribercounts]

### Gets the list count [POST]

+ Request (applicaiton/json)

        {
            "ListIdsSubscriberCounts": [
                {
                  "ListId": 3951
                },
                {
                  "ListId": 4019
                },
                {
                  "ListId": 4022
                },
                {
                  "ListId": 4025
                },
                {
                  "ListId": 4035
                }
            ]
        }
        
+ Response 200 (application/json)

        [
          {
            "listId": 3951,
            "subscriberCount": 6
          },
          {
            "listId": 4019,
            "subscriberCount": 0
          },
          {
            "listId": 4022,
            "subscriberCount": 0
          },
          {
            "listId": 4025,
            "subscriberCount": 6
          },
          {
            "listId": 4035,
            "subscriberCount": 3
          }
        ]

## Get ListCollection [/messagingservice-internal/v1/lists/category/{CategoryID}?FullType=RANDOM&Name=rg]

### Gets the ListCollection by category id [GET]

+ Parameters
    + CategoryID (required, int, `4040`) ... `ID` of the category for which to retrieve folders.
    + FullType (optional, string, `Standard, salesforce, salesforcereport, master, public, private, random, filtered, salesforcegroup, extendedgroup, partnermasterlist, partnerftaflist`) ... `Type` of Lists to retrieve.
    + Name (optional, int, `4040`) ... Return the lists that start with `Name`.  


+ Response 200 (application/json)

        {
          "page": 1,
          "pageSize": 2,
          "count": 17,
          "links": {},
          "items": [
            {
              "listId": "4039",
              "name": "nRGroup1",
              "customerKey": "nRGroup1 - 4033",
              "createdDate": "2013-04-04T15:27:25.12",
              "lastModifiedBy": 10650001,
              "lastModifiedDate": "2013-06-11T12:08:27.597",
              "mID": 10650005,
              "eID": 10650005,
              "categoryId": 4033,
              "subConfirm": false,
              "description": "RGroup1 Description",
              "sourceListId": 3951,
              "type": 6,
              "listObjectId": "6fe92366-955c-446b-b836-d308b9b2fee4",
              "ownerId": 10650001,
              "listStatus": "New",
              "classificationId": 0,
              "classification": "ExactTargetList",
              "fullType": "Qty",
              "subConfirmEmailName": "",
              "subConfirmEmailId": "",
              "subConfirmEmailSubject": "",
              "confirmLandingPage": "",
              "tSOptInCustomerKey": "",
              "lastModifiedByName": "rmccammonE2",
              "ownerIDName": "rmccammonE2",
              "refreshDate": "2013-06-11T12:08:27.597",
              "sourceListName": "My Source List"
            }
          ]
        }

## Retrieve/Modify a List by ID [/MessagingService-Internal/v1/lists/{id}]

+ Parameters
    + id (required, int, `1234`) ... The List `id`.
   
 
### Get a list by id [GET]

+ Response 200 

        {
            "listId": 4123,
            "customerKey": "Exists in list of values - 5501",
            "name": "Exists in list of values",
            "description": "blah blah blah",
            "categoryId": 5501,
            "createdDate": "2013-02-11T12:42:38.28",
            "lastModifiedDate": "2013-02-11T12:42:48.857",
            "lastModifiedByName": "black_core ",
            "sourceListId": 4088,
            "sourceListName": "All Subscribers",
            "lastRefreshedDate": "2013-02-11T12:43:00",
            " SubConfirm": true,
            " SubConfirmEmailId": 4022,
            " WelcomeEmailId": 4023,
            " ConfirmLandingPage": "http://www.google.com",
            " ConfirmLandingPageId": 4024,
            " UseDefaultLandingPage": true,
            "listObjectId": "8e017123-777c-4bd1-b742-467e719e4aa4",
            "IsPublic":true,
            "iD": "4022",
            "campaigns": [
                {
                  "campaignCode": "CD3",
                  "description": "CampaignDef3",
                  "isActive": false,
                  "createdBy": 10650001,
                  "display": {
                    "restItemID": 0,
                    "propertyName": "Color",
                    "propertyValue": "red",
                    "isActive": false,
                    "lastUpdated": "2013-05-30T13:20:59.8043637-04:00",
                    "mID": 0,
                    "eID": 0
                  },
                  "lastUpdated": "2013-05-30T13:20:59.8043637-04:00",
                  "mID": 0,
                  "eID": 0
                }
        }
        

### Update a list by id [PATCH]

+ Request (application/json)

        {
         "description": "Filtered List Test 24",
        }

+ Response 200 

        {
            "listId": 4022,
            "description": "Filtered List Test 24",
            "lastModifiedDate" : "2013-05-03T11:06:29.123",
            "lastModifiedByName" : "dkrishnegowda app user                            "
        }

### Delete a list by id [DELETE]

+ Response 204 
        

## Copy List [/MessagingService-Internal/v1/lists/{id}/copy?CopySubscribers=true]

### Copies a list [POST]

+ Parameters
    + id (required, int, `1234`) ... The list `id`.
    + CopySubscribers (optional, bool, `true`) ...  If set to true, the route will copy the subscribers associated to the list from the source list to the destination list. If set to false, only the list metadata will be copied.

+ Request (application/json)

        {
            "name": " Copy 1",
            "description": "A copy of the list",
            "CategoryId": 5501,
            "CustomerKey": "My cust key"
        }

+ Response 200  (application/json)

        {
            "listId": 4183,
            "customerKey": "Males Copy 3 - 5501",
            "name": "Males Copy 3",
            "description": "A copy of the males list",
            "categoryId": 5501,
            "createdDate": "2013-03-27T16:12:48.95",
            "lastModifiedDate": "2013-03-27T16:12:48.95",
            "lastModifiedByName": "black_core ",
            "sourceListId": 4088,
            "sourceListName": "All Subscribers",
            "totalSubCount": 1,
            "lastRefreshedDate": "2013-03-27T16:12:48.95",
            "subConfirm": false,
            "confirmLandingPage": "",
            "isConfirmLandingPage": false,
            "useDefaultLandingPage": true
            "isPublic": false,
            "isSalesForce": false
        }


## Export List [/MessagingService-Internal/v1/lists/{id}/export]

### Exports a list [POST]

+ Parameters
    + id (required, int, `1234`) ... The list `id`.
    
+ Request (application/json)

        {
          "exportType": "LIST",
          "deliveryType": "EMAIL",
          "profileAttributeIDs": [211, 212, 215, 1173],
          "profileAttributeNames": ["HTML Emails", "Email Status"],
          "emailAddress": "kgong@exacttarget.com",
          "fileType": "csv",
          "zipCompress": false,
          "resultFileName": "mdh",
          "overwrite": false
        }

+ Response 200  (integer)

        123


## FilteredList [/messagingservice-internal/v1/lists/filteredLists]

### Create a FilteredList [POST]
+ Request(application/json)

        { 
            "name": "Exists in list of values", 
            "description": "blah blah blah", 
            "categoryId": 5501, 
            "SourceListId": 4088, 
            "FilterXML": "<FilterDefinition Source=\"SubscriberAttribute\"><ConditionSet Operator=\"OR\" ConditionSetName=\"Outer Grouping\"><Condition ID=\"1660\" isParam=\"false\" Operator=\"Equals\" ><Value><![CDATA[M]]></Value></Condition></ConditionSet></FilterDefinition>" 
        } 

        
+ Response 201 (application/json)

        { 
            "createdByName": "user1", 
            "customerKey": "SaveBuildFilterTest29 - 4875", 
            "listId": 4171, 
            "name": "SaveBuildFilterTest26", 
            "description": "Filtered List Test 26", 
            "categoryId": 4875, 
            "createdDate": "2013-03-20T14:05:00.4916378-04:00", 
            "lastModifiedDate": "2013-03-20T14:05:00.4916378-04:00", 
            "lastModifiedByName": "user1", 
            "sourceListId": 4088, 
            "sourceListName": "All Subscribers", 
            "totalSubCount": 0, 
            "filterXML": "<FilterDefinition Source=\"SubscriberAttribute\"><ConditionSet Operator=\"OR\" ConditionSetName=\"Outer Grouping\"><Condition ID=\"1660\" isParam=\"false\" Operator=\"Equals\" ><Value><![CDATA[M]]></Value></Condition></ConditionSet></FilterDefinition>", 
            "type": "Filtered", 
            "lastRefreshedByName": "" 
        } 
        
## FilteredList by Id [/messagingservice-internal/v1/lists/filteredLists/{id}]

### Get a FilteredList [GET]

+ Parameters
    + id (required, int, `1234`) ... The list `id`.
    
+ Response 200 (application/json)

        Filtered List: 
        { 
          "filterXML": "<FilterDefinition Source=\"SubscriberAttribute\"><ConditionSet Operator=\"OR\" ConditionSetName=\"Outer Grouping\"><Condition ID=\"1660\" isParam=\"false\" Operator=\"Equals\" ><Value><![CDATA[M]]></Value></Condition></ConditionSet></FilterDefinition>", 
          "createdByName": "rmccammonE2                                       ", 
          "isBuiltFromDataFilter": false, 
          "type": "Filtered", 
          "listId": 4022, 
          "customerKey": "SaveBuildFilterTest23 - 4033", 
          "name": "FDTestName1", 
          "description": "Filtered List Test 25", 
          "categoryId": 4033, 
          "createdDate": "2013-03-06T09:42:17.303", 
          "lastModifiedDate": "2013-05-06T12:34:29.513", 
          "lastModifiedByName": "rmccammonE2                                       ", 
          "sourceListId": 3951, 
          "sourceListName": "TestDE1a", 
          "totalSubCount": 0, 
          "lastRefreshedDate": "2013-03-06T09:42:17.303", 
          "subConfirm": false, 
          "confirmLandingPage": "", 
          "isConfirmLandingPage": false, 
          "useDefaultLandingPage": true, 
          "isPublic": false, 
          "isSalesForce": false, 
          "iD": "4022", 
          "campaigns": [ 
            { 
              "campaignCode": "CD3", 
              "description": "CampaignDef3", 
              "isActive": false, 
              "createdBy": 10650001, 
              "display": { 
              "restItemID": 0, 
              "propertyName": "Color", 
              "propertyValue": "red", 
              "isActive": false, 
              "lastUpdated": "2013-05-30T13:20:59.8043637-04:00", 
              "mID": 0, 
              "eID": 0 
              }, 
              "lastUpdated": "2013-05-30T13:20:59.8043637-04:00", 
              "mID": 0, 
              "eID": 0 
            } 
          ] 
        } 

### Update a FilteredList [PATCH]

+ Request(application/json)

        { 
            "SourceListId": 4088, 
            "FilterXML": "<FilterDefinition Source=\"SubscriberAttribute\"><ConditionSet Operator=\"OR\" ConditionSetName=\"Outer Grouping\"><Condition ID=\"1660\" isParam=\"false\" Operator=\"Equals\" ><Value><![CDATA[M]]></Value></Condition></ConditionSet></FilterDefinition>" 
        } 

+ Response 200 (application/json)

        { 
            "createdByName": "user1", 
            "listId": 4171, 
            "name": "SaveBuildFilterTest26", 
            "description": "Filtered List Test 26", 
            "categoryId": 4875, 
            "createdDate": "2013-03-20T14:05:00.4916378-04:00", 
            "lastModifiedDate": "2013-03-20T14:05:00.4916378-04:00", 
            "lastModifiedByName": "user1", 
            "sourceListId": 4088, 
            "sourceListName": "All Subscribers", 
            "totalSubCount": 0, 
            "filterXML": "<FilterDefinition Source=\"SubscriberAttribute\"><ConditionSet Operator=\"OR\" ConditionSetName=\"Outer Grouping\"><Condition ID=\"1660\" isParam=\"false\" Operator=\"Equals\" ><Value><![CDATA[M]]></Value></Condition></ConditionSet></FilterDefinition>", 
            "type": "Filtered", 
            "lastRefreshedByName": "" 
        } 
        
## FilteredList Refresh [/messagingservice-internal/v1/lists/filteredLists/{id}/refresh]

### Refresh a FilteredList [POST]

+ Parameters
    + id (required, int, `1234`) ... The list `id`.

+ Response 204

## FilteredList Migrate [/messagingservice-internal/v1/lists/filteredLists/{id}/migrate]

### Migrate a FilteredList [POST]

+ Parameters
    + id (required, int, `1234`) ... The list `id`.

+ Response 204

## Get Last Refreshed By Name [/emailservice/v1/lists/filteredLists/lastrefreshedbynames]

### Gets the last refreshed a FilteredList by name [POST]

+ Request(application/json)
        
        { 
            "listidslastrefreshedbynames": 
            [ 
                {"listid":4087},  
                {"listid":4099},  
                {"listid":4092},  
                {"listid":4091},  
                {"listid":4090} 
            ] 
        } 

+ Response 200 (application/json)

        [5] 
        0:  { 
            listId: 4087 
            lastRefreshedByName: "" 
        } 
        1:  { 
            listId: 4099 
            lastRefreshedByName: "black_core" 
        } 
        2:  { 
            listId: 4092 
        } 
        3:  { 
            listId: 4091 
            lastRefreshedByName: "black_core" 
        } 
        4:  { 
            listId: 4090 
            lastRefreshedByName: "black_core" 
        } 

## Get RandomLists [/emailservice/v1/lists/randomdlists/{id}]

### Gets the random lists by id [GET]

+ Parameters
    + id (required, int, `1234`) ... The list `id`.

+ Response 200 (application/json)

        { 
            "type": "Random", 
            "createdByName": "core_user1 ", 
            "quantity": 50, 
            "quantityType": "Percentage", 
            "listId": 4156 
        } 

## Create RandomLists [/emailservice/v1/lists/randomdlists]

### Creates the random lists [POST]

+ Request (application/json)

        { 
            "randomLists": 
            [
                {
                    "SourceListId": 3951,
                    "Name": "RGroup1",
                    "Description": "RGroup1 Description",
                    "CategoryId": 4033,
                    "Quantity": 2,
                    "QuantityType": 1
                },
                {   
                    "SourceListId": 3951,
                    "Name": "RGroup2",
                    "Description": "RGroup2 Description",
                    "CategoryId": 4033,
                    "Quantity": 2,
                    "QuantityType": 1
                },
                {
                    "SourceListId": 3951, 
                    "Name": "RGroup3",
                    "Description": "RGroup3 Description",
                    "CategoryId": 4033,
                    "Quantity": 2,
                    "QuantityType": 1
                }
            ] 
        } 


+ Response 200 (application/json)

        [ 
            (3) 
            { 
                "type": "Random", 
                "createdByName": "", 
                "quantity": 2, 
                "quantityType": "Count", 
                "listId": 4030, 
                "customerKey": "", 
                "name": "RGroup4", 
                "description": "RGroup4 Description", 
                "categoryId": 4033, 
                "createdDate": "0001-01-01T00:00:00", 
                "lastModifiedDate": "2013-03-21T13:57:50.4644955-04:00",
                "lastModifiedByName": "", 
                "sourceListId": 3951, 
                "sourceListName": "TestDE1a", 
                "totalSubCount": 0, 
                "subConfirm": false, 
                "subConfirmEmailName": "", 
                "subConfirmEmailSubject": ""                        
            }, 
            { 
                "type": "Random", 
                "createdByName": "", 
                "quantity": 2, 
                "quantityType": "Count", 
                "listId": 4031, 
                "customerKey": "", 
                "name": "RGroup5", 
                "description": "RGroup5 Description", 
                "categoryId": 4033, 
                "createdDate": "0001-01-01T00:00:00", 
                "lastModifiedDate": "2013-03-21T13:57:50.6405131-04:00", 
                "lastModifiedByName": "", 
                "sourceListId": 3951, 
                "sourceListName": "TestDE1a", 
                "totalSubCount": 0, 
                "subConfirm": false, 
                "subConfirmEmailName": "", 
                "subConfirmEmailSubject": "" 
            }, 
            { 
                "type": "Random", 
                "createdByName": "", 
                "quantity": 2, 
                "quantityType": "Count", 
                "listId": 4032, 
                "customerKey": "", 
                "name": "RGroup6", 
                "description": "RGroup6 Description", 
                "categoryId": 4033, 
                "createdDate": "0001-01-01T00:00:00", 
                "lastModifiedDate": "2013-03-21T13:57:50.6645155-04:00", 
                "lastModifiedByName": "", 
                "sourceListId": 3951, 
                "sourceListName": "TestDE1a", 
                "totalSubCount": 0, 
                "subConfirm": false, 
                "subConfirmEmailName": "", 
                "subConfirmEmailSubject": "" 
            } 
        ] 
        
## Get Subscriber Status Counts [/MessagingService-Internal/v1/lists/{id}/subscriberstatuscounts]

### Gets the subscriber status counts by id [GET]

+ Parameters
    + id (required, int, `1234`) ... The list `id`.

+ Response 200 (application/json)

        { 
            bounceCount: 0 
            heldCount: 0 
            unsubscribedCount: 0 
            activeCount: 0 
        } 

## Get Subscriber Counts [/MessagingService-Internal/v1/lists/subscribercounts]

### Gets the subscriber count [POST]

+ Request (application/json)

        {"ListIdSubscriberCounts": [ 
            { 
                "listId": 123 
            }, 
            { 
                "listId": 456 
            } 
        ]}

+ Response 200 (application/json)

        [ 
            { 
                "listId": 123, 
                "subscriberCount": 0 
            }, 
            { 
                "listId": 456, 
                "subscriberCount": 4 
            } 
        ] 


# Group Contact API
Documentation of the ContactServices API

## General API Contracts

 `filterJSON` Specification
    
    {
        "conditionSet" : {      
            "operator" : "And", 
            "conditionSets" : [],
            "conditions" : [{    
                "attribute" : {  
                    "key" : "",  
                    "id" : "",   
                    "isCustomerData" : false
                },
                "operator" : "In",                  
                "values" : ["", "",]
            }]
        }
    }


## First Class Resources
 
 - __Contact__ - a single contact resource identifiable by either a ContactID or a ContactKey
 - __ContactEvent__ a event linked to an identifiable contact by either a ContactID or a ContactKey.
 - __Schema__- the model representation of all data related to contacts for a given account. 
 - __AttributeSet__ - the data related to a specific collection of *AttributeDefinitions* within the *ContactSchema*

## FilterJSON [/search]

+ Model (application/json)

    JSON Representation of a `filterJSON' object.
    + Body
            
            {
                "conditionSet" : {      
                    "operator" : "And", 
                    "conditionSets" : [],
                    "conditions" : [{    
                        "attribute" : {  
                            "key" : "MobileDemographics.MobileNumber",  
                            "id" : "",   
                            "isCustomerData" : false
                        },
                        "operator" : "In",                  
                        "values" : ["3171233456", "",]
                    }]
                }
            }


# Group Contact

## Contacts Collection [/contacts] 
A collection of Contacts.

+ Model (application/json)
    
    + Body
            
            {
                "count": 2,
                "page": 1,
                "pageSize": 25,
                "_links": {
                    "self": { "href": "/contacts/{?filter}" },
                    "schemas": { "href": "/schemas" },
                    "contactSchemas": { "href": "/schemas/type:{contacts}" },
                },
                "items": [{
                        "contactID": 12345,
                        "contactKey": "sgest@somewhere.com"
                    },
                    {
                        "contactID": 2343,
                        "contactKey": "ugest@somewherelse.com"
                    }
                ]
            }

### Create Contacts [POST]
+ Request
    
        {
            "contactKey": null,
            "contactId": null,
            "attributeSets": [{
                "name": "Email Demographics",
                "items": [{
                    "values": [{
                        "name": "Last Name",
                        "value": "Nukem"
                    },
                    {
                        "name": "First Name",
                        "value": "Antoine"
                    }]
                }]
            },
            {
                "name": "Email Addresses",
                "items": [{
                    "values": [{
                        "name": "Email Address",
                        "value": "tnewcome@exacttarget.com"
                    },
                    {
                        "name": "HTML Enabled",
                        "value": true
                    }]
                }]
            }]
        }

        
+ Response 200
    [Contacts Collection][]

### Update Contacts [PATCH]
+ Request
    
        {
            "contactKey": "tnewcome@exacttarget.com",
            "contactId": 12345678,
            "attributeSets": [{
                "name": "Email Demographics",
                "items": [{
                    "values": [{
                        "name": "Last Name",
                        "value": "Nukem"
                    },
                    {
                        "name": "First Name",
                        "value": "Antoine"
                    }]
                }]
            },
            {
                "name": "Email Addresses",
                "items": [{
                    "values": [{
                        "name": "Email Address",
                        "value": "tnewcome@exacttarget.com"
                    },
                    {
                        "name": "HTML Enabled",
                        "value": true
                    }]
                }]
            }]
        }

+ Response 200
    [Contacts Collection][]

### Replace Contacts [PUT]
+ Request
    
        {
            "contactKey": "tnewcome@exacttarget.com",
            "contactId": 12345678,
            "attributeSets": [{
                "name": "Email Demographics",
                "items": [{
                    "values": [{
                        "name": "Last Name",
                        "value": "Nukem"
                    },
                    {
                        "name": "First Name",
                        "value": "Antoine"
                    }]
                }]
            },
            {
                "name": "Email Addresses",
                "items": [{
                    "values": [{
                        "name": "Email Address",
                        "value": "tnewcome@exacttarget.com"
                    },
                    {
                        "name": "HTML Enabled",
                        "value": true
                    }]
                }]
            }]
        }

+ Response 200
    [Contacts Collection][]

## Search Contacts [/schema/{schemaId}/contacts/search]
Retrieve a list of contacts that match a filter condition represented as `filterJSON` posted in the message body.

### Search Contacts [POST]
+ Request 
    [FilterJSON][]
+ Response 200
    [Contacts Collection][]

# Group ContactEvent

## ContactEvent [/contactEvents]
Definition of a ContactEvent

+ Model (application/json)
    JSON representation of a single ContactEvent  resource.

    + Body
    
            {
        
                "contactKey": "sgest@comewhere.com",
                "contactID": "1234567",
                "eventDefinitionKey": "myevent",
                "data": [{
                    "key": "RetailOrderEvent",
                    "name": "Retail Order Event",
                    "id": "5CE001F0-6B8F-E311-A274-08EDB9DDEBF0",
                    "items": [{
                        "values": [{
                            "name": "Customer Key",
                            "value": "tnewcome@exacttarget.com",
                        },
                        {
                            "name": "Order Number",
                            "value": "123456"
                        },
                        {
                            "name": "Order Total",
                            "value": "177.99"
                        }]
                    }]
                }]
            }

### Create a ContactEvent [POST]
+ Request
    [ContactEvent][]
+ Response 200
    [ContactEvent][]

# Group Schema
Schema related resources of the *Contacts-API*

## Schemas Collection [/schemas]

+ Model (applcation/json)
JSON representation of a Schema collection response.

    + Body
        
            {
                "count": 2,
                "page": 1,
                "pageSize": 25,
                "links": {
                    "self": { "href": "/schemas" }
                },
                "items":[{
                    "links": {
                        "self": { "href": "/schemas/{schemaId}" }
                        "attributeGroups": { "href": "/schemas/{schemaId}/attributeGroups" },
                        "attributeSetDefinitions": { "href": "/schemas/{schemaId}/attributeSetDefinitions" }
                    }
                    "id": "36E001F0-6B8F-E311-A274-08EDB9DDEBF0",
                    "version": 1,
                    "schemaType": "Contacts",
                    "enterpriseID": 10650001,
                    "availableBusinessUnits": [10650002,10650003]
                },
                {
                    "links": {
                        "self": { "href": "/schemas/{id}" }
                        "attributeGroups": { "href": "/schemas/{id}/attributeGroups" },
                        "attributeSetDefinitions": { "href": "/schemas/{id}/attributeSetDefinitions" }
                    }
                    "id": "E6158F81-ABAB-E311-80AE-08EDB9DDEBF0",
                    "version": 1,
                    "schemaType": "Contacts",
                    "enterpriseID": 10650001,
                    "availableBusinessUnits": [10650004,10650005]
                }]
            }

### Retrieve the Schemas collection for the current account [GET]
+ Response 200
    [Schemas Collection][]

## Schema by SchemaId [/schemas/{schemaId}]

+ Model (application/json)
JSON representation of a Schema response payload.

    + Body
    
            {
                "schema":{
                    "id": "36E001F0-6B8F-E311-A274-08EDB9DDEBF0",
                    "version": 1,
                    "schemaType": "Contacts",
                    "enterpriseID": 10650001,
                    "availableBusinessUnits": [10650002,10650003],
                    "links": {
                        "self": { "href": "/schemas/{schemaId}" }
                        "attributeGroups": { "href": "/schemas/{schemaId}/attributeGroups" },
                        "attributeSetDefinitions": { "href": "/schemas/{id}/attributeSetDefinitions" }
                    }
                }
            }

### Retrieve a Schema by Id [GET]
+ Response 200
    [Schema by SchemaId][]

## AttributeGroup Collection [/schemas/{SchemaId}/attributeGroups]
A colection of AttributeGroup references.

+ Model (applcation/json)

    + Body
    
            {
                "count": 2,
                "page": 1,
                "pageSize": 25,
                "links": {
                    "self": {"href": "/schemas/{schemaId}/attributeGroups" },
                    "schema": {"href": "/schemas/{schemaId}" },
                },
                "items": [{
                    "links": {
                        "self": {"href": "/attributeGroups/{id}" }
                    },
                    "id": "4de15aca-2c17-e311-bb14-00237d5401ce",
                    "key": "com.exacttarget.mobilepush.ETMobilePush",
                    "name": "ExactTarget MobilePush",
                    "parentId": "36E001F0-6B8F-E311-A274-08EDB9DDEBF0"
                },
                {
                    "links": {
                        "self": {"href": "/attributeGroups/{id}" }
                    },
                    "id": "4de15aca-2c17-e311-bb14-00237d5401ce",
                    "key": "com.exacttarget.mobilepush.ETMobilePush",
                    "name": "ExactTarget MobilePush",
                    "parentId": "36E001F0-6B8F-E311-A274-08EDB9DDEBF0"
                }]
            }

### Retrieve an AttributeGroup Collection for an identified Schema [GET]
+ Response 200
    [AttributeGroup Collection][]

## AttributeGroup by Id [/schemas/{schemaId}/attributeGroups/{id}]
A single AttributeGroup object.

+ Model (applcation/json)
JSON Representation of a single AttributeGroup resource.

    + Body
    
            {
                
                "attributeGroup": {
                    "links": {
                        "self": {"href": "/schemas/{parentReferenceId}/attributeGroups/{id}" },
                        "schema": {"href": "/schemas/{parentReferenceId}" },
                        "attributeSetDefinitions": {"href": "/schemas/{parentReferenceId}/attributeGroups/{id}/attributeSetDefinitions" 
                    },
                    "id": "4de15aca-2c17-e311-bb14-00237d5401ce",
                    "key": "com.exacttarget.mobilepush.ETMobilePush",
                    "name": "ExactTarget MobilePush",
                    "schemaId": "36E001F0-6B8F-E311-A274-08EDB9DDEBF0",
                    "isSystemDefined": true,
                    "applicationID": "131975ED-E859-4CC9-B479-62A615BC6C8A",
                    "applicationKey": "com.exacttarget.mobilepush",
                    "templateID": 100,
                    "fullyQualifiedName": "com.exacttarget.mobilepush.ETMobilePush",
                    "attributeGroupType": "standard",
                    
                },
                }
            }

### Retrieve an AttributeGroup by Id [GET]
+ Response 200
    [AttributeGroup by Id][]

## AttributeGroup by Key [/schemas/{schemaId}/attributeGroups/key:{key}]
A single AttributeGroup object.

+ Model (applcation/json)

    + Body
    
            {
                "attributeGroup": {
                    "links": {
                        "self": {"href": "/schemas/{schemaId}/attributeGroups/{id}" },
                        "schema": {"href": "/schemas/{schemaId}" },
                        "attributeSetDefinitions": {"href": "/schemas/{schemaId}/attributeGroups/{id}/attributeSetDefinitions" }
                    },
                    "id": "4de15aca-2c17-e311-bb14-00237d5401ce",
                    "key": "com.exacttarget.mobilepush.ETMobilePush",
                    "name": "ExactTarget MobilePush",
                    "schemaId": "36E001F0-6B8F-E311-A274-08EDB9DDEBF0",
                    "isSystemDefined": true,
                    "applicationID": "131975ED-E859-4CC9-B479-62A615BC6C8A",
                    "applicationKey": "com.exacttarget.mobilepush",
                    "templateID": 100,
                    "fullyQualifiedName": "com.exacttarget.mobilepush.ETMobilePush",
                    "attributeGroupType": "standard"
                }
            }

### Retrieve an AttributeGroup by Key [GET]
+ Response 200
    [AttributeGroup by Key][]

## AttributeGroup by Name [/schemas/{schemaId}/attributeGroups/name:{name}]
A single AttributeGroup object.

+ Model (applcation/json)

    + Body
    
            {
                "attributeGroup": {
                    "links": {
                        "self": {"href": "/schemas/{schemaId}/attributeGroups/{id}" },
                        "schema": {"href": "/schemas/{schemaId}" },
                        "attributeSetDefinitions": {"href": "/schemas/{schemaId}/attributeGroups/{id}/attributeSetDefinitions" }
                    },
                    "id": "4de15aca-2c17-e311-bb14-00237d5401ce",
                    "key": "com.exacttarget.mobilepush.ETMobilePush",
                    "name": "ExactTarget MobilePush",
                    "schemaId": "36E001F0-6B8F-E311-A274-08EDB9DDEBF0",
                    "isSystemDefined": true,
                    "applicationID": "131975ED-E859-4CC9-B479-62A615BC6C8A",
                    "applicationKey": "com.exacttarget.mobilepush",
                    "templateID": 100,
                    "fullyQualifiedName": "com.exacttarget.mobilepush.ETMobilePush",
                    "attributeGroupType": "standard"
                }
            }

### Retrieve an AttributeGroup by Name [GET]
+ Response 200
    [AttributeGroup by Name][]

## AttributeSetDefinition Collection [/schemas/{schemaId}/attributeSetDefinitions]
A collection of AttributeSetDefinition references for the identified schema.

+ Model (applcation/json)

    + Body
    
            {
                "count": 2,
                "page": 1,
                "pageSize": 25,
                "links": {
                        "self": { "href": "/schemas/{schemaId}/attributeSetDefinitions" }
                        "schema": { "href": "/schemas/{schemaId}" },
                    },
                "items": [{
                    "links": {
                        "self": { "href": "/attributeSetDefinitions/{id}" }
                    },
                    "id": "abe05aca-2c17-e311-bb14-00237d5401ce",
                    "name": "MobileConnect Demographics",
                    "key": "com.exacttarget.mobileconnect.MobileDemographics",
                    "parentId": "36E001F0-6B8F-E311-A274-08EDB9DDEBF0"
                },
                {
                    "links": {
                        "self": { "href": "/attributeSetDefinitions/{id}" }
                    },
                    "id": "abe05aca-2c17-e311-bb14-00237d5401ce",
                    "name": "Retail Orders",
                    "key": "RetailOrders",
                    "parentId": "36E001F0-6B8F-E311-A274-08EDB9DDEBF0"
                }]    
            }

### Retrieve an AttributeSetDefinitions Collection [GET]
+ Response 200
    [AttributeSetDefinition Collection][]


## AttributeGroups AttributeSetDefinition Collection [/attributeGroups/{id}/attributeSetDefinitions]
A collection of AttributeSetDefinition references for the identified schema.

+ Model (applcation/json)

    + Body
    
            {
                "count": 2,
                "page": 1,
                "pageSize": 25,
                "links": {
                        "self": { "href": "/attributeGroups/{groupId}/attributeSetDefinitions" }
                        "schema": { "href": "/schemas/{schemaId}" },
                        "attributeGroup": { "href": "/attributeGroups/{groupId}" },
                    },
                "items": [{
                    "links": {
                        "self": { "href": "/attributeSetDefinitions/{id}" }
                    },
                    "id": "abe05aca-2c17-e311-bb14-00237d5401ce",
                    "name": "MobileConnect Demographics",
                    "key": "com.exacttarget.mobileconnect.MobileDemographics",
                    "parentId": "36E001F0-6B8F-E311-A274-08EDB9DDEBF0"
                },
                {
                    "links": {
                        "self": { "href": "/attributeSetDefinitions/{id}" }
                    },
                    "id": "abe05aca-2c17-e311-bb14-00237d5401ce",
                    "name": "Retail Orders",
                    "key": "RetailOrders",
                    "parentId": "36E001F0-6B8F-E311-A274-08EDB9DDEBF0"
                }]    
            }

### Retrieve an AttributeGroups AttributeSetDefinitions Collection [GET]
+ Response 200
    [AttributeGroups AttributeSetDefinition Collection][]

## AttributeSetDefinition by Id [/schemas/{schemaId}/attributeSetDefinitions/{id}]
A single AttributeSetDefinition object.

+ Model (applcation/json)

    + Body
    
            {
                "attributeSetDefinition": {
                    "links": {
                        "self": { "href": "/schemas/{schemaId}/attributeSetDefinitions/{id}" },
                        "schema": { "href": "/schemas/{schemaId}" }
                    },
                    "id": "abe05aca-2c17-e311-bb14-00237d5401ce",
                    "name": "MobileConnect Demographics",
                    "key": "MobileDemographics",
                    "schemaId": "36E001F0-6B8F-E311-A274-08EDB9DDEBF0",
                    "relationships": [],
                    "attributes": [],
                    ...
                    ...more 
                }    
            }
            
### Retrieve an AttributeSetDefinition by Id [GET]
+ Response 200
    [AttributeSetDefinition by Id][]

## AttributeSetDefinition by Key [/schemas/{id}/attributeSetDefinitions/key:{key}]
A single AttributeSetDefinition object.

+ Model (applcation/json)

    + Body
    
            {
                "attributeSetDefinition": {
                    "links": {
                        "self": { "href": "/schemas/{schemaId}/attributeSetDefinitions/{id}" },
                        "schema": { "href": "/schemas/{schemaId}" }
                    },
                    "id": "abe05aca-2c17-e311-bb14-00237d5401ce",
                    "name": "MobileConnect Demographics",
                    "key": "MobileDemographics",
                    "schemaId": "36E001F0-6B8F-E311-A274-08EDB9DDEBF0",
                    "relationships": [],
                    "attributes": [],
                    ...
                    ...more 
                }    
            }
            
### Retrieve an AttributeSetDefinition by Key [GET]
+ Response 200
    [AttributeSetDefinition by Key][]

## AttributeSetDefinition by Name [/schemas/{id}/attributeSetDefinitions/name:{name}]
A single AttributeSetDefinition object.

+ Model (applcation/json)

    + Body
    
            {
                "attributeSetDefinition": {
                    "links": {
                        "self": { "href": "/schemas/{schemaId}/attributeSetDefinitions/{id}" },
                        "schema": { "href": "/schemas/{schemaId}" }
                    },
                    "id": "abe05aca-2c17-e311-bb14-00237d5401ce",
                    "name": "MobileConnect Demographics",
                    "key": "MobileDemographics",
                    "schemaId": "36E001F0-6B8F-E311-A274-08EDB9DDEBF0",
                    "relationships": [],
                    "attributes": [],
                    ...
                    ...more 
                }    
            }
            
### Retrieve an AttributeSetDefinition by Name [GET]
+ Response 200
    [AttributeSetDefinition by Name][]


# Group AttributeSet 
Data related resources of the *Contacts-API*

## Attribute Value Container

JSON Repesentation of an Attribute Value Container or a row of data.

    {
        "values": [{
            "name": "Customer Key",
            "value": "sgest@urkidding.com",
        },
        {
            "name": "Order Number",
            "value": "123456"
        },
        {
            "name": "Order Total",
            "value": "177.99"
        }]
    }

## AttributeSet Data by Id [/attributeSets/{id}]
A collection of Attribute Value Containers or the data rows of an identified Atribute Set using it's unique identifier.

+ Model (applcation/json)
JSON Representation of an AttributeSet Data payload.

    + Body

            {
                "count": 200,
                "page": 10,
                "pageSize": 3,
                "Id": "abe05aca-2c17-e311-bb14-00237d5401ce",
                "Key": "Retail Orders",
                "Name:" "Retail Orders",
                "SchemaId": "36E001F0-6B8F-E311-A274-08EDB9DDEBF0",
                "_links": {
                        "self": { "href": "/attributeSets/{id}"},
                        "next": { "href": "/attributeSets/{id}?$page=11&$pageSize=3" },
                        "prev": { "href": "/attributeSets/{id}?$page=9&$pageSize=3" },
                        "attributeSetDefinition":{},
                    },
                
                "items": [{
                    "values": [{
                        "name": "Customer Key",
                        "value": "sgest@urkidding.com",
                    },
                    {
                        "name": "Order Number",
                        "value": "123456"
                    },
                    {
                        "name": "Order Total",
                        "value": "177.99"
                    }]
                },
                {
                    "values": [{
                        "name": "Customer Key",
                        "value": "sgest@urkidding.com",
                    },
                    {
                        "name": "Order Number",
                        "value": "123456"
                    },
                    {
                        "name": "Order Total",
                        "value": "177.99"
                    }]
                },
                {
                    "values": [{
                        "name": "Customer Key",
                        "value": "sgest@urkidding.com",
                    },
                    {
                        "name": "Order Number",
                        "value": "123456"
                    },
                    {
                        "name": "Order Total",
                        "value": "177.99"
                    }]
                }]
            }
            
### AttributeSet Data by Id [GET]
+ Response 200
    [AttributeSet Data by Id][]

### Insert AttributeSet Data by Id [POST]
+ Request
        
            {

                "items": [{
                    "values": [{
                        "name": "Customer Key",
                        "value": "sgest@urkidding.com",
                    },
                    {
                        "name": "Order Number",
                        "value": "123456"
                    },
                    {
                        "name": "Order Total",
                        "value": "177.99"
                    }]
                },
                {
                    "values": [{
                        "name": "Customer Key",
                        "value": "sgest@urkidding.com",
                    },
                    {
                        "name": "Order Number",
                        "value": "123456"
                    },
                    {
                        "name": "Order Total",
                        "value": "177.99"
                    }]
                },
                {
                    "values": [{
                        "name": "Customer Key",
                        "value": "sgest@urkidding.com",
                    },
                    {
                        "name": "Order Number",
                        "value": "123456"
                    },
                    {
                        "name": "Order Total",
                        "value": "177.99"
                    }]
                }]
            }

+ Response 200
    [AttributeSet Data by Id][]

### Update AttributeSet Data by Id [PATCH]
+ Request
            
            {

                "items": [{
                    "values": [{
                        "name": "Customer Key",
                        "value": "sgest@urkidding.com",
                    },
                    {
                        "name": "Order Number",
                        "value": "123456"
                    },
                    {
                        "name": "Order Total",
                        "value": "177.99"
                    }]
                },
                {
                    "values": [{
                        "name": "Customer Key",
                        "value": "sgest@urkidding.com",
                    },
                    {
                        "name": "Order Number",
                        "value": "123456"
                    },
                    {
                        "name": "Order Total",
                        "value": "177.99"
                    }]
                },
                {
                    "values": [{
                        "name": "Customer Key",
                        "value": "sgest@urkidding.com",
                    },
                    {
                        "name": "Order Number",
                        "value": "123456"
                    },
                    {
                        "name": "Order Total",
                        "value": "177.99"
                    }]
                }]
        }

+ Response 200
    [AttributeSet Data by Id][]

### Replace AttributeSet Data by Id [PUT]

+ Request

            {

                "items": [{
                    "values": [{
                        "name": "Customer Key",
                        "value": "sgest@urkidding.com",
                    },
                    {
                        "name": "Order Number",
                        "value": "123456"
                    },
                    {
                        "name": "Order Total",
                        "value": "177.99"
                    }]
                },
                {
                    "values": [{
                        "name": "Customer Key",
                        "value": "sgest@urkidding.com",
                    },
                    {
                        "name": "Order Number",
                        "value": "123456"
                    },
                    {
                        "name": "Order Total",
                        "value": "177.99"
                    }]
                },
                {
                    "values": [{
                        "name": "Customer Key",
                        "value": "sgest@urkidding.com",
                    },
                    {
                        "name": "Order Number",
                        "value": "123456"
                    },
                    {
                        "name": "Order Total",
                        "value": "177.99"
                    }]
                }]
        }

+ Response 200
    [AttributeSet Data by Id][]

## AttributeSet Data by Name [/schemas/{schemaId}/attributeSets/name:{name}]
A collection of Attribute Value Containers or the data rows of an identified Atribute Set using it's unique identifier.

+ Model (applcation/json)
JSON Representation of an AttributeSet Data payload.

    + Body

            {
                "count": 200,
                "page": 10,
                "pageSize": 3,
                "Id": "abe05aca-2c17-e311-bb14-00237d5401ce",
                "Key": "Retail Orders",
                "Name:" "Retail Orders",
                "SchemaId": "36E001F0-6B8F-E311-A274-08EDB9DDEBF0",
                "_links": {
                        "self": { "href": "/attributeSets/{id}"},
                        "next": { "href": "/attributeSets/{id}?$page=11&$pageSize=3" },
                        "prev": { "href": "/attributeSets/{id}?$page=9&$pageSize=3" },
                        "attributeSetDefinition":{},
                    },
                
                "items": [{
                    "values": [{
                        "name": "Customer Key",
                        "value": "sgest@urkidding.com",
                    },
                    {
                        "name": "Order Number",
                        "value": "123456"
                    },
                    {
                        "name": "Order Total",
                        "value": "177.99"
                    }]
                },
                {
                    "values": [{
                        "name": "Customer Key",
                        "value": "sgest@urkidding.com",
                    },
                    {
                        "name": "Order Number",
                        "value": "123456"
                    },
                    {
                        "name": "Order Total",
                        "value": "177.99"
                    }]
                },
                {
                    "values": [{
                        "name": "Customer Key",
                        "value": "sgest@urkidding.com",
                    },
                    {
                        "name": "Order Number",
                        "value": "123456"
                    },
                    {
                        "name": "Order Total",
                        "value": "177.99"
                    }]
                }]
            }
            
### Retrieve AttributeSet Data by Name [GET]
+ Response 200
    [AttributeSet Data by Name][]

### Insert AttributeSet Data by Name [POST]
+ Request
        
            {

                "items": [{
                    "values": [{
                        "name": "Customer Key",
                        "value": "sgest@urkidding.com",
                    },
                    {
                        "name": "Order Number",
                        "value": "123456"
                    },
                    {
                        "name": "Order Total",
                        "value": "177.99"
                    }]
                },
                {
                    "values": [{
                        "name": "Customer Key",
                        "value": "sgest@urkidding.com",
                    },
                    {
                        "name": "Order Number",
                        "value": "123456"
                    },
                    {
                        "name": "Order Total",
                        "value": "177.99"
                    }]
                },
                {
                    "values": [{
                        "name": "Customer Key",
                        "value": "sgest@urkidding.com",
                    },
                    {
                        "name": "Order Number",
                        "value": "123456"
                    },
                    {
                        "name": "Order Total",
                        "value": "177.99"
                    }]
                }]
            }

+ Response 200
    [AttributeSet Data by Id][]

### Update AttributeSet Data by Name [PATCH]
+ Request
            
            {

                "items": [{
                    "values": [{
                        "name": "Customer Key",
                        "value": "sgest@urkidding.com",
                    },
                    {
                        "name": "Order Number",
                        "value": "123456"
                    },
                    {
                        "name": "Order Total",
                        "value": "177.99"
                    }]
                },
                {
                    "values": [{
                        "name": "Customer Key",
                        "value": "sgest@urkidding.com",
                    },
                    {
                        "name": "Order Number",
                        "value": "123456"
                    },
                    {
                        "name": "Order Total",
                        "value": "177.99"
                    }]
                },
                {
                    "values": [{
                        "name": "Customer Key",
                        "value": "sgest@urkidding.com",
                    },
                    {
                        "name": "Order Number",
                        "value": "123456"
                    },
                    {
                        "name": "Order Total",
                        "value": "177.99"
                    }]
                }]
        }

+ Response 200
    [AttributeSet Data by Id][]

### Replace AttributeSet Data by Name [PUT]

+ Request

            {

                "items": [{
                    "values": [{
                        "name": "Customer Key",
                        "value": "sgest@urkidding.com",
                    },
                    {
                        "name": "Order Number",
                        "value": "123456"
                    },
                    {
                        "name": "Order Total",
                        "value": "177.99"
                    }]
                },
                {
                    "values": [{
                        "name": "Customer Key",
                        "value": "sgest@urkidding.com",
                    },
                    {
                        "name": "Order Number",
                        "value": "123456"
                    },
                    {
                        "name": "Order Total",
                        "value": "177.99"
                    }]
                },
                {
                    "values": [{
                        "name": "Customer Key",
                        "value": "sgest@urkidding.com",
                    },
                    {
                        "name": "Order Number",
                        "value": "123456"
                    },
                    {
                        "name": "Order Total",
                        "value": "177.99"
                    }]
                }]
        }

+ Response 200
    [AttributeSet Data by Id][]

## Search AttributeSet Data by Name [/schemas/{schemaId}/attributeSets/name:{name}/search]
A collection of Attribute Value Containers or the data rows of an identified Atribute Set using it's unique identifier.

+ Model (applcation/json)
JSON Representation of an AttributeSet Data payload.

    + Body

            {
                "count": 200,
                "page": 10,
                "pageSize": 3,
                "Id": "abe05aca-2c17-e311-bb14-00237d5401ce",
                "Key": "Retail Orders",
                "Name:" "Retail Orders",
                "SchemaId": "36E001F0-6B8F-E311-A274-08EDB9DDEBF0",
                "_links": {
                        "self": { "href": "/attributeSets/{id}"},
                        "next": { "href": "/attributeSets/{id}?$page=11&$pageSize=3" },
                        "prev": { "href": "/attributeSets/{id}?$page=9&$pageSize=3" },
                        "attributeSetDefinition":{},
                    },
                
                "items": [{
                    "values": [{
                        "name": "Customer Key",
                        "value": "sgest@urkidding.com",
                    },
                    {
                        "name": "Order Number",
                        "value": "123456"
                    },
                    {
                        "name": "Order Total",
                        "value": "177.99"
                    }]
                },
                {
                    "values": [{
                        "name": "Customer Key",
                        "value": "sgest@urkidding.com",
                    },
                    {
                        "name": "Order Number",
                        "value": "123456"
                    },
                    {
                        "name": "Order Total",
                        "value": "177.99"
                    }]
                },
                {
                    "values": [{
                        "name": "Customer Key",
                        "value": "sgest@urkidding.com",
                    },
                    {
                        "name": "Order Number",
                        "value": "123456"
                    },
                    {
                        "name": "Order Total",
                        "value": "177.99"
                    }]
                }]
            }
            
### Search AttributeSet Data by Name [POST]
+ Request

    + Body
            
            {
                "conditionSet" : {      
                    "operator" : "And", 
                    "conditionSets" : [],
                    "conditions" : [{    
                        "attribute" : {  
                            "key" : "MobileDemographics.MobileNumber",  
                            "id" : "",   
                            "isCustomerData" : false
                        },
                        "operator" : "In",                  
                        "values" : ["3171233456", "",]
                    }]
                }
            }

+ Response 200
    [Search AttributeSet Data by Name][]


# Group Content API
Documentation of the AssetServices API

## General API Contracts

  `User` Specification

    {
        "id": 281766,
        "email": "agillaspie@exacttarget.com",
        "name": "Adam Gillaspie",
        "userId": "content.agillaspie"
    }

  `Category` Specification

    {
        "id": 310,
        "name": "Partner Images",
        "path": "/Assets/Partner Images",
        "hasChildren": true,
        "itemCount": 6
    }

  `ChannelAvailability` Specification

    {
        "email": true,
        "mms": true,
        "print": false,
        "push": true,
        "sms": false,
        "social": true,
        "web": true
    }

 `SearchQuery` Specification

    {
        "query" : [
            {
                "field": "tags",
                "operator": "orsgroup",
                "values": [
                    "animals",
                    "dog"
                ]
            },
            {
                "field": "assetType",
                "operator": "matches",
                "values": [
                    "image"
                ]
            }
        ]
    }
    

## First Class Resources

 - __Asset__ - a single Asset resource identifiable by either a numeric ID or a string Key
 - __AssetType__ - the type of an Asset, which may contain unique metadata or settings
 - __Upload__- an asynchronous task that uploads an Asset into the system
 - __Search__ - a query object that can be executed to return a collection of Assets
 - __CustomField__ - a custom key/value pair that users may define and associate to an Asset
 - __Conversion__ - an asynchronous task that generates variations of an Asset


## File Asset [/assets/classification:file]

+ Model (application/json)

    JSON Representation of an Asset of Classification `file`.
    + Body

            {
                "id": 104,
                "key": "justAKitten",
                "assetType": "image",
                "classification": "file",
                "version": 1,
                "name": "Kitten",
                "description": "Kitten sitting on a rug",
                "owner": {
                    "id": 282209,
                    "email": "agillaspie@exacttarget.com",
                    "name": "API Client S1QA3 app user",
                    "userId": "0e114f08-ebbb-42be-87b5-86db4d077b3c"
                },
                "createdDate": "2014-05-06T05:28:01-04:00",
                "createdBy": {
                    "id": 282209,
                    "email": "agillaspie@exacttarget.com",
                    "name": "API Client S1QA3 app user",
                    "userId": "0e114f08-ebbb-42be-87b5-86db4d077b3c"
                },
                "modifiedDate": "2014-05-06T05:28:03-04:00",
                "modifiedBy": {
                    "id": 282209,
                    "email": "agillaspie@exacttarget.com",
                    "name": "API Client S1QA3 app user",
                    "userId": "0e114f08-ebbb-42be-87b5-86db4d077b3c"
                },
                "enterpriseId": 281359,
                "memberId": 281359,
                "status": "active",
                "activeDate": "2014-05-06T05:28:01-04:00",
                "expirationDate": "0001-01-01T00:00:00",
                "locked": false,
                "favorite": true,
                "category": {
                    "id": 0,
                    "name": "Assets",
                    "path": "/Assets",
                    "hasChildren": false,
                    "itemCount": 3
                },
                "tags": [
                    "animals",
                    "kitten",
                    "cute"
                ],
                "campaigns": [],
                "customFields": {
                    "animal": "cat",
                    "season": "Spring"
                },
                "channels": {
                    "email": false,
                    "mms": false,
                    "print": false,
                    "push": false,
                    "sms": false,
                    "social": false,
                    "web": false
                },
                "fileProperties": {
                    "fileName": "justAKitten.jpg",
                    "fileFormat": "jpg",
                    "fileCreatedDate": "2014-05-06 07:28:01 +0000",
                    "fileModifiedDate": "2014-05-06 07:28:01 +0000",
                    "uploadedDate": "2014-05-06 07:28:01 +0000",
                    "importStatus": "complete",
                    "lensType": null,
                    "focalLength": null,
                    "cameraModel": null,
                    "iso": null,
                    "colorSpace": null,
                    "colorType": null,
                    "shutterSpeed": null,
                    "aperture": null,
                    "imageRotation": null,
                    "primaryFileName": null,
                    "previewStatus": "complete",
                    "title": null,
                    "fileUrl": "http://qanv1cdntomcat01.qa.local:8080/accounts/281359/catalog/downloads/originals/281359/281359/justAKitten.jpg/justAKitten.jpg",
                    "thumbUrl": "http://qanv1cdntomcat01.qa.local:8080/accounts/281359/catalog/downloads/preview/cache/281359/281359/justAKitten.jpg/preview.jpg"
                }
            }

## Structured Content Asset [/assets/classification:structuredcontent]

+ Model (application/json)

    JSON Representation of an Asset of Classification `structuredcontent`.
    + Body

            {
                "id": 229,
                "key": "heroContent",
                "assetType": "htmlonly",
                "classification": "structuredcontent",
                "version": 1,
                "name": "Hero Content Area",
                "description": "HTML content for a Message",
                "owner": {
                    "id": 282209,
                    "email": "agillaspie@exacttarget.com",
                    "name": "API Client S1QA3 app user",
                    "userId": "0e114f08-ebbb-42be-87b5-86db4d077b3c"
                },
                "createdDate": "2014-05-06T14:59:53-04:00",
                "createdBy": {
                    "id": 282209,
                    "email": "agillaspie@exacttarget.com",
                    "name": "API Client S1QA3 app user",
                    "userId": "0e114f08-ebbb-42be-87b5-86db4d077b3c"
                },
                "modifiedDate": "2014-05-06T14:59:54-04:00",
                "modifiedBy": {
                    "id": 282209,
                    "email": "agillaspie@exacttarget.com",
                    "name": "API Client S1QA3 app user",
                    "userId": "0e114f08-ebbb-42be-87b5-86db4d077b3c"
                },
                "enterpriseId": 281359,
                "memberId": 281359,
                "status": "active",
                "activeDate": "2014-05-06T15:34:02-04:00",
                "expirationDate": "0001-01-01T00:00:00",
                "locked": false,
                "favorite": true,
                "category": {
                    "id": 0,
                    "name": "Assets",
                    "path": "/Assets",
                    "hasChildren": false,
                    "itemCount": 3
                },
                "tags": [],
                "campaigns": [],
                "customFields": {
                    "partner": "ExactTarget",
                    "season": "Summer"
                },
                "channels": {
                    "email": false,
                    "mms": false,
                    "print": false,
                    "push": false,
                    "sms": false,
                    "social": false,
                    "web": false
                },
                "contentFields": {
                    "body": "<p>This is just some content from Adam.</p>"
                },
                "content": "<table><tr><td><div>{{body}}</div></td></tr></table>"
            }


# Group Asset
  
  __Standard Properties__ defined on every Asset

    {
        "id": 104,
        "key": "justAKitten",
        "assetType": "image",
        "classification": "file",
        "version": 1,
        "name": "Kitten",
        "description": "Kitten sitting on a rug",
        "owner": {
            "id": 282209,
            "email": "agillaspie@exacttarget.com",
            "name": "API Client S1QA3 app user",
            "userId": "0e114f08-ebbb-42be-87b5-86db4d077b3c"
        },
        "createdDate": "2014-05-06T05:28:01-04:00",
        "createdBy": {
            "id": 282209,
            "email": "agillaspie@exacttarget.com",
            "name": "API Client S1QA3 app user",
            "userId": "0e114f08-ebbb-42be-87b5-86db4d077b3c"
        },
        "modifiedDate": "2014-05-06T05:28:03-04:00",
        "modifiedBy": {
            "id": 282209,
            "email": "agillaspie@exacttarget.com",
            "name": "API Client S1QA3 app user",
            "userId": "0e114f08-ebbb-42be-87b5-86db4d077b3c"
        },
        "enterpriseId": 281359,
        "memberId": 281359,
        "status": "active",
        "activeDate": "2014-05-06T05:28:01-04:00",
        "expirationDate": "0001-01-01T00:00:00",
        "locked": false,
        "favorite": true,
        "category": {
            "id": 0,
            "name": "Assets",
            "path": "/Assets",
            "hasChildren": false,
            "itemCount": 3
        },
        "tags": [
            "animals",
            "kitten",
            "cute"
        ],
        "campaigns": [],
        "customFields": {
            "animal": "cat",
            "season": "Spring"
        },
        "channels": {
            "email": false,
            "mms": false,
            "print": false,
            "push": false,
            "sms": false,
            "social": false,
            "web": false
        }
    }

__Asset Properties with Restricted Values__

`assetType` *(Additional Custom AssetTypes are also valid)*
  
  + archive
  + audio
  + code
  + document
  + image
  + rawImage
  + video
  + none
  + htmlOnly
  + textOnly
  + imageOnly
  + textPlusImage
  + textPlusImagePlusHeadline
  + dynamicContent
  + header
  + footer
  + message

`classification`
  
  + file
  + structuredcontent
  + content
  
`status`
  
  + active
  + expired
  + deleted

`importStatus`
  
  + uploading
  + uploaded
  + imported
  + reimported
  + complete
  + error

`previewStatus`
  
  + unknown
  + exif
  + icon
  + converting
  + complete
  + error

__Classification-Specific Properties__

A handful of top-level properties are only available on Assets of a specific *Classification*. Highlighted below are the properties that are unique to each *Classification*, along with some example data. 

  __Classification__: `file`
  
  The fields that are available inside of __fileProperties__ are specific to the *AssetType*. 
  
    {
        "fileProperties": {
            "fileName": "justAKitten.jpg",
            "fileFormat": "jpg",
            "fileCreatedDate": "2014-05-06 07:28:01 +0000",
            "fileModifiedDate": "2014-05-06 07:28:01 +0000",
            "uploadedDate": "2014-05-06 07:28:01 +0000",
            "importStatus": "complete",
            "lensType": null,
            "focalLength": null,
            "cameraModel": null,
            "iso": null,
            "colorSpace": null,
            "colorType": null,
            "shutterSpeed": null,
            "aperture": null,
            "imageRotation": null,
            "primaryFileName": null,
            "previewStatus": "complete",
            "title": null,
            "fileUrl": "http://qanv1cdntomcat01.qa.local:8080/accounts/281359/catalog/downloads/originals/281359/281359/justAKitten.jpg/justAKitten.jpg",
            "thumbUrl": "http://qanv1cdntomcat01.qa.local:8080/accounts/281359/catalog/downloads/preview/cache/281359/281359/justAKitten.jpg/preview.jpg"
        }
    }


  __Classification__: `structuredcontent`
  
  The fields that are available inside of __contentFields__ are specific to the *AssetType*.  

    {
        "contentFields": {
            "headline": "Don't Miss Out!",
            "body": "This is just a sample story. Check out more by visiting our website!",
            "image": 104
        },
        "content": "<table><tr><td colspan=\"2\"><h2>{{headline}}</h2></td></tr><tr><td>{{image}}</td><td><div>{{body}}</div></td></tr></table>"
    }
    
  __Classification__: `content`

  For Assets with the AssetType `message`, the __content__ property contains the entire stringified *Guide Message Model*.

    {
        "channelType": {
            "value": "email",
            "isActive": true,
            "modelType": "channelType",
            "validated": false
        },
        "messageType": {
            "value": "application/vnd.et.message.email.html",
            "isActive": true,
            "modelType": "messageType",
            "validated": false
        },
        "content": "{\"key\":\"baseValidationMessage\",\"name\":\"Validation Test Message With Address\",\"assetType\":\"message\",\"classification\":\"content\",\"description\":\"This is a sample message from the new editor\",\"category\":{\"id\":312,\"name\":\"Assets\"},\"tags\":[\"sample\",\"email\"],\"status\":\"active\",\"validated\":false,\"channelType\":{\"value\":\"email\",\"isActive\":true,\"modelType\":\"channelType\",\"validated\":false},\"messageType\":{\"value\":\"application/vnd.et.message.email.html\",\"isActive\":true,\"modelType\":\"messageType\",\"validated\":false},\"views\":[{\"bodyTag\":\"<body>\",\"content\":\"HelloWorld Has Address - First Name GTL: {{[First Name]}}<br>First Name OLD: %%First Name%%\",\"head\":\"\",\"htmlTag\":\"<html>\",\"slots\":[{\"alias\":\"hero\",\"allowed\":[\"*\",\"*\",\"*\",\"*\",\"*\",\"*\",\"*\"],\"altered\":false,\"content\":\"<table width=\\"100%\\" border=\\"0\\" cellspacing=\\"0\\" cellpadding=\\"0\\" bgcolor=\\"#ffffff\\"><tr><td align=\\"center\\" valign=\\"top\\"><table width=\\"599\\" border=\\"0\\" cellspacing=\\"0\\" cellpadding=\\"0\\" bgcolor=\\"#ffffff\\"><tr><td>MASTER SLOT - <table width=\\"100%\\" cellpadding=\\"0\\" cellspacing=\\"0\\" border=\\"0\\"><tr><td bgcolor=\\"#01488a\\"><table width=\\"100%\\" cellpadding=\\"0\\" cellspacing=\\"0\\" border=\\"0\\"><tr><td class=\\"img\\" style=\\"font-size:0pt; line-height:0pt; text-align:left\\" width=\\"19\\"></td><td data-type=\\"slot\\" data-alias=\\"headertext\\"></td><td class=\\"img\\" style=\\"font-size:0pt; line-height:0pt; text-align:left\\" width=\\"13\\"></td></tr></table></td></tr><tr><td bgcolor=\\"#e1e1e1\\"><table width=\\"100%\\" cellpadding=\\"0\\" cellspacing=\\"0\\" border=\\"0\\"><tr><td class=\\"img\\" style=\\"font-size:0pt; line-height:0pt; text-align:left\\" width=\\"15\\"></td><td><table width=\\"100%\\" cellpadding=\\"0\\" cellspacing=\\"0\\" border=\\"0\\" bgcolor=\\"#fbeea9\\"><tr><td><table width=\\"100%\\" cellpadding=\\"0\\" cellspacing=\\"0\\" border=\\"0\\"><tr><td class=\\"img\\" style=\\"font-size:0pt; line-height:0pt; text-align:left\\" width=\\"31\\"></td><td data-type=\\"slot\\" data-alias=\\"yellowboxcontentleft\\"></td><td data-type=\\"slot\\" data-alias=\\"yellowboxcontentright\\"></td><td width=\\"30\\"></td></tr></table></td></tr></table><table width=\\"100%\\" cellpadding=\\"0\\" cellspacing=\\"0\\" border=\\"0\\"><tr><td class=\\"img\\" style=\\"font-size:0pt; line-height:0pt; text-align:left\\" width=\\"12\\"></td><td data-type=\\"slot\\" data-alias=\\"bottomboxtext\\"></td><td width=\\"20\\" class=\\"img\\" style=\\"font-size:0pt; line-height:0pt; text-align:left\\"></td></tr></table></td><td class=\\"img\\" style=\\"font-size:0pt; line-height:0pt; text-align:left\\" width=\\"15\\"></td></tr></table></td></tr><tr><td><table width=\\"100%\\" cellpadding=\\"0\\" cellspacing=\\"0\\" border=\\"0\\"><tr><td width=\\"364\\" valign=\\"top\\"><table width=\\"100%\\" cellpadding=\\"0\\" cellspacing=\\"0\\" border=\\"0\\"><tr><td data-type=\\"slot\\" data-alias=\\"footeraddress\\"></td></tr></table></td><td class=\\"img\\" style=\\"font-size:0pt; line-height:0pt; text-align:left\\" width=\\"25\\"></td></tr></table></td></tr></table></td></tr></table></td></tr></table>\",\"defaultContent\":\"\",\"design\":\"\",\"drop\":[\"*\",\"*\",\"*\",\"*\",\"*\",\"*\",\"*\"],\"element\":\"div\",\"gears\":[],\"htmlAttributes\":{\"class\":\"text\",\"style\":\"color:#3c4044; font-family:Arial; font-size:13px; line-height:17px; text-align:left\",\"valign\":\"top\",\"width\":\"158\"},\"locked\":false,\"maxGears\":999,\"minGears\":0,\"nesting\":{\"gears\":true,\"slots\":false},\"origin\":\"viewTemplate\",\"required\":false,\"slots\":[],\"isActive\":true,\"modelType\":\"slot\",\"validated\":false},{\"alias\":\"content1\",\"allowed\":[\"*\",\"*\",\"*\",\"*\",\"*\",\"*\",\"*\"],\"altered\":false,\"content\":\"<table width=\\"100%\\" border=\\"0\\" cellspacing=\\"0\\" cellpadding=\\"0\\" bgcolor=\\"#ffffff\\"><tr><td align=\\"center\\" valign=\\"top\\"><table width=\\"599\\" border=\\"0\\" cellspacing=\\"0\\" cellpadding=\\"0\\" bgcolor=\\"#ffffff\\"><tr><td>MASTER SLOT - <table width=\\"100%\\" cellpadding=\\"0\\" cellspacing=\\"0\\" border=\\"0\\"><tr><td bgcolor=\\"#01488a\\"><table width=\\"100%\\" cellpadding=\\"0\\" cellspacing=\\"0\\" border=\\"0\\"><tr><td class=\\"img\\" style=\\"font-size:0pt; line-height:0pt; text-align:left\\" width=\\"19\\"></td><td data-type=\\"slot\\" data-alias=\\"headertext\\"></td><td class=\\"img\\" style=\\"font-size:0pt; line-height:0pt; text-align:left\\" width=\\"13\\"></td></tr></table></td></tr><tr><td bgcolor=\\"#e1e1e1\\"><table width=\\"100%\\" cellpadding=\\"0\\" cellspacing=\\"0\\" border=\\"0\\"><tr><td class=\\"img\\" style=\\"font-size:0pt; line-height:0pt; text-align:left\\" width=\\"15\\"></td><td><table width=\\"100%\\" cellpadding=\\"0\\" cellspacing=\\"0\\" border=\\"0\\" bgcolor=\\"#fbeea9\\"><tr><td><table width=\\"100%\\" cellpadding=\\"0\\" cellspacing=\\"0\\" border=\\"0\\"><tr><td class=\\"img\\" style=\\"font-size:0pt; line-height:0pt; text-align:left\\" width=\\"31\\"></td><td data-type=\\"slot\\" data-alias=\\"yellowboxcontentleft\\"></td><td data-type=\\"slot\\" data-alias=\\"yellowboxcontentright\\"></td><td width=\\"30\\"></td></tr></table></td></tr></table><table width=\\"100%\\" cellpadding=\\"0\\" cellspacing=\\"0\\" border=\\"0\\"><tr><td class=\\"img\\" style=\\"font-size:0pt; line-height:0pt; text-align:left\\" width=\\"12\\"></td><td data-type=\\"slot\\" data-alias=\\"bottomboxtext\\"></td><td width=\\"20\\" class=\\"img\\" style=\\"font-size:0pt; line-height:0pt; text-align:left\\"></td></tr></table></td><td class=\\"img\\" style=\\"font-size:0pt; line-height:0pt; text-align:left\\" width=\\"15\\"></td></tr></table></td></tr><tr><td><table width=\\"100%\\" cellpadding=\\"0\\" cellspacing=\\"0\\" border=\\"0\\"><tr><td width=\\"364\\" valign=\\"top\\"><table width=\\"100%\\" cellpadding=\\"0\\" cellspacing=\\"0\\" border=\\"0\\"><tr><td data-type=\\"slot\\" data-alias=\\"footeraddress\\"></td></tr></table></td><td class=\\"img\\" style=\\"font-size:0pt; line-height:0pt; text-align:left\\" width=\\"25\\"></td></tr></table></td></tr></table></td></tr></table></td></tr></table>\",\"defaultContent\":\"\",\"design\":\"\",\"drop\":[\"*\",\"*\",\"*\",\"*\",\"*\",\"*\",\"*\"],\"element\":\"div\",\"gears\":[],\"htmlAttributes\":{\"valign\":\"top\",\"width\":\"350\"},\"locked\":false,\"maxGears\":999,\"minGears\":0,\"nesting\":{\"gears\":true,\"slots\":true},\"origin\":\"viewTemplate\",\"required\":false,\"slots\":[{\"alias\":\"leftColumn\",\"allowed\":[\"*\",\"*\",\"*\",\"*\",\"*\",\"*\",\"*\"],\"altered\":false,\"content\":\"<table width=\\"100%\\" border=\\"0\\" cellspacing=\\"0\\" cellpadding=\\"0\\" bgcolor=\\"#ffffff\\"><tr><td align=\\"center\\" valign=\\"top\\"><table width=\\"599\\" border=\\"0\\" cellspacing=\\"0\\" cellpadding=\\"0\\" bgcolor=\\"#ffffff\\"><tr><td>MASTER SLOT - <table width=\\"100%\\" cellpadding=\\"0\\" cellspacing=\\"0\\" border=\\"0\\"><tr><td bgcolor=\\"#01488a\\"><table width=\\"100%\\" cellpadding=\\"0\\" cellspacing=\\"0\\" border=\\"0\\"><tr><td class=\\"img\\" style=\\"font-size:0pt; line-height:0pt; text-align:left\\" width=\\"19\\"></td><td data-type=\\"slot\\" data-alias=\\"headertext\\"></td><td class=\\"img\\" style=\\"font-size:0pt; line-height:0pt; text-align:left\\" width=\\"13\\"></td></tr></table></td></tr><tr><td bgcolor=\\"#e1e1e1\\"><table width=\\"100%\\" cellpadding=\\"0\\" cellspacing=\\"0\\" border=\\"0\\"><tr><td class=\\"img\\" style=\\"font-size:0pt; line-height:0pt; text-align:left\\" width=\\"15\\"></td><td><table width=\\"100%\\" cellpadding=\\"0\\" cellspacing=\\"0\\" border=\\"0\\" bgcolor=\\"#fbeea9\\"><tr><td><table width=\\"100%\\" cellpadding=\\"0\\" cellspacing=\\"0\\" border=\\"0\\"><tr><td class=\\"img\\" style=\\"font-size:0pt; line-height:0pt; text-align:left\\" width=\\"31\\"></td><td data-type=\\"slot\\" data-alias=\\"yellowboxcontentleft\\"></td><td data-type=\\"slot\\" data-alias=\\"yellowboxcontentright\\"></td><td width=\\"30\\"></td></tr></table></td></tr></table><table width=\\"100%\\" cellpadding=\\"0\\" cellspacing=\\"0\\" border=\\"0\\"><tr><td class=\\"img\\" style=\\"font-size:0pt; line-height:0pt; text-align:left\\" width=\\"12\\"></td><td data-type=\\"slot\\" data-alias=\\"bottomboxtext\\"></td><td width=\\"20\\" class=\\"img\\" style=\\"font-size:0pt; line-height:0pt; text-align:left\\"></td></tr></table></td><td class=\\"img\\" style=\\"font-size:0pt; line-height:0pt; text-align:left\\" width=\\"15\\"></td></tr></table></td></tr><tr><td><table width=\\"100%\\" cellpadding=\\"0\\" cellspacing=\\"0\\" border=\\"0\\"><tr><td width=\\"364\\" valign=\\"top\\"><table width=\\"100%\\" cellpadding=\\"0\\" cellspacing=\\"0\\" border=\\"0\\"><tr><td data-type=\\"slot\\" data-alias=\\"footeraddress\\"></td></tr></table></td><td class=\\"img\\" style=\\"font-size:0pt; line-height:0pt; text-align:left\\" width=\\"25\\"></td></tr></table></td></tr></table></td></tr></table></td></tr></table>\",\"defaultContent\":\"\",\"design\":\"\",\"drop\":[\"*\",\"*\",\"*\",\"*\",\"*\",\"*\",\"*\"],\"element\":\"div\",\"gears\":[],\"htmlAttributes\":{},\"locked\":false,\"maxGears\":999,\"minGears\":0,\"nesting\":{\"gears\":true,\"slots\":false},\"origin\":\"viewTemplate\",\"required\":false,\"slots\":[],\"isActive\":true,\"modelType\":\"slot\",\"validated\":false},{\"alias\":\"rightColumn\",\"allowed\":[\"*\",\"*\",\"*\",\"*\",\"*\",\"*\",\"*\"],\"altered\":false,\"content\":\"<table width=\\"100%\\" border=\\"0\\" cellspacing=\\"0\\" cellpadding=\\"0\\" bgcolor=\\"#ffffff\\"><tr><td align=\\"center\\" valign=\\"top\\"><table width=\\"599\\" border=\\"0\\" cellspacing=\\"0\\" cellpadding=\\"0\\" bgcolor=\\"#ffffff\\"><tr><td>MASTER SLOT - <table width=\\"100%\\" cellpadding=\\"0\\" cellspacing=\\"0\\" border=\\"0\\"><tr><td bgcolor=\\"#01488a\\"><table width=\\"100%\\" cellpadding=\\"0\\" cellspacing=\\"0\\" border=\\"0\\"><tr><td class=\\"img\\" style=\\"font-size:0pt; line-height:0pt; text-align:left\\" width=\\"19\\"></td><td data-type=\\"slot\\" data-alias=\\"headertext\\"></td><td class=\\"img\\" style=\\"font-size:0pt; line-height:0pt; text-align:left\\" width=\\"13\\"></td></tr></table></td></tr><tr><td bgcolor=\\"#e1e1e1\\"><table width=\\"100%\\" cellpadding=\\"0\\" cellspacing=\\"0\\" border=\\"0\\"><tr><td class=\\"img\\" style=\\"font-size:0pt; line-height:0pt; text-align:left\\" width=\\"15\\"></td><td><table width=\\"100%\\" cellpadding=\\"0\\" cellspacing=\\"0\\" border=\\"0\\" bgcolor=\\"#fbeea9\\"><tr><td><table width=\\"100%\\" cellpadding=\\"0\\" cellspacing=\\"0\\" border=\\"0\\"><tr><td class=\\"img\\" style=\\"font-size:0pt; line-height:0pt; text-align:left\\" width=\\"31\\"></td><td data-type=\\"slot\\" data-alias=\\"yellowboxcontentleft\\"></td><td data-type=\\"slot\\" data-alias=\\"yellowboxcontentright\\"></td><td width=\\"30\\"></td></tr></table></td></tr></table><table width=\\"100%\\" cellpadding=\\"0\\" cellspacing=\\"0\\" border=\\"0\\"><tr><td class=\\"img\\" style=\\"font-size:0pt; line-height:0pt; text-align:left\\" width=\\"12\\"></td><td data-type=\\"slot\\" data-alias=\\"bottomboxtext\\"></td><td width=\\"20\\" class=\\"img\\" style=\\"font-size:0pt; line-height:0pt; text-align:left\\"></td></tr></table></td><td class=\\"img\\" style=\\"font-size:0pt; line-height:0pt; text-align:left\\" width=\\"15\\"></td></tr></table></td></tr><tr><td><table width=\\"100%\\" cellpadding=\\"0\\" cellspacing=\\"0\\" border=\\"0\\"><tr><td width=\\"364\\" valign=\\"top\\"><table width=\\"100%\\" cellpadding=\\"0\\" cellspacing=\\"0\\" border=\\"0\\"><tr><td data-type=\\"slot\\" data-alias=\\"footeraddress\\"></td></tr></table></td><td class=\\"img\\" style=\\"font-size:0pt; line-height:0pt; text-align:left\\" width=\\"25\\"></td></tr></table></td></tr></table></td></tr></table></td></tr></table>\",\"defaultContent\":\"\",\"design\":\"\",\"drop\":[\"*\",\"*\",\"*\",\"*\",\"*\",\"*\",\"*\"],\"element\":\"div\",\"gears\":[],\"htmlAttributes\":{},\"locked\":false,\"maxGears\":999,\"minGears\":0,\"nesting\":{\"gears\":true,\"slots\":false},\"origin\":\"viewTemplate\",\"required\":false,\"slots\":[],\"isActive\":true,\"modelType\":\"slot\",\"validated\":false}],\"isActive\":true,\"modelType\":\"slot\",\"validated\":false},{\"alias\":\"navigation\",\"allowed\":[\"*\",\"*\",\"*\",\"*\",\"*\",\"*\",\"*\"],\"altered\":false,\"content\":\"<table width=\\"100%\\" border=\\"0\\" cellspacing=\\"0\\" cellpadding=\\"0\\" bgcolor=\\"#ffffff\\"><tr><td align=\\"center\\" valign=\\"top\\"><table width=\\"599\\" border=\\"0\\" cellspacing=\\"0\\" cellpadding=\\"0\\" bgcolor=\\"#ffffff\\"><tr><td>MASTER SLOT - <table width=\\"100%\\" cellpadding=\\"0\\" cellspacing=\\"0\\" border=\\"0\\"><tr><td bgcolor=\\"#01488a\\"><table width=\\"100%\\" cellpadding=\\"0\\" cellspacing=\\"0\\" border=\\"0\\"><tr><td class=\\"img\\" style=\\"font-size:0pt; line-height:0pt; text-align:left\\" width=\\"19\\"></td><td data-type=\\"slot\\" data-alias=\\"headertext\\"></td><td class=\\"img\\" style=\\"font-size:0pt; line-height:0pt; text-align:left\\" width=\\"13\\"></td></tr></table></td></tr><tr><td bgcolor=\\"#e1e1e1\\"><table width=\\"100%\\" cellpadding=\\"0\\" cellspacing=\\"0\\" border=\\"0\\"><tr><td class=\\"img\\" style=\\"font-size:0pt; line-height:0pt; text-align:left\\" width=\\"15\\"></td><td><table width=\\"100%\\" cellpadding=\\"0\\" cellspacing=\\"0\\" border=\\"0\\" bgcolor=\\"#fbeea9\\"><tr><td><table width=\\"100%\\" cellpadding=\\"0\\" cellspacing=\\"0\\" border=\\"0\\"><tr><td class=\\"img\\" style=\\"font-size:0pt; line-height:0pt; text-align:left\\" width=\\"31\\"></td><td data-type=\\"slot\\" data-alias=\\"yellowboxcontentleft\\"></td><td data-type=\\"slot\\" data-alias=\\"yellowboxcontentright\\"></td><td width=\\"30\\"></td></tr></table></td></tr></table><table width=\\"100%\\" cellpadding=\\"0\\" cellspacing=\\"0\\" border=\\"0\\"><tr><td class=\\"img\\" style=\\"font-size:0pt; line-height:0pt; text-align:left\\" width=\\"12\\"></td><td data-type=\\"slot\\" data-alias=\\"bottomboxtext\\"></td><td width=\\"20\\" class=\\"img\\" style=\\"font-size:0pt; line-height:0pt; text-align:left\\"></td></tr></table></td><td class=\\"img\\" style=\\"font-size:0pt; line-height:0pt; text-align:left\\" width=\\"15\\"></td></tr></table></td></tr><tr><td><table width=\\"100%\\" cellpadding=\\"0\\" cellspacing=\\"0\\" border=\\"0\\"><tr><td width=\\"364\\" valign=\\"top\\"><table width=\\"100%\\" cellpadding=\\"0\\" cellspacing=\\"0\\" border=\\"0\\"><tr><td data-type=\\"slot\\" data-alias=\\"footeraddress\\"></td></tr></table></td><td class=\\"img\\" style=\\"font-size:0pt; line-height:0pt; text-align:left\\" width=\\"25\\"></td></tr></table></td></tr></table></td></tr></table></td></tr></table>\",\"defaultContent\":\"\",\"design\":\"\",\"drop\":[\"*\",\"*\",\"*\",\"*\",\"*\",\"*\",\"*\"],\"element\":\"div\",\"gears\":[],\"htmlAttributes\":{},\"locked\":false,\"maxGears\":999,\"minGears\":0,\"nesting\":{\"gears\":true,\"slots\":false},\"origin\":\"viewTemplate\",\"required\":false,\"slots\":[],\"isActive\":true,\"modelType\":\"slot\",\"validated\":false}],\"viewType\":{\"kind\":\"subjectline\",\"mimeType\":\"text/plain\",\"value\":\"text/plain; kind=subjectline\",\"isActive\":true,\"modelType\":\"viewType\",\"validated\":false},\"isActive\":true,\"validated\":false}]}"
    }    

## Asset [/assets/{id}]
A single Asset identified by a numeric *id*.

+ Model (application/json)

    + Body

            {
                "id": 104,
                "key": "justAKitten",
                "assetType": "image",
                "classification": "file",
                "version": 1,
                "name": "Kitten",
                "description": "Kitten sitting on a rug",
                "owner": {
                    "id": 282209,
                    "email": "agillaspie@exacttarget.com",
                    "name": "API Client S1QA3 app user",
                    "userId": "0e114f08-ebbb-42be-87b5-86db4d077b3c"
                },
                "createdDate": "2014-05-06T05:28:01-04:00",
                "createdBy": {
                    "id": 282209,
                    "email": "agillaspie@exacttarget.com",
                    "name": "API Client S1QA3 app user",
                    "userId": "0e114f08-ebbb-42be-87b5-86db4d077b3c"
                },
                "modifiedDate": "2014-05-06T05:28:03-04:00",
                "modifiedBy": {
                    "id": 282209,
                    "email": "agillaspie@exacttarget.com",
                    "name": "API Client S1QA3 app user",
                    "userId": "0e114f08-ebbb-42be-87b5-86db4d077b3c"
                },
                "enterpriseId": 281359,
                "memberId": 281359,
                "status": "active",
                "activeDate": "2014-05-06T05:28:01-04:00",
                "expirationDate": "0001-01-01T00:00:00",
                "locked": false,
                "favorite": true,
                "category": {
                    "id": 0,
                    "name": "Assets",
                    "path": "/Assets",
                    "hasChildren": false,
                    "itemCount": 3
                },
                "tags": [
                    "animals",
                    "kitten",
                    "cute"
                ],
                "campaigns": [],
                "customFields": {
                    "animal": "cat",
                    "season": "Spring"
                },
                "channels": {
                    "email": false,
                    "mms": false,
                    "print": false,
                    "push": false,
                    "sms": false,
                    "social": false,
                    "web": false
                },
                "fileProperties": {
                    "fileName": "justAKitten.jpg",
                    "fileFormat": "jpg",
                    "fileCreatedDate": "2014-05-06 07:28:01 +0000",
                    "fileModifiedDate": "2014-05-06 07:28:01 +0000",
                    "uploadedDate": "2014-05-06 07:28:01 +0000",
                    "importStatus": "complete",
                    "lensType": null,
                    "focalLength": null,
                    "cameraModel": null,
                    "iso": null,
                    "colorSpace": null,
                    "colorType": null,
                    "shutterSpeed": null,
                    "aperture": null,
                    "imageRotation": null,
                    "primaryFileName": null,
                    "previewStatus": "complete",
                    "title": null,
                    "fileUrl": "http://qanv1cdntomcat01.qa.local:8080/accounts/281359/catalog/downloads/originals/281359/281359/justAKitten.jpg/justAKitten.jpg",
                    "thumbUrl": "http://qanv1cdntomcat01.qa.local:8080/accounts/281359/catalog/downloads/preview/cache/281359/281359/justAKitten.jpg/preview.jpg"
                }
            }


### Retrieve an Asset [GET]

+ Parameters
    + id (required, integer, `104`) ... Numeric `id` of the Asset.

+ Response 200
    [Asset][]


### Partially Update an Asset [PATCH]
__Editable Properties__:

| Name  | Type |
| :------------- | :------------- |
| key  | string | 
| name  | string |
| description  | string |
| owner  | User |
| status  | string |
| activeDate  | date |
| expirationDate  | date |
| category  | Category |
| tags  | array | 
| channels  | ChannelAvailability |
| customFields  | object | 
| contentFields  | object | 
| content  | string |

+ Request

        {
            "id": 104,
            "key": "justAKitten",
            "name": "Kitten",
            "description": "Kitten sitting on a rug",
            "owner": {
                "id": 282209
            },
            "status": "active",
            "activeDate": "2014-05-06T05:28:01-04:00",
            "expirationDate": "0001-01-01T00:00:00",
            "category": {
                "id": 0
            },
            "tags": [
                "animals",
                "kitten",
                "cute"
            ],
            "customFields": {
                "animal": "cat",
                "season": "Spring"
            },
            "channels": {
                "email": false,
                "mms": false,
                "print": false,
                "push": false,
                "sms": false,
                "social": false,
                "web": false
            }
        }

+ Response 200
    [Asset][]


### Delete an Asset [DELETE]

+ Parameters
    + id (required, integer, `120,145,170`) ... Numeric `id` of the Asset. Specify multiple Assets by comma-delimiting `id`s.

+ Response 204


## Asset by Key [/assets/key:{key}]
A single Asset identified by a string *key*.

+ Parameters
    + key (required, string, `justAKitten`) ... String `key` of the Asset.

### Retrieve an Asset by Key [GET]

+ Response 200
    [Asset][]


## Assets [/assets]
One or multiple Assets.

+ Model (application/json)

    + Body

            {
                "count": 3,
                "links": {
                    "self": {
                        "href": "/v1/assets"
                    }
                },
                "items": [
                    {
                        "id": 101,
                        "key": "deniedOnceAgain",
                        "assetType": "image",
                        "classification": "file",
                        "version": 1,
                        "name": "DE-NIED Once Again",
                        "description": "Girl denies guy at basketball game",
                        "owner": {
                            "id": 282209,
                            "email": "agillaspie@exacttarget.com",
                            "name": "API Client S1QA3 app user",
                            "userId": "0e114f08-ebbb-42be-87b5-86db4d077b3c"
                        },
                        "createdDate": "2014-05-06T05:12:29-04:00",
                        "createdBy": {
                            "id": 282209,
                            "email": "agillaspie@exacttarget.com",
                            "name": "API Client S1QA3 app user",
                            "userId": "0e114f08-ebbb-42be-87b5-86db4d077b3c"
                        },
                        "modifiedDate": "2014-05-06T05:12:34-04:00",
                        "modifiedBy": {
                            "id": 282209,
                            "email": "agillaspie@exacttarget.com",
                            "name": "API Client S1QA3 app user",
                            "userId": "0e114f08-ebbb-42be-87b5-86db4d077b3c"
                        },
                        "enterpriseId": 281359,
                        "memberId": 281359,
                        "status": "active",
                        "activeDate": "0001-01-01T00:00:00",
                        "expirationDate": "0001-01-01T00:00:00",
                        "locked": false,
                        "favorite": false,
                        "category": {
                            "id": 0,
                            "name": "Assets",
                            "path": "/Assets",
                            "hasChildren": false,
                            "itemCount": 3
                        },
                        "tags": [
                            "memes",
                            "basketball",
                            "kiss",
                            "funny"
                        ],
                        "campaigns": [],
                        "customFields": {},
                        "channels": {
                            "email": false,
                            "mms": false,
                            "print": false,
                            "push": false,
                            "sms": false,
                            "social": false,
                            "web": false
                        },
                        "fileProperties": {
                            "fileName": "deniedAgain.gif",
                            "fileFormat": "gif",
                            "fileCreatedDate": null,
                            "fileModifiedDate": null,
                            "uploadedDate": "2014-05-06 07:12:29 +0000",
                            "importStatus": null,
                            "lensType": null,
                            "focalLength": null,
                            "cameraModel": null,
                            "iso": null,
                            "colorSpace": null,
                            "colorType": null,
                            "shutterSpeed": null,
                            "aperture": null,
                            "imageRotation": null,
                            "primaryFileName": null,
                            "previewStatus": null,
                            "title": null,
                            "fileUrl": "http://qanv1cdntomcat01.qa.local:8080/accounts/281359/catalog/downloads/originals/281359/281359/deniedAgain.gif/deniedAgain.gif",
                            "thumbUrl": "http://qanv1cdntomcat01.qa.local:8080/accounts/281359/catalog/downloads/preview/cache/281359/281359/deniedAgain.gif/preview.jpg"
                        }
                    },
                    {
                        "id": 144,
                        "key": "scienceStuff",
                        "assetType": "video",
                        "classification": "file",
                        "version": 1,
                        "name": "Science Stuff",
                        "description": "Science guys making foam expand",
                        "owner": {
                            "id": 281766,
                            "email": "agillaspie@exacttarget.com",
                            "name": "Adam Gillaspie",
                            "userId": "s1.qa3.agillaspie"
                        },
                        "createdDate": "2014-02-01T23:25:30-05:00",
                        "createdBy": {
                            "id": 281766,
                            "email": "agillaspie@exacttarget.com",
                            "name": "Adam Gillaspie",
                            "userId": "s1.qa3.agillaspie"
                        },
                        "modifiedDate": "2014-04-30T20:38:04-04:00",
                        "modifiedBy": {
                            "id": 281766,
                            "email": "agillaspie@exacttarget.com",
                            "name": "Adam Gillaspie",
                            "userId": "s1.qa3.agillaspie"
                        },
                        "enterpriseId": 281359,
                        "memberId": 281359,
                        "status": "active",
                        "activeDate": "2014-04-24T23:44:51-04:00",
                        "expirationDate": "0001-01-01T00:00:00",
                        "locked": false,
                        "favorite": false,
                        "category": {
                            "id": 0,
                            "name": "Assets",
                            "path": "/Assets",
                            "hasChildren": false,
                            "itemCount": 3
                        },
                        "tags": [
                            "science"
                        ],
                        "campaigns": [],
                        "customFields": {},
                        "channels": {
                            "email": true,
                            "mms": false,
                            "print": true,
                            "push": false,
                            "sms": false,
                            "social": true,
                            "web": true
                        },
                        "fileProperties": {
                            "fileName": "scienceStuff.mp4",
                            "fileFormat": "mp4",
                            "fileSize": "291.18 KB",
                            "fileCreatedDate": null,
                            "fileModifiedDate": "2014-02-28 17:17:46 +0000",
                            "uploadedDate": "2014-02-19 10:47:02 +0000",
                            "importStatus": "complete",
                            "length": "00:00:06",
                            "duration": "6.15166666666667",
                            "frameRate": "30.00",
                            "bitsPerSample": null,
                            "videoCodec": null,
                            "compression": null,
                            "artist": null,
                            "creator": null,
                            "contributor": null,
                            "primaryFileName": null,
                            "previewStatus": "2",
                            "title": null,
                            "fileUrl": "http://qanv1cdntomcat01.qa.local:8080/accounts/281359/catalog/downloads/originals/281359/281359/scienceStuff.mp4/scienceStuff.mp4",
                            "thumbUrl": "http://qanv1cdntomcat01.qa.local:8080/accounts/281359/catalog/downloads/preview/cache/281359/281359/scienceStuff.mp4/preview.jpg"
                        }
                    },
                    {
                        "id": 229,
                        "key": "heroContent",
                        "assetType": "htmlonly",
                        "classification": "structuredcontent",
                        "version": 1,
                        "name": "Hero Content Area",
                        "description": "HTML content for a Message",
                        "owner": {
                            "id": 282209,
                            "email": "agillaspie@exacttarget.com",
                            "name": "API Client S1QA3 app user",
                            "userId": "0e114f08-ebbb-42be-87b5-86db4d077b3c"
                        },
                        "createdDate": "2014-05-06T14:59:53-04:00",
                        "createdBy": {
                            "id": 282209,
                            "email": "agillaspie@exacttarget.com",
                            "name": "API Client S1QA3 app user",
                            "userId": "0e114f08-ebbb-42be-87b5-86db4d077b3c"
                        },
                        "modifiedDate": "2014-05-06T14:59:54-04:00",
                        "modifiedBy": {
                            "id": 282209,
                            "email": "agillaspie@exacttarget.com",
                            "name": "API Client S1QA3 app user",
                            "userId": "0e114f08-ebbb-42be-87b5-86db4d077b3c"
                        },
                        "enterpriseId": 281359,
                        "memberId": 281359,
                        "status": "active",
                        "activeDate": "2014-05-06T15:34:02-04:00",
                        "expirationDate": "0001-01-01T00:00:00",
                        "locked": false,
                        "favorite": true,
                        "category": {
                            "id": 0,
                            "name": "Assets",
                            "path": "/Assets",
                            "hasChildren": false,
                            "itemCount": 3
                        },
                        "tags": [],
                        "campaigns": [],
                        "customFields": {
                            "partner": "ExactTarget",
                            "season": "Summer"
                        },
                        "channels": {
                            "email": false,
                            "mms": false,
                            "print": false,
                            "push": false,
                            "sms": false,
                            "social": false,
                            "web": false
                        },
                        "contentFields": {
                            "body": "<p>This is just some content from Adam.</p>"
                        },
                        "content": "<table><tr><td><div>{{body}}</div></td></tr></table>"
                    }
                ]
            }

### Create an Asset [POST]
__Available Request Properties__:

| Name  | Required | Type | Default
| :------------- | :------------- | :------------- | :------------- |
| key  | __`true`__  | string | 
| name  | __`true`__  | string |
| assetType  | __`true`__  | string | 
| classification  | __`true`__  | string | 
| description  | `false`  | string |
| owner  | `false`  | User | Authenticated User
| status  | `false`  | string | `active`
| activeDate  | `false`  | date | Now
| expirationDate  | `false`  | date | `null`
| category  | `false`  | Category | Default Folder
| tags  | `false`  | array | 
| channels  | `false`  | ChannelAvailability | All Channels
| customFields  | `false`  | object | 
| contentFields  | `false`  | object | 
| content  | `false`  | string |

+ Request

        {
            "key": "heroContent",
            "name": "Hero Content Area",
            "assetType": "htmlOnly",
            "classification": "structuredcontent",
            "description": "HTML content for a Message",
            "contentFields": {
                "body": "<p>This is just some content from Adam.</p>"
            },
            "content": "<table><tr><td><div>{{body}}</div></td></tr></table>"
        }

+ Response 200
    [Structured Content Asset][]


### Partially Update an Asset Collection [PATCH]
__Batch-Editable Properties__:

| Name  | Type |
| :------------- | :------------- |
| owner  | User |
| status  | string |
| activeDate  | date |
| expirationDate  | date |
| category  | Category |
| tags  | array | 
| channels  | ChannelAvailability |

+ Request

        {
            "assets": [
                104,
                110,
                131,
                145
            ],
            "status": "active",
            "activeDate": "2014-05-06T15:34:02-04:00"
        }

+ Response 200
    [Assets][]


## Asset Collection [/assets{?$page,$pageSize,$orderBy}]
A paginated collection of Assets.
 
+ Parameters
    + page = `1` (integer, optional)
        Page of the collection to return.
    + pageSize = `25` (integer, optional)
        Number of objects to display per page.
    + orderBy = `id asc` (string, optional, `modifiedDate desc`)
        Field and direction used to sort the results. System-defined *sortable* fields are listed to the right.
        + Values
            + `id`
            + `key`
            + `name`
            + `createdDate`
            + `modifiedDate`
            + `activeDate`
            + `expirationDate`
            + `fileCreatedDate`
            + `fileModifiedDate`
            + `uploadedDate`

+ Model (application/json)

    + Body

            {
                "count": 3,
                "page": 1,
                "pageSize": 25,
                "links": {
                    "self": {
                        "href": "/v1/assets"
                    }
                },
                "items": [
                    {
                        "id": 101,
                        "key": "deniedOnceAgain",
                        "assetType": "image",
                        "classification": "file",
                        "version": 1,
                        "name": "DE-NIED Once Again",
                        "description": "Girl denies guy at basketball game",
                        "owner": {
                            "id": 282209,
                            "email": "agillaspie@exacttarget.com",
                            "name": "API Client S1QA3 app user",
                            "userId": "0e114f08-ebbb-42be-87b5-86db4d077b3c"
                        },
                        "createdDate": "2014-05-06T05:12:29-04:00",
                        "createdBy": {
                            "id": 282209,
                            "email": "agillaspie@exacttarget.com",
                            "name": "API Client S1QA3 app user",
                            "userId": "0e114f08-ebbb-42be-87b5-86db4d077b3c"
                        },
                        "modifiedDate": "2014-05-06T05:12:34-04:00",
                        "modifiedBy": {
                            "id": 282209,
                            "email": "agillaspie@exacttarget.com",
                            "name": "API Client S1QA3 app user",
                            "userId": "0e114f08-ebbb-42be-87b5-86db4d077b3c"
                        },
                        "enterpriseId": 281359,
                        "memberId": 281359,
                        "status": "active",
                        "activeDate": "0001-01-01T00:00:00",
                        "expirationDate": "0001-01-01T00:00:00",
                        "locked": false,
                        "favorite": false,
                        "category": {
                            "id": 0,
                            "name": "Assets",
                            "path": "/Assets",
                            "hasChildren": false,
                            "itemCount": 3
                        },
                        "tags": [
                            "memes",
                            "basketball",
                            "kiss",
                            "funny"
                        ],
                        "campaigns": [],
                        "customFields": {},
                        "channels": {
                            "email": false,
                            "mms": false,
                            "print": false,
                            "push": false,
                            "sms": false,
                            "social": false,
                            "web": false
                        },
                        "fileProperties": {
                            "fileName": "deniedAgain.gif",
                            "fileFormat": "gif",
                            "fileCreatedDate": null,
                            "fileModifiedDate": null,
                            "uploadedDate": "2014-05-06 07:12:29 +0000",
                            "importStatus": null,
                            "lensType": null,
                            "focalLength": null,
                            "cameraModel": null,
                            "iso": null,
                            "colorSpace": null,
                            "colorType": null,
                            "shutterSpeed": null,
                            "aperture": null,
                            "imageRotation": null,
                            "primaryFileName": null,
                            "previewStatus": null,
                            "title": null,
                            "fileUrl": "http://qanv1cdntomcat01.qa.local:8080/accounts/281359/catalog/downloads/originals/281359/281359/deniedAgain.gif/deniedAgain.gif",
                            "thumbUrl": "http://qanv1cdntomcat01.qa.local:8080/accounts/281359/catalog/downloads/preview/cache/281359/281359/deniedAgain.gif/preview.jpg"
                        }
                    },
                    {
                        "id": 144,
                        "key": "scienceStuff",
                        "assetType": "video",
                        "classification": "file",
                        "version": 1,
                        "name": "Science Stuff",
                        "description": "Science guys making foam expand",
                        "owner": {
                            "id": 281766,
                            "email": "agillaspie@exacttarget.com",
                            "name": "Adam Gillaspie",
                            "userId": "s1.qa3.agillaspie"
                        },
                        "createdDate": "2014-02-01T23:25:30-05:00",
                        "createdBy": {
                            "id": 281766,
                            "email": "agillaspie@exacttarget.com",
                            "name": "Adam Gillaspie",
                            "userId": "s1.qa3.agillaspie"
                        },
                        "modifiedDate": "2014-04-30T20:38:04-04:00",
                        "modifiedBy": {
                            "id": 281766,
                            "email": "agillaspie@exacttarget.com",
                            "name": "Adam Gillaspie",
                            "userId": "s1.qa3.agillaspie"
                        },
                        "enterpriseId": 281359,
                        "memberId": 281359,
                        "status": "active",
                        "activeDate": "2014-04-24T23:44:51-04:00",
                        "expirationDate": "0001-01-01T00:00:00",
                        "locked": false,
                        "favorite": false,
                        "category": {
                            "id": 0,
                            "name": "Assets",
                            "path": "/Assets",
                            "hasChildren": false,
                            "itemCount": 3
                        },
                        "tags": [
                            "science"
                        ],
                        "campaigns": [],
                        "customFields": {},
                        "channels": {
                            "email": true,
                            "mms": false,
                            "print": true,
                            "push": false,
                            "sms": false,
                            "social": true,
                            "web": true
                        },
                        "fileProperties": {
                            "fileName": "scienceStuff.mp4",
                            "fileFormat": "mp4",
                            "fileSize": "291.18 KB",
                            "fileCreatedDate": null,
                            "fileModifiedDate": "2014-02-28 17:17:46 +0000",
                            "uploadedDate": "2014-02-19 10:47:02 +0000",
                            "importStatus": "complete",
                            "length": "00:00:06",
                            "duration": "6.15166666666667",
                            "frameRate": "30.00",
                            "bitsPerSample": null,
                            "videoCodec": null,
                            "compression": null,
                            "artist": null,
                            "creator": null,
                            "contributor": null,
                            "primaryFileName": null,
                            "previewStatus": "2",
                            "title": null,
                            "fileUrl": "http://qanv1cdntomcat01.qa.local:8080/accounts/281359/catalog/downloads/originals/281359/281359/scienceStuff.mp4/scienceStuff.mp4",
                            "thumbUrl": "http://qanv1cdntomcat01.qa.local:8080/accounts/281359/catalog/downloads/preview/cache/281359/281359/scienceStuff.mp4/preview.jpg"
                        }
                    },
                    {
                        "id": 229,
                        "key": "heroContent",
                        "assetType": "htmlonly",
                        "classification": "structuredcontent",
                        "version": 1,
                        "name": "Hero Content Area",
                        "description": "HTML content for a Message",
                        "owner": {
                            "id": 282209,
                            "email": "agillaspie@exacttarget.com",
                            "name": "API Client S1QA3 app user",
                            "userId": "0e114f08-ebbb-42be-87b5-86db4d077b3c"
                        },
                        "createdDate": "2014-05-06T14:59:53-04:00",
                        "createdBy": {
                            "id": 282209,
                            "email": "agillaspie@exacttarget.com",
                            "name": "API Client S1QA3 app user",
                            "userId": "0e114f08-ebbb-42be-87b5-86db4d077b3c"
                        },
                        "modifiedDate": "2014-05-06T14:59:54-04:00",
                        "modifiedBy": {
                            "id": 282209,
                            "email": "agillaspie@exacttarget.com",
                            "name": "API Client S1QA3 app user",
                            "userId": "0e114f08-ebbb-42be-87b5-86db4d077b3c"
                        },
                        "enterpriseId": 281359,
                        "memberId": 281359,
                        "status": "active",
                        "activeDate": "2014-05-06T15:34:02-04:00",
                        "expirationDate": "0001-01-01T00:00:00",
                        "locked": false,
                        "favorite": true,
                        "category": {
                            "id": 0,
                            "name": "Assets",
                            "path": "/Assets",
                            "hasChildren": false,
                            "itemCount": 3
                        },
                        "tags": [],
                        "campaigns": [],
                        "customFields": {
                            "partner": "ExactTarget",
                            "season": "Summer"
                        },
                        "channels": {
                            "email": false,
                            "mms": false,
                            "print": false,
                            "push": false,
                            "sms": false,
                            "social": false,
                            "web": false
                        },
                        "contentFields": {
                            "body": "<p>This is just some content from Adam.</p>"
                        },
                        "content": "<table><tr><td><div>{{body}}</div></td></tr></table>"
                    }
                ]
            }

### Retrieve All Assets [GET]

+ Response 200
    [Asset Collection][]


## Asset Collection by AssetType [/assets/type:{assetType}]
A collection of Assets with the given *assetType*.

+ Parameters
    + assetType (string)
        AssetType of an Asset. *System-defined* AssetTypes are listed to the right. Additional *Custom* AssetTypes may also be available for an account.
        + Values
            + `archive`
            + `audio`
            + `code`
            + `document`
            + `image`
            + `rawImage`
            + `video`
            + `none`
            + `htmlOnly`
            + `textOnly`
            + `imageOnly`
            + `textPlusImage`
            + `textPlusImagePlusHeadline`
            + `dynamicContent`
            + `header`
            + `footer`
            + `message`

### Retrieve Assets by AssetType [GET]

+ Response 200
    [Asset Collection][]


## Asset Collection by Classification [/assets/classification:{classification}]
A collection of Assets with the given *classification*.

+ Parameters
    + classification (string)
        Classification of an Asset
        + Values
            + `file`
            + `structuredcontent`
            + `content`

### Retrieve Assets by Classification [GET]

+ Response 200
    [Asset Collection][]


## Asset Collection by Category [/assets/f:{categoryId}{?includeChildren}]
A collection of Assets from the given *categoryId*.

### Retrieve Assets by CategoryId [GET]
+ Parameters
    + categoryId (required, integer, `310`) ... Numeric `id`  or string alias of the Category.
    + includeChildren = `false` (optional, boolean) ... Specify whether or not to include assets in child categories.
    
+ Response 200
    [Asset Collection][]


## Asset Collection by Tag [/assets/tag:{name}]
A collection of Assets associated with the given *tag*.

+ Parameters
    + name (required, string, `summer`) ... Name of the Tag. *(case-insensitive)*

### Retrieve Assets by Tag [GET]

+ Response 200
    [Asset Collection][]


## Favorite Assets by ID [/assets/{id*}/favorite]
Favorite or Un-Favorite Assets for the authenticated user.

+ Parameters
    + id (required, integer, `120,145,170`) ... Numeric `id` of the Asset. Specify multiple Assets by comma-delimiting `id`s.

### Favorite One or Many Assets [POST]

+ Response 202
    [Assets][]

### Un-Favorite One or Many Assets [DELETE]

+ Response 200
    [Assets][]


## Favorited Asset Collection [/favorites/user:{userId}]
A collection of Assets favorited by the given *user*.

+ Parameters
    + userId = `@me` (optional) ... Numeric `id` or string alias of the User.

### Retrieve Favorite Assets [GET]

+ Response 200
    [Asset Collection][]


## BRIDGE Asset [/asset-internal/v1/bridge/assets/{id}]
A single Asset identified by a numeric *id*, accessed via Bridge API.

+ Model (application/json)

    + Body

            {
                "id": 104,
                "key": "justAKitten",
                "assetType": "image",
                "classification": "file",
                "version": 1,
                "name": "Kitten",
                "description": "Kitten sitting on a rug",
                "owner": {
                    "id": 282209,
                    "email": "agillaspie@exacttarget.com",
                    "name": "API Client S1QA3 app user",
                    "userId": "0e114f08-ebbb-42be-87b5-86db4d077b3c"
                },
                "createdDate": "2014-05-06T05:28:01-04:00",
                "createdBy": {
                    "id": 282209,
                    "email": "agillaspie@exacttarget.com",
                    "name": "API Client S1QA3 app user",
                    "userId": "0e114f08-ebbb-42be-87b5-86db4d077b3c"
                },
                "modifiedDate": "2014-05-06T05:28:03-04:00",
                "modifiedBy": {
                    "id": 282209,
                    "email": "agillaspie@exacttarget.com",
                    "name": "API Client S1QA3 app user",
                    "userId": "0e114f08-ebbb-42be-87b5-86db4d077b3c"
                },
                "enterpriseId": 281359,
                "memberId": 281359,
                "status": "active",
                "activeDate": "2014-05-06T05:28:01-04:00",
                "expirationDate": "0001-01-01T00:00:00",
                "locked": false,
                "favorite": true,
                "category": {
                    "id": 0,
                    "name": "Assets",
                    "path": "/Assets",
                    "hasChildren": false,
                    "itemCount": 3
                },
                "tags": [
                    "animals",
                    "kitten",
                    "cute"
                ],
                "campaigns": [],
                "customFields": {
                    "animal": "cat",
                    "season": "Spring"
                },
                "channels": {
                    "email": false,
                    "mms": false,
                    "print": false,
                    "push": false,
                    "sms": false,
                    "social": false,
                    "web": false
                },
                "fileProperties": {
                    "fileName": "justAKitten.jpg",
                    "fileFormat": "jpg",
                    "fileCreatedDate": "2014-05-06 07:28:01 +0000",
                    "fileModifiedDate": "2014-05-06 07:28:01 +0000",
                    "uploadedDate": "2014-05-06 07:28:01 +0000",
                    "importStatus": "complete",
                    "lensType": null,
                    "focalLength": null,
                    "cameraModel": null,
                    "iso": null,
                    "colorSpace": null,
                    "colorType": null,
                    "shutterSpeed": null,
                    "aperture": null,
                    "imageRotation": null,
                    "primaryFileName": null,
                    "previewStatus": "complete",
                    "title": null,
                    "fileUrl": "http://qanv1cdntomcat01.qa.local:8080/accounts/281359/catalog/downloads/originals/281359/281359/justAKitten.jpg/justAKitten.jpg",
                    "thumbUrl": "http://qanv1cdntomcat01.qa.local:8080/accounts/281359/catalog/downloads/preview/cache/281359/281359/justAKitten.jpg/preview.jpg"
                }
            }


### Retrieve an Asset via Bridge [GET]

+ Parameters
    + id (required, integer, `104`) ... Numeric `id` of the Asset.

+ Response 200
    [Asset][]


### Partially Update an Asset via Bridge [PATCH]
__Editable Properties__:

| Name  | Type |
| :------------- | :------------- |
| key  | string | 
| name  | string |
| description  | string |
| owner  | User |
| status  | string |
| activeDate  | date |
| expirationDate  | date |
| category  | Category |
| tags  | array | 
| channels  | ChannelAvailability |
| customFields  | object | 
| contentFields  | object | 
| content  | string |

+ Request

        {
            "id": 104,
            "key": "justAKitten",
            "name": "Kitten",
            "description": "Kitten sitting on a rug",
            "owner": {
                "id": 282209
            },
            "status": "active",
            "activeDate": "2014-05-06T05:28:01-04:00",
            "expirationDate": "0001-01-01T00:00:00",
            "category": {
                "id": 0
            },
            "tags": [
                "animals",
                "kitten",
                "cute"
            ],
            "customFields": {
                "animal": "cat",
                "season": "Spring"
            },
            "channels": {
                "email": false,
                "mms": false,
                "print": false,
                "push": false,
                "sms": false,
                "social": false,
                "web": false
            }
        }

+ Response 200
    [Asset][]


### Delete an Asset via Bridge [DELETE]

+ Parameters
    + id (required, integer, `120,145,170`) ... Numeric `id` of the Asset. Specify multiple Assets by comma-delimiting `id`s.

+ Response 204


## BRIDGE Asset by Key [/asset-internal/v1/bridge/assets/key:{key}]
A single Asset identified by a string *key*, accessed via Bridge API.

+ Parameters
    + key (required, string, `justAKitten`) ... String `key` of the Asset.

### Retrieve an Asset by Key [GET]

+ Response 200
    [Asset][]


## BRIDGE Assets [/asset-internal/v1/bridge/assets/]
One or multiple Assets, accessed via Bridge API.

+ Model (application/json)

    + Body

            {
                "count": 3,
                "links": {
                    "self": {
                        "href": "/v1/bridge/assets"
                    }
                },
                "items": [
                    {
                        "id": 101,
                        "key": "deniedOnceAgain",
                        "assetType": "image",
                        "classification": "file",
                        "version": 1,
                        "name": "DE-NIED Once Again",
                        "description": "Girl denies guy at basketball game",
                        "owner": {
                            "id": 282209,
                            "email": "agillaspie@exacttarget.com",
                            "name": "API Client S1QA3 app user",
                            "userId": "0e114f08-ebbb-42be-87b5-86db4d077b3c"
                        },
                        "createdDate": "2014-05-06T05:12:29-04:00",
                        "createdBy": {
                            "id": 282209,
                            "email": "agillaspie@exacttarget.com",
                            "name": "API Client S1QA3 app user",
                            "userId": "0e114f08-ebbb-42be-87b5-86db4d077b3c"
                        },
                        "modifiedDate": "2014-05-06T05:12:34-04:00",
                        "modifiedBy": {
                            "id": 282209,
                            "email": "agillaspie@exacttarget.com",
                            "name": "API Client S1QA3 app user",
                            "userId": "0e114f08-ebbb-42be-87b5-86db4d077b3c"
                        },
                        "enterpriseId": 281359,
                        "memberId": 281359,
                        "status": "active",
                        "activeDate": "0001-01-01T00:00:00",
                        "expirationDate": "0001-01-01T00:00:00",
                        "locked": false,
                        "favorite": false,
                        "category": {
                            "id": 0,
                            "name": "Assets",
                            "path": "/Assets",
                            "hasChildren": false,
                            "itemCount": 3
                        },
                        "tags": [
                            "memes",
                            "basketball",
                            "kiss",
                            "funny"
                        ],
                        "campaigns": [],
                        "customFields": {},
                        "channels": {
                            "email": false,
                            "mms": false,
                            "print": false,
                            "push": false,
                            "sms": false,
                            "social": false,
                            "web": false
                        },
                        "fileProperties": {
                            "fileName": "deniedAgain.gif",
                            "fileFormat": "gif",
                            "fileCreatedDate": null,
                            "fileModifiedDate": null,
                            "uploadedDate": "2014-05-06 07:12:29 +0000",
                            "importStatus": null,
                            "lensType": null,
                            "focalLength": null,
                            "cameraModel": null,
                            "iso": null,
                            "colorSpace": null,
                            "colorType": null,
                            "shutterSpeed": null,
                            "aperture": null,
                            "imageRotation": null,
                            "primaryFileName": null,
                            "previewStatus": null,
                            "title": null,
                            "fileUrl": "http://qanv1cdntomcat01.qa.local:8080/accounts/281359/catalog/downloads/originals/281359/281359/deniedAgain.gif/deniedAgain.gif",
                            "thumbUrl": "http://qanv1cdntomcat01.qa.local:8080/accounts/281359/catalog/downloads/preview/cache/281359/281359/deniedAgain.gif/preview.jpg"
                        }
                    },
                    {
                        "id": 144,
                        "key": "scienceStuff",
                        "assetType": "video",
                        "classification": "file",
                        "version": 1,
                        "name": "Science Stuff",
                        "description": "Science guys making foam expand",
                        "owner": {
                            "id": 281766,
                            "email": "agillaspie@exacttarget.com",
                            "name": "Adam Gillaspie",
                            "userId": "s1.qa3.agillaspie"
                        },
                        "createdDate": "2014-02-01T23:25:30-05:00",
                        "createdBy": {
                            "id": 281766,
                            "email": "agillaspie@exacttarget.com",
                            "name": "Adam Gillaspie",
                            "userId": "s1.qa3.agillaspie"
                        },
                        "modifiedDate": "2014-04-30T20:38:04-04:00",
                        "modifiedBy": {
                            "id": 281766,
                            "email": "agillaspie@exacttarget.com",
                            "name": "Adam Gillaspie",
                            "userId": "s1.qa3.agillaspie"
                        },
                        "enterpriseId": 281359,
                        "memberId": 281359,
                        "status": "active",
                        "activeDate": "2014-04-24T23:44:51-04:00",
                        "expirationDate": "0001-01-01T00:00:00",
                        "locked": false,
                        "favorite": false,
                        "category": {
                            "id": 0,
                            "name": "Assets",
                            "path": "/Assets",
                            "hasChildren": false,
                            "itemCount": 3
                        },
                        "tags": [
                            "science"
                        ],
                        "campaigns": [],
                        "customFields": {},
                        "channels": {
                            "email": true,
                            "mms": false,
                            "print": true,
                            "push": false,
                            "sms": false,
                            "social": true,
                            "web": true
                        },
                        "fileProperties": {
                            "fileName": "scienceStuff.mp4",
                            "fileFormat": "mp4",
                            "fileSize": "291.18 KB",
                            "fileCreatedDate": null,
                            "fileModifiedDate": "2014-02-28 17:17:46 +0000",
                            "uploadedDate": "2014-02-19 10:47:02 +0000",
                            "importStatus": "complete",
                            "length": "00:00:06",
                            "duration": "6.15166666666667",
                            "frameRate": "30.00",
                            "bitsPerSample": null,
                            "videoCodec": null,
                            "compression": null,
                            "artist": null,
                            "creator": null,
                            "contributor": null,
                            "primaryFileName": null,
                            "previewStatus": "2",
                            "title": null,
                            "fileUrl": "http://qanv1cdntomcat01.qa.local:8080/accounts/281359/catalog/downloads/originals/281359/281359/scienceStuff.mp4/scienceStuff.mp4",
                            "thumbUrl": "http://qanv1cdntomcat01.qa.local:8080/accounts/281359/catalog/downloads/preview/cache/281359/281359/scienceStuff.mp4/preview.jpg"
                        }
                    },
                    {
                        "id": 229,
                        "key": "heroContent",
                        "assetType": "htmlonly",
                        "classification": "structuredcontent",
                        "version": 1,
                        "name": "Hero Content Area",
                        "description": "HTML content for a Message",
                        "owner": {
                            "id": 282209,
                            "email": "agillaspie@exacttarget.com",
                            "name": "API Client S1QA3 app user",
                            "userId": "0e114f08-ebbb-42be-87b5-86db4d077b3c"
                        },
                        "createdDate": "2014-05-06T14:59:53-04:00",
                        "createdBy": {
                            "id": 282209,
                            "email": "agillaspie@exacttarget.com",
                            "name": "API Client S1QA3 app user",
                            "userId": "0e114f08-ebbb-42be-87b5-86db4d077b3c"
                        },
                        "modifiedDate": "2014-05-06T14:59:54-04:00",
                        "modifiedBy": {
                            "id": 282209,
                            "email": "agillaspie@exacttarget.com",
                            "name": "API Client S1QA3 app user",
                            "userId": "0e114f08-ebbb-42be-87b5-86db4d077b3c"
                        },
                        "enterpriseId": 281359,
                        "memberId": 281359,
                        "status": "active",
                        "activeDate": "2014-05-06T15:34:02-04:00",
                        "expirationDate": "0001-01-01T00:00:00",
                        "locked": false,
                        "favorite": true,
                        "category": {
                            "id": 0,
                            "name": "Assets",
                            "path": "/Assets",
                            "hasChildren": false,
                            "itemCount": 3
                        },
                        "tags": [],
                        "campaigns": [],
                        "customFields": {
                            "partner": "ExactTarget",
                            "season": "Summer"
                        },
                        "channels": {
                            "email": false,
                            "mms": false,
                            "print": false,
                            "push": false,
                            "sms": false,
                            "social": false,
                            "web": false
                        },
                        "contentFields": {
                            "body": "<p>This is just some content from Adam.</p>"
                        },
                        "content": "<table><tr><td><div>{{body}}</div></td></tr></table>"
                    }
                ]
            }

### Create an Asset via Bridge [POST]
__Available Request Properties__:

| Name  | Required | Type | Default
| :------------- | :------------- | :------------- | :------------- |
| key  | __`true`__  | string | 
| name  | __`true`__  | string |
| assetType  | __`true`__  | string | 
| classification  | __`true`__  | string | 
| description  | `false`  | string |
| owner  | `false`  | User | Authenticated User
| status  | `false`  | string | `active`
| activeDate  | `false`  | date | Now
| expirationDate  | `false`  | date | `null`
| category  | `false`  | Category | Default Folder
| tags  | `false`  | array | 
| channels  | `false`  | ChannelAvailability | All Channels
| customFields  | `false`  | object | 
| contentFields  | `false`  | object | 
| content  | `false`  | string |

+ Request

        {
            "key": "heroContent",
            "name": "Hero Content Area",
            "assetType": "htmlOnly",
            "classification": "structuredcontent",
            "description": "HTML content for a Message",
            "contentFields": {
                "body": "<p>This is just some content from Adam.</p>"
            },
            "content": "<table><tr><td><div>{{body}}</div></td></tr></table>"
        }

+ Response 200
    [Structured Content Asset][]


### Partially Update an Asset Collection via Bridge [PATCH]
__Batch-Editable Properties__:

| Name  | Type |
| :------------- | :------------- |
| owner  | User |
| status  | string |
| activeDate  | date |
| expirationDate  | date |
| category  | Category |
| tags  | array | 
| channels  | ChannelAvailability |

+ Request

        {
            "assets": [
                104,
                110,
                131,
                145
            ],
            "status": "active",
            "activeDate": "2014-05-06T15:34:02-04:00"
        }

+ Response 200
    [Assets][]


## BRIDGE Asset Collection [/asset-internal/v1/bridge/assets{?$page,$pageSize,$orderBy}]
A paginated collection of Assets, accessed via Bridge API.
 
+ Parameters
    + page = `1` (integer, optional)
        Page of the collection to return.
    + pageSize = `25` (integer, optional)
        Number of objects to display per page.
    + orderBy = `id asc` (string, optional, `modifiedDate desc`)
        Field and direction used to sort the results. System-defined *sortable* fields are listed to the right.
        + Values
            + `id`
            + `key`
            + `name`
            + `createdDate`
            + `modifiedDate`
            + `activeDate`
            + `expirationDate`
            + `fileCreatedDate`
            + `fileModifiedDate`
            + `uploadedDate`

+ Model (application/json)

    + Body

            {
                "count": 3,
                "page": 1,
                "pageSize": 25,
                "links": {
                    "self": {
                        "href": "/v1/bridge/assets"
                    }
                },
                "items": [
                    {
                        "id": 101,
                        "key": "deniedOnceAgain",
                        "assetType": "image",
                        "classification": "file",
                        "version": 1,
                        "name": "DE-NIED Once Again",
                        "description": "Girl denies guy at basketball game",
                        "owner": {
                            "id": 282209,
                            "email": "agillaspie@exacttarget.com",
                            "name": "API Client S1QA3 app user",
                            "userId": "0e114f08-ebbb-42be-87b5-86db4d077b3c"
                        },
                        "createdDate": "2014-05-06T05:12:29-04:00",
                        "createdBy": {
                            "id": 282209,
                            "email": "agillaspie@exacttarget.com",
                            "name": "API Client S1QA3 app user",
                            "userId": "0e114f08-ebbb-42be-87b5-86db4d077b3c"
                        },
                        "modifiedDate": "2014-05-06T05:12:34-04:00",
                        "modifiedBy": {
                            "id": 282209,
                            "email": "agillaspie@exacttarget.com",
                            "name": "API Client S1QA3 app user",
                            "userId": "0e114f08-ebbb-42be-87b5-86db4d077b3c"
                        },
                        "enterpriseId": 281359,
                        "memberId": 281359,
                        "status": "active",
                        "activeDate": "0001-01-01T00:00:00",
                        "expirationDate": "0001-01-01T00:00:00",
                        "locked": false,
                        "favorite": false,
                        "category": {
                            "id": 0,
                            "name": "Assets",
                            "path": "/Assets",
                            "hasChildren": false,
                            "itemCount": 3
                        },
                        "tags": [
                            "memes",
                            "basketball",
                            "kiss",
                            "funny"
                        ],
                        "campaigns": [],
                        "customFields": {},
                        "channels": {
                            "email": false,
                            "mms": false,
                            "print": false,
                            "push": false,
                            "sms": false,
                            "social": false,
                            "web": false
                        },
                        "fileProperties": {
                            "fileName": "deniedAgain.gif",
                            "fileFormat": "gif",
                            "fileCreatedDate": null,
                            "fileModifiedDate": null,
                            "uploadedDate": "2014-05-06 07:12:29 +0000",
                            "importStatus": null,
                            "lensType": null,
                            "focalLength": null,
                            "cameraModel": null,
                            "iso": null,
                            "colorSpace": null,
                            "colorType": null,
                            "shutterSpeed": null,
                            "aperture": null,
                            "imageRotation": null,
                            "primaryFileName": null,
                            "previewStatus": null,
                            "title": null,
                            "fileUrl": "http://qanv1cdntomcat01.qa.local:8080/accounts/281359/catalog/downloads/originals/281359/281359/deniedAgain.gif/deniedAgain.gif",
                            "thumbUrl": "http://qanv1cdntomcat01.qa.local:8080/accounts/281359/catalog/downloads/preview/cache/281359/281359/deniedAgain.gif/preview.jpg"
                        }
                    },
                    {
                        "id": 144,
                        "key": "scienceStuff",
                        "assetType": "video",
                        "classification": "file",
                        "version": 1,
                        "name": "Science Stuff",
                        "description": "Science guys making foam expand",
                        "owner": {
                            "id": 281766,
                            "email": "agillaspie@exacttarget.com",
                            "name": "Adam Gillaspie",
                            "userId": "s1.qa3.agillaspie"
                        },
                        "createdDate": "2014-02-01T23:25:30-05:00",
                        "createdBy": {
                            "id": 281766,
                            "email": "agillaspie@exacttarget.com",
                            "name": "Adam Gillaspie",
                            "userId": "s1.qa3.agillaspie"
                        },
                        "modifiedDate": "2014-04-30T20:38:04-04:00",
                        "modifiedBy": {
                            "id": 281766,
                            "email": "agillaspie@exacttarget.com",
                            "name": "Adam Gillaspie",
                            "userId": "s1.qa3.agillaspie"
                        },
                        "enterpriseId": 281359,
                        "memberId": 281359,
                        "status": "active",
                        "activeDate": "2014-04-24T23:44:51-04:00",
                        "expirationDate": "0001-01-01T00:00:00",
                        "locked": false,
                        "favorite": false,
                        "category": {
                            "id": 0,
                            "name": "Assets",
                            "path": "/Assets",
                            "hasChildren": false,
                            "itemCount": 3
                        },
                        "tags": [
                            "science"
                        ],
                        "campaigns": [],
                        "customFields": {},
                        "channels": {
                            "email": true,
                            "mms": false,
                            "print": true,
                            "push": false,
                            "sms": false,
                            "social": true,
                            "web": true
                        },
                        "fileProperties": {
                            "fileName": "scienceStuff.mp4",
                            "fileFormat": "mp4",
                            "fileSize": "291.18 KB",
                            "fileCreatedDate": null,
                            "fileModifiedDate": "2014-02-28 17:17:46 +0000",
                            "uploadedDate": "2014-02-19 10:47:02 +0000",
                            "importStatus": "complete",
                            "length": "00:00:06",
                            "duration": "6.15166666666667",
                            "frameRate": "30.00",
                            "bitsPerSample": null,
                            "videoCodec": null,
                            "compression": null,
                            "artist": null,
                            "creator": null,
                            "contributor": null,
                            "primaryFileName": null,
                            "previewStatus": "2",
                            "title": null,
                            "fileUrl": "http://qanv1cdntomcat01.qa.local:8080/accounts/281359/catalog/downloads/originals/281359/281359/scienceStuff.mp4/scienceStuff.mp4",
                            "thumbUrl": "http://qanv1cdntomcat01.qa.local:8080/accounts/281359/catalog/downloads/preview/cache/281359/281359/scienceStuff.mp4/preview.jpg"
                        }
                    },
                    {
                        "id": 229,
                        "key": "heroContent",
                        "assetType": "htmlonly",
                        "classification": "structuredcontent",
                        "version": 1,
                        "name": "Hero Content Area",
                        "description": "HTML content for a Message",
                        "owner": {
                            "id": 282209,
                            "email": "agillaspie@exacttarget.com",
                            "name": "API Client S1QA3 app user",
                            "userId": "0e114f08-ebbb-42be-87b5-86db4d077b3c"
                        },
                        "createdDate": "2014-05-06T14:59:53-04:00",
                        "createdBy": {
                            "id": 282209,
                            "email": "agillaspie@exacttarget.com",
                            "name": "API Client S1QA3 app user",
                            "userId": "0e114f08-ebbb-42be-87b5-86db4d077b3c"
                        },
                        "modifiedDate": "2014-05-06T14:59:54-04:00",
                        "modifiedBy": {
                            "id": 282209,
                            "email": "agillaspie@exacttarget.com",
                            "name": "API Client S1QA3 app user",
                            "userId": "0e114f08-ebbb-42be-87b5-86db4d077b3c"
                        },
                        "enterpriseId": 281359,
                        "memberId": 281359,
                        "status": "active",
                        "activeDate": "2014-05-06T15:34:02-04:00",
                        "expirationDate": "0001-01-01T00:00:00",
                        "locked": false,
                        "favorite": true,
                        "category": {
                            "id": 0,
                            "name": "Assets",
                            "path": "/Assets",
                            "hasChildren": false,
                            "itemCount": 3
                        },
                        "tags": [],
                        "campaigns": [],
                        "customFields": {
                            "partner": "ExactTarget",
                            "season": "Summer"
                        },
                        "channels": {
                            "email": false,
                            "mms": false,
                            "print": false,
                            "push": false,
                            "sms": false,
                            "social": false,
                            "web": false
                        },
                        "contentFields": {
                            "body": "<p>This is just some content from Adam.</p>"
                        },
                        "content": "<table><tr><td><div>{{body}}</div></td></tr></table>"
                    }
                ]
            }

### Retrieve All Assets via Bridge [GET]

+ Response 200
    [Asset Collection][]


## BRIDGE Asset Collection by AssetType [/asset-internal/v1/bridge/assets/type:{assetType}]
A collection of Assets with the given *assetType*, accessed via Bridge API.

+ Parameters
    + assetType (string)
        AssetType of an Asset. *System-defined* AssetTypes are listed to the right. Additional *Custom* AssetTypes may also be available for an account.
        + Values
            + `archive`
            + `audio`
            + `code`
            + `document`
            + `image`
            + `rawImage`
            + `video`
            + `none`
            + `htmlOnly`
            + `textOnly`
            + `imageOnly`
            + `textPlusImage`
            + `textPlusImagePlusHeadline`
            + `dynamicContent`
            + `header`
            + `footer`
            + `message`

### Retrieve Assets by AssetType via Bridge [GET]

+ Response 200
    [Asset Collection][]


## BRIDGE Asset Collection by Classification [/asset-internal/v1/bridge/assets/classification:{classification}]
A collection of Assets with the given *classification*, accessed via Bridge API.

+ Parameters
    + classification (string)
        Classification of an Asset
        + Values
            + `file`
            + `structuredcontent`
            + `content`

### Retrieve Assets by Classification via Bridge [GET]

+ Response 200
    [Asset Collection][]


## BRIDGE Asset Collection by Category [/asset-internal/v1/bridge/assets/f:{categoryId}{?includeChildren}]
A collection of Assets from the given *categoryId*, accessed via Bridge API.

### Retrieve Assets by CategoryId via Bridge [GET]
+ Parameters
    + categoryId (required, integer, `310`) ... Numeric `id`  or string alias of the Category.
    + includeChildren = `false` (optional, boolean) ... Specify whether or not to include assets in child categories.
    
+ Response 200
    [Asset Collection][]


## BRIDGE Asset Collection by Tag [/asset-internal/v1/bridge/assets/tag:{name}]
A collection of Assets associated with the given *tag*, accessed via Bridge API.

+ Parameters
    + name (required, string, `summer`) ... Name of the Tag. *(case-insensitive)*

### Retrieve Assets by Tag via Bridge [GET]

+ Response 200
    [Asset Collection][]

# Group Sites

## Microsite by Id [/sites-internal/v1/microsites/{id}]

Definition of a Microsite

+ Model (application/json)
    JSON Representation of a single Microste.  
    + Body
    
            {
                "id": "00000000-0000-0000-0000-000000000000",
                "autoPublish": false,
                "categoryId": 123,
                "createdBy": 123,
                "createdDate": "2014-02-27T22:14:38+00:00",
                "description": "A 50 character desc",
                "entityState": 1,
                "masterCssPageId": 123,
                "masterJsPageId": 123,
                "memberId": 123,
                "modifiedBy": 123,
                "modifiedDate": "2014-02-27T22:14:38+00:00",
                "name": "A 50 character name",
                "pageCount": 12,
                "pageLimit": 12,
                "publishedCount": 12,
                "type": 1
            }

+ Parameters
    + id (required) ... Id for the Microsite.

### Retrieve a Microsite by Id [GET]

+ Response 200
    [Microsite by Id][]




## Microsite Collection [/sites-internal/v1/microsites/{?filter,orderBy,page,pageSize}]

Definition of a Microsite Collection

+ Model (application/json)
    JSON Representation of a collection of Microsites.  
    + Body
    
            {
                "_links": {
                    "self": { "href": "/sites-internal/v1/microsites" },
                    "next": { "href": "/sites-internal/v1/microsites/?$orderyBy=createDate&$page=3&$pageSize=50" },
                    "prev": { "href": "/sites-internal/v1/microsites/?$orderyBy=createDate&$page=1&$pageSize=50" }
                },
                "count": 1, 
                "page": 1,
                "pageSize": 50,
                "items":[
                    {
                        "id": "00000000-0000-0000-0000-000000000000",
                        "autoPublish": false,
                        "categoryId": 123,
                        "createdBy": 123,
                        "createdDate": "2014-02-27T22:14:38+00:00",
                        "description": "A 50 character string",
                        "entityState": 1,
                        "masterCssPageId": 123,
                        "masterJsPageId": 123,
                        "memberId": 123,
                        "modifiedBy": 123,
                        "modifiedDate": "2014-02-27T22:14:38+00:00",
                        "name": "A 50 character string",
                        "pageCount": 12,
                        "pageLimit": 12,
                        "publishedCount": 12,
                        "type": 1
                    }
                ]
            }

+ Parameters
    + filter (string, optional)
        JSON Collection of filter objects to be used to filter results.
        + Values
            + `entityState`
            + `name`
            + `type`
    + orderBy = `createDate` (optional, string) ... Specify the field to sort Microsites by, default createDate.
    + page (optional, number `1`) ... Page number to return.
    + pageSize (optional, number, `100`) ... Number of records to return, default 15.

### Retrieve Microsites [GET]

+ Response 200
    [Microsite Collection][]





## Landing Page by Id [/sites-internal/v1/landingPages/{id}/]

Definition of a Landing Page

+ Model (application/json)
    JSON Representation of a single Landing Page.  
    + Body
    
            {
                "id": 123,
                "classificationType": 1,
                "createdBy": 123,
                "creationMethod": 1,
                "description": "a 250 character string",
                "documentType": 1,
                "entityState": 1,
                "isPublished": false,
                "metaDescription": "a 500 character string",
                "metaFollow": 1,
                "metaIndex": 1,
                "metaKeyWords": "a 500 character string",
                "memberId": 123456,
                "mimeType":1 ,
                "publishedDate":"2014-02-27T22:14:38+00:00",
                "publishedHtml": "a max character string",
                "purlKey": "a 300 character string",
                "publishingExpirationDate": "2014-02-27T22:14:38+00:00",
                "securityType": 1,
                "siteId": "00000000-0000-0000-0000-000000000000",
                "templateId": "00000000-0000-0000-0000-000000000000"
            }

+ Parameters
    + id (required) ... Id for the Landing Page.

### Retrieve a Landing Page by Id [GET]

+ Response 200
    [Landing Page by Id][]



## Landing Page Collection [/sites-internal/v1/landingPages/{?filter,orderBy,page,pageSize}]

Definition of a Landing Page Collection

+ Model (application/json)
    JSON Representation of a collection of Landing Pages by Microsite Id.  
    + Body
    
            {
                "_links": {
                    "self": { "href": "/sites-internal/v1/landingPages" },
                    "next": { "href": "/sites-internal/v1/landingPages/?$orderyBy=createDate&$page=3&$pageSize=50" },
                    "prev": { "href": "/sites-internal/v1/landingPages/?$orderyBy=createDate&$page=1&$pageSize=50" }
                },
                "count": 1, 
                "page": 1,
                "pageSize": 50,
                "items":[
                    {
                        "id": 123,
                        "classificationType": 1,
                        "createdBy": 123,
                        "creationMethod": 1,
                        "description": "a 250 character string",
                        "documentType": 1,
                        "entityState": 1,
                        "isPublished": false,
                        "metaDescription": "a 500 character string",
                        "metaFollow": 1,
                        "metaIndex": 1,
                        "metaKeyWords": "a 500 character string",
                        "memberId": 123456,
                        "mimeType":1 ,
                        "publishedDate":"2014-02-27T22:14:38+00:00",
                        "publishedHtml": "a max character string",
                        "purlKey": "a 300 character string",
                        "publishingExpirationDate": "2014-02-27T22:14:38+00:00",
                        "securityType": 1,
                        "siteId": "00000000-0000-0000-0000-000000000000",
                        "templateId": "00000000-0000-0000-0000-000000000000"
                    }
                ] 
            }

+ Parameters
    + filter (string, optional)
        JSON Collection of filter objects to be used to filter results.
        + Values
            + `classificationType`
            + `creationMethod`
            + `isPublished`
    + orderBy = `createDate` (optional, string) ... Specify the field to sort Landing Pages by, default createDate.
    + page (optional, number `1`) ... Page number to return.
    + pageSize (optional, number, `100`) ... Number of records to return, default 15.

### Retrieve Landing Page Collection [GET]

+ Response 200
    [Landing Page Collection][]




## Landing Page Collection by Microsite Id [/sites-internal/v1/microsites/{siteId}/landingPages/{?filter,orderBy,page,pageSize}]

Definition of a Landing Page Collection by Microsite Id

+ Model (application/json)
    JSON Representation of a collection of Landing Pages by Microsite Id.  
    + Body
    
            {
                "_links": {
                    "self": { "href": "/sites-internal/v1/microsites/{siteId}/landingPages" },
                    "next": { "href": "/sites-internal/v1/microsites/{siteId}/landingPages/?$orderyBy=createDate&$page=3&$pageSize=50" },
                    "prev": { "href": "/sites-internal/v1/microsites/{siteId}/landingPages/?$orderyBy=createDate&$page=1&$pageSize=50" }
                },
                "count": 1, 
                "page": 1,
                "pageSize": 50,
                "items":[
                    {
                        "id": 123,
                        "classificationType": 1,
                        "createdBy": 123,
                        "creationMethod": 1,
                        "description": "a 250 character string",
                        "documentType": 1,
                        "entityState": 1,
                        "isPublished": false,
                        "metaDesc": "a 500 character string",
                        "metaFollow": 1,
                        "metaIndex": 1,
                        "metaKeyWords": "a 500 character string",
                        "memberId": 123456,
                        "mimeType":1 ,
                        "publishedDate":"2014-02-27T22:14:38+00:00",
                        "publishedHtml": "a max character string",
                        "purlKey": "a 300 character string",
                        "publishingExpirationDate": "2014-02-27T22:14:38+00:00",
                        "securityType": 1,
                        "siteId": "00000000-0000-0000-0000-000000000000",
                        "templateId": "00000000-0000-0000-0000-000000000000"
                    }
                ]
            }

+ Parameters
    + siteId (required) ... Id for the Microsite.
    + filter (string, optional)
        JSON Collection of filter objects to be used to filter results.
        + Values
            + `classificationType`
            + `creationMethod`
            + `isPublished`
    + orderBy = `createDate` (optional, string) ... Specify the field to sort Landing Pages by, default createDate.
    + page (optional, number `1`) ... Page number to return.
    + pageSize (optional, number, `100`) ... Number of records to return, default 15.

### Retrieve Landing Page by Microsite Id [GET]

+ Response 200
    [Landing Page Collection by Microsite Id][]

# Group Subscriber

## Subscriber Object [/subscribers/{id,subscriberKey}]

Definition of a Subscriber

+ Model (application/json)
    JSON Representation of a single Subscriber.  
    + Body
    
            {
                "createDate" : "2014-02-30T22:14:38+00:00",
                "createdBy" : 123456,
                "createdByName" : "Created By Name",
                "emailAddress" : "an@email.com",
                "heldDate" : "2014-02-30T22:14:38+00:00",
                "id" : 123,
                "isGlobalUnsub" : false,
                "isMasterUnsub" : false,
                "isSpamEmailAddress" : false,
                "joinedDate" : "2014-02-30T22:14:38+00:00",
                "lastBounceDate" : "2014-02-30T22:14:38+00:00",
                "memberID" : 123456,
                "modifiedBy" : 123456,
                "modifiedByName" : "Modified By Name",
                "modifiedDate" : "2014-02-30T22:14:38+00:00",
                "numberOfBounces" : 0,
                "subJoinType" : "Application",
                "subscriberKey" : "an@email.com",
                "subscriberStatus" : "Active",
                "subscriberType" : 3,
                "subType" : "HTML",
                "unsubDate" : "2014-02-30T22:14:38+00:00",
                "unsubReason" : "Some reason."
            }

+ Parameters
    + id (required) ... Id for the Subscriber.
    + subscriberKey (optional) ... SubscriberKey for the Subscriber, may be used instead of id.

### Retrieve a Subscriber [GET]

+ Response 200
    [Subscriber Object][]





## Subscriber Collection Object [/lists/{listId}/subscribers/{?hydrate,orderBy,page,pageSize}]

Definition of a List Subscriber Collection

+ Model (application/json)
    JSON Representation of a collection of List Subscribers.  
    + Body
    
            {
                "links": {
                    "self": { "href": "/lists/{listId}/subscribers/?$orderyBy=createDate&$page=1&$pageSize=50" },
                    "lists": { "href": "/lists/{listId}" },
                    "subscribers": { "href": "/subscribers/" }
                },
                "count": 1, 
                "page": 1,
                "pageSize": 50,
                "items":[
                    {
                        "emailAddress" : "an@email.com",
                        "id" : 123,
                        "subscriberKey" : "an@email.com",
                        "subscriberStatus" : "Active",
                        "subscriberType" : 3
                    }
                ]
            }

+ Parameters
    + listId (required) ... Id for the List.
    + hydrate = `false` (optional, boolean) ... Specify whether or not to include all Subscriber fields, default false.
    + orderBy = `createDate` (optional, string) ... Specify the field to sort Subscribers by, default createDate.
    + page (optional, number `1`) ... Page number to return.
    + pageSize (optional, number, `100`) ... Number of records to return, default 50.

### Retrieve Subscribers for a List [GET]

+ Response 200
    [Subscriber Collection Object][]


# Group Subscriber Resource

## Subscriber List Status by Subscriber Id and List Id [/subscriberListStatus/{id}/list/{listId}]
A single Subscriber entity belonging to a hidden list. Contains relevant subscriber list status data.

+ Parameters
    + id (required, number, `123`) ... Numeric `id` of the Subscriber to retrieve status data from
    + listId (required, number, `123`) ... Numeric `listId` of the Subscriber list to retrieve status data from

+ Model (application/json)
    JSON Representation of a subscriber with list status data.
    + Body
    
            {
                "_links": {
                    "self": { "href": "/subscriberListStatus/{id}/list/{listId}" }
                },
                "id": "123"
            }

### Retrieve a Subscriber Status for a list [GET]
+ Response 200
    [Subscriber List Status by Subscriber Id and List Id][]

### Change a Subscriber List Status [POST]
+ Request

        {
            "status":"active"
        }

+ Response 200


## Subscriber List Status by Subscriber Id and List Name [/subscriberListStatus/{id}/list/name:{name}]
A single Subscriber entity belonging to a hidden list. Contains relevant subscriber list status data.

+ Parameters
    + id (required, number, `123`) ... Numeric `id` of the Subscriber to retrieve status data from
    + name (required, string, `Coupon Only List`) ... String `name` of the Subscriber list to retrieve status data from

+ Model (application/json)
    JSON Representation of a subscriber with list status data.
    + Body
    
            {
                "_links": {
                    "self": { "href": "/subscriberListStatus/{id}/list/name:{name}" }
                },
                "id": "123"
            }

### Retrieve a Subscriber Status for a list [GET]
+ Response 200
    [Subscriber List Status by Subscriber Id and List Name][]

### Change a Subscriber List Status [POST]
+ Request

        {
            "status":"active"
        }

+ Response 200

## Subscriber List Status by Subscriber Key and List Id [/subscriberListStatus/key:{key}/list/{listId}]
A single Subscriber entity belonging to a hidden list. Contains relevant subscriber list status data.

+ Parameters
    + key (required, string, `apiary@exacttarget.com`) ... String `key` of the Subscriber to retrieve status data from
    + listId (required, number, `123`) ... Numeric `listId` of the Subscriber list to retrieve status data from

+ Model (application/json)
    JSON Representation of a subscriber with list status data.
    + Body
    
            {
                "_links": {
                    "self": { "href": "/subscriberListStatus/key:{key}/list/{listId}" }
                },
                "id": "123"
            }

### Retrieve a Subscriber Status for a list [GET]
+ Response 200
    [Subscriber List Status by Subscriber Key and List Id][]

### Change a Subscriber List Status [POST]
+ Request

        {
            "status":"active"
        }

+ Response 200

## Subscriber List Status by Subscriber Key and List Name [/subscriberListStatus/key:{key}/list/{name}]
A single Subscriber entity belonging to a hidden list. Contains relevant subscriber list status data.

+ Parameters
    + key (required, string, `apiary@exacttarget.com`) ... String `key` of the Subscriber to retrieve status data from
    + name (required, string, `Coupon Only List`) ... String `name` of the Subscriber list to retrieve status data from

+ Model (application/json)
    JSON Representation of a subscriber with list status data.
    + Body
    
            {
                "_links": {
                    "self": { "href": "/subscriberListStatus/key:{key}/list/{name}" }
                },
                "id": "123"
            }

### Retrieve a Subscriber Status for a list [GET]
+ Response 200
    [Subscriber List Status by Subscriber Key and List Name][]

### Change a Subscriber List Status [POST]
+ Request

        {
            "status":"active"
        }

+ Response 200

## Subscriber List Status by Subscriber Id [/subscriberListStatus/{id}]
A single Subscriber entity belonging to a hidden list. Contains relevant subscriber list status data.

+ Parameters
    + id (required, number, `123`) ... Numeric `id` of the Subscriber to retrieve status data from. Will default to a hidden list

+ Model (application/json)
    JSON Representation of a subscriber with list status data.
    + Body
    
            {
                "_links": {
                    "self": { "href": "/subscriberListStatus/{id}" }
                },
                "id": "123"
            }

### Retrieve a Subscriber Status for a list [GET]
+ Response 200
    [Subscriber List Status by Subscriber Id][]

### Change a Subscriber List Status [POST]
+ Request

        {
            "status":"active"
        }

+ Response 200

## Subscriber List Status by Subscriber Key [/subscriberListStatus/key:{key}]
A single Subscriber entity belonging to a hidden list. Contains relevant subscriber list status data.

+ Parameters
    + key (required, string, `apiary@exacttarget.com`) ... String `key` of the Subscriber to retrieve status data from. Will default to a hidden list

+ Model (application/json)
    JSON Representation of a subscriber with list status data.
    + Body
    
            {
                "_links": {
                    "self": { "href": "/subscriberListStatus/key:{key}" }
                },
                "id": "123"
            }

### Retrieve a Subscriber Status for a list [GET]
+ Response 200
    [Subscriber List Status by Subscriber Key][]

### Change a Subscriber List Status [POST]
+ Request

        {
            "status":"active"
        }

+ Response 200

## Subscriber List Status by Subscriber Id and List Id for a Child Account and Children [/subscriberListStatus/{id}/list/{listId}/@allorgs?{mId}]
A single Subscriber entity belonging to a hidden list. Contains relevant subscriber list status data.

+ Parameters
    + id (required, number, `123`) ... Numeric `id` of the Subscriber to retrieve status data from
    + listId (required, number, `123`) ... Numeric `listId` of the Subscriber list to retrieve status data from
    + mId (optional, number, `123`) ... Numeric 'mId' of the child account and its children to retrieve Subscriber status data from

+ Model (application/json)
    JSON Representation of a subscriber with list status data.
    + Body
    
            {
                "_links": {
                    "self": { "href": "/subscriberListStatus/{id}/list/{listId}/@allorgs?MID={mId}"}
                },
                "id": "123"
            }

### Retrieve a Subscriber Status for a list for a specific child account and its children [GET]
+ Response 200
    [Subscriber List Status by Subscriber Id and List Id for a Child Account and Children][]

### Change a Subscriber List Status for a list for a specific child account and its children [POST]
+ Request

        {
            "status":"active"
        }

+ Response 200

## Subscriber List Status by Subscriber Id and List Id for the Current Account and Children [/subscriberListStatus/{id}/list/{listId}/@allorgs]
A single Subscriber entity belonging to a hidden list. Contains relevant subscriber list status data.

+ Parameters
    + id (required, number, `123`) ... Numeric `id` of the Subscriber to retrieve status data from
    + listId (required, number, `123`) ... Numeric `listId` of the Subscriber list to retrieve status data from
    
+ Model (application/json)
    JSON Representation of a subscriber with list status data.
    + Body
    
            {
                "_links": {
                    "self": { "href": "/subscriberListStatus/{id}/list/{listId}/@allorgs" }
                },
                "id": "123"
            }

### Retrieve a Subscriber Status for a list for the current account and its children [GET]
+ Response 200
    [Subscriber List Status by Subscriber Id and List Id for the Current Account and Children][]

### Change a Subscriber List Status for a list for the current account and its children [POST]
+ Request

        {
            "status":"active"
        }

+ Response 200

#  Group Subscriber Attribute
    Subscriber Attribute contains the Profile Attributes and Preferences
## SubscriberAttribute - v1 [/v1/accounts/{memberId}/subscriberAttributes/]
A collection of Subscriber Attribute objects.

+ Parameters
    + memberId (required, number, `2345`) ... Numeric `memberId` MemberId of User.
    
+ Model (application/json)
    JSON Representation of a subscribers with list status data.
    + Body
    
            {
                "count":2,
                "page":1,
                "pageSize":25,
                "_links": {
                    "self": "/v1/accounts/{memberId}/subscriberAttributes",
                },
                "items" :
                    [ {
                        "id" : 1221,
                        "name" : "Full Name", 
                        "fieldType" : 0,
                        "minLength" : 0,
                        "maxLength" : 200,
                        "displayOrder" : 1,
                        "displayAs" : "Full Name",
                        "description" : "System default for subscribers full name",
                        "hasRestrictedValues" : false,
                        "isRequired" : 0,
                        "defaultValue" : "true",
                        "AttribType" : 0,
                        "IsUnique" :0,
                        "SubscriberView":0,
                        "SubscriberEdit":0,
                        "MustContain" : "",
                        "MustNotContain": "",
                        "IsDataInLyris": 0,
                        "NumericPrecision": 0,
                        "IsSendTime" :1,
                        "IsListLevelAttribute":0

                    },
                    {
                       "id" : 212,
                        "name" : "Email Address", 
                        "fieldType" : 0,
                        "minLength" : 0,
                        "maxLength" : 200,
                        "displayOrder" : 2,
                        "displayAs" : "Email Address",
                        "description" : "System default for subscribers email address",
                        "hasRestrictedValues" : true,
                        "restrictedValues" : 
                                        {
                                                "valueName" : "Email Address Value",
                                                "isDefault" : "false",
                                                "valueDesc" : "System defalt Email",
                                                "displayOrder": "2",
                                                "defaultValue" : "Email" 
                                            },   
                        "isRequired" : 1,
                        "defaultValue" : "true",
                        "AttribType" : 0,
                        "IsUnique" :0,
                        "SubscriberView":0,
                        "SubscriberEdit":0,
                        "MustContain" : "",
                        "MustNotContain": "",
                        "IsDataInLyris": 0,
                        "NumericPrecision": 0,
                        "IsSendTime" :1,
                        "IsListLevelAttribute":0
                    }]
                
            }

### Retrieve a collection of subscriberAttributes [GET]
+ Response 200
    [SubscriberAttribute - v1][]

### Create Subscriber Attribute [POST]
__Available Subscriber Attribute Request Properties__:

| Name  | Required | Type | Default
| :------------- | :------------- | :------------- | :------------- |
|attribName  | __`true`__  | string | 
|description  | `false`  | string |`null`
|defaultValue | `false`  | string | `null`
|dataType | __`true`__  | Int | 0
|attribType |__`true`__| Int |0
|isRequired | __`true`__ | Int | 0
|isUnique | __`true`__  | Int | `active`
|maxLengthe  | __`true`__  | Int | 0
|minLength  |__`true`__ | Int | `null`
|subscriberView | __`true`__ | Int | 0
|subscriberEdit |__`true`__| Int | 0
|displayAs |__`true`__ | Int | 0
|mustContain  | `false`  | string | `null`
|mustNotContain  | `false`  | string | `null`
|displayOrder |__`true`__| Int |0
|isDataInLyris |__`true`__ | Int | 0
|numericPrecision| __`true`__ | Int |0
|isSendTime | __`true`__ | Int | 
|isListLevelAttribute |__`true`__ | Byte | 0
|restrictedValue| __`true`__  | Byte |0

__Available RestrictedValue Request Properties__:

| Name  | Required | Type | Default
| :------------- | :------------- | :------------- | :------------- |
|valueName  | __`true`__  | string | 
|isDefault  | __`true`__  | string |
|displayOrder | __`true`__  | string | 
|defaultValue | __`true`__  | string | 

+ Request(application/json)

        {
                 "id" : 11477,
                "name" : "MDS Test Attrib", 
                "fieldType" : 7,
                "minLength" : 0,
                "maxLength" : 2000,
                "displayOrder" : 7,
                "restrictedValues" : [{
                                                "valueName" : "Email Address Value11",
                                                "isDefault" : "false",
                                                "valueDesc" : "System defalt Email11",
                                                "displayOrder": "1",
                                                "defaultValue" : "Email11" 
                                            } ,
                                            {
                                                "valueName" : "Email Address Value22",
                                                "isDefault" : "false",
                                                "valueDesc" : "System defalt Email22",
                                                "displayOrder": "2",
                                                "defaultValue" : "Email22" 
                                            }],
                "isRequired" : 0,
                "defaultValue" : "false",
                "AttribType" : 0,
                "IsUnique" :0,
                "SubscriberView":1,
                "SubscriberEdit":0,
                "IsDataInLyris": 1,
                "NumericPrecision": 0,
                "IsSendTime" :1,
                "IsListLevelAttribute":0
        }
        
+ Response 201 (application/json)

        {       
                "id" : 11477,
                "name" : "MDS Test Attrib", 
                "fieldType" : 7,
                "minLength" : 0,
                "maxLength" : 2000,
                "displayOrder" : 7,
                "displayAs" : "",
                "description" : "",
                "hasRestrictedValues" : true,
                "restrictedValues" : [{
                                                "valueName" : "Email Address Value11",
                                                "isDefault" : "false",
                                                "valueDesc" : "System defalt Email11",
                                                "displayOrder": "1",
                                                "defaultValue" : "Email11" 
                                            } ,
                                           {
                                                "valueName" : "Email Address Value22",
                                                "isDefault" : "false",
                                                "valueDesc" : "System defalt Email22",
                                                "displayOrder": "2",
                                                "defaultValue" : "Email22" 
                                            }],
                "isRequired" : 0,
                "defaultValue" : "false",
                "AttribType" : 0,
                "IsUnique" :0,
                "SubscriberView":1,
                "SubscriberEdit":0,
                "IsDataInLyris": 1,
                "MustContain" : "",
                "MustNotContain": "",
                "NumericPrecision": 0,
                "IsSendTime" :1,
                "IsListLevelAttribute":0

        }

## Subscriber Attribute by Attribute ID [/v1/accounts/{memberId}/subscriberAttributes/{subscriberAttributeId}]
A single subscriber attribute object with all its details

+ Parameters
    + memberId (required, number, `2345`) ... Numeric `memberId` MemberId of User.
    + subscriberAttributeId (required, number, `4567`) ... Numeric `subscriberAttributeId` Subscriber AttributeId.
    
+ Model (application/json)
   
            {
                "_links": {
                    "parent": { "href": "/v1/accounts/{memberId}/subscriberAttributes/"},
                    "self":   { "href": "/v1/accounts/{memberId}/subscriberAttributes/{subscriberAttributeId}" }
                           },
                "id" : 213,
                "name" : "User Defined", 
                "fieldType" : 0,
                "minLength" : 0,
                "maxLength" : 2000,
                "displayOrder" : 4,
                "displayAs" : "User Defined",
                "description" : "System default for subscribers User Defined",
                "hasRestrictedValues" : false,
                "isRequired" : 0,
                "defaultValue" : "false",
                "AttribType" : 0,
                "IsUnique" :0,
                "SubscriberView":0,
                "SubscriberEdit":0,
                "MustContain" : "",
                "MustNotContain": "",
                "IsDataInLyris": 0,
                "NumericPrecision": 0,
                "IsSendTime" :1,
                "IsListLevelAttribute":0
            }

### Retrieve a Subscriber Attribute [GET]
+ Response 200 (application/json)
    [Subscriber Attribute by Attribute ID][]



### Update a Subscriber Attribute [PATCH]
+ Request(application/json)

        {
                "name" : "User Defined", 
                "fieldType" : 0,
                "minLength" : 0,
                "maxLength" : 2000,
                "displayOrder" : 4,
                "displayAs" : "User Defined",
                "description" : "System default for subscribers User Defined",
                "hasRestrictedValues" : false,
                "isRequired" : 0,
                "defaultValue" : "false"
        }
        
+ Response 200 (application/json)
    [Subscriber Attribute by Attribute ID][]

### Delete a Subscriber Attribute [DELETE]

+ Response 200

        {
                "Message":""Subscriber Attribute {{subscriberAttributeId}} was successfully deleted."
        }


#  Group Filters
    FilterDefinition with its details.
    
## FilterDefinition by ID [/dataservice-internal/v1/filters/filterdefinition/{id}]

+ Parameters
    + id (required, guid, `37EEE91D-0931-DF11-B1F8-001E379A7685`) ... Guid `id` of the filterdefinition.

### Delete a FilterDefinition [DELETE]
+ Response 200 

        "37EEE91D-0931-DF11-B1F8-001E379A7685"

## FilterDefinition [/dataservice-internal/v1/filters/filterdefinition]

### Create a FilterDefinition [POST]
+ Request(application/json)

        {
                 "key": "FilterDefinitionTest20",
                 "name": "FilterDefinitionTest20",
                 "description": "FilterDefinitionTest20",
                 "categoryId": 4047,
                 "filterDefinitionXml": "<FilterDefinition Source=\"SubscriberAttribute\"><ConditionSet Operator=\"AND\" ConditionSetName=\"Outer Grouping\"><Condition ID=\"1475\" isParam=\"false\" Operator=\"Equals\" ><Value><![CDATA[Ford]]></Value></Condition></ConditionSet></FilterDefinition>",
                 "derivedFromType": 1
        }
        
+ Response 201 (application/json)

        {       
                 "id": "a10bc14f-d51a-441f-8632-f34391fea797",
                 "key": "FilterDefinitionTest20",
                 "owner": 10650001,
                 "createdDate": "2013-03-22T15:41:26.023",
                 "lastUpdated": "2013-03-22T15:41:26.023",
                 "createdBy": "10650001",
                 "name": "FilterDefinitionTest20",
                 "description": "FilterDefinitionTest20",
                 "categoryId": 4047,
                 "filterDefinitionXml": "<FilterDefinition Source=\"SubscriberAttribute\"><ConditionSet Operator=\"AND\" ConditionSetName=\"Outer Grouping\"><Condition ID=\"1475\" isParam=\"false\" Operator=\"Equals\" ><Value><![CDATA[Ford]]></Value></Condition></ConditionSet></FilterDefinition>",
                 "derivedFromObjectId": "00000000-0000-0000-0000-000000000000",
                 "derivedFromType": 1,
                 "isSendable": false

        }

