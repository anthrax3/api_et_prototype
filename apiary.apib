FORMAT: 1A
HOST: http://www.exacttargetapis.com/

# ExactTarget API Specifications - Prototype
Prototype of ExactTarget APIs.

# Group Account Resource

## Account Messages Transactional Collection [/accounts/{memberId}/messages/transactional{?pageSize,count}]

Collection of Messages sent by an account.

+ Model (application/json)
    JSON Representation of Messages that have been created by an Account
    + Body
    
            {
                "_links": {
                    "self": { "href": "/accounts/{memberId}/messages/transactional" },
                    "parent": { "href": "/accounts/{memberId}" },
                    "next" : { "href": "/accounts/{memberId}/messages/transactional?pageSize=25&count=0" },
                    "prev" : { "href": "/accounts/{memberId}/messages/transactional?pageSize=25&count=50" },
                    "status" : { "href": "/accounts/{memberId}/messages/transactional/status" },
                    "search" : { "verb" : "POST", "href" : "/account/{memberId}/messages/transactional", "parameters" : "query" }
                },
                "memberId": "{memberId}",
                "count": 134, 
                "page": 2,
                "pageSize": 25,
                "messages" : [
                  { "id" : 25, "message_data" : "..." },
                  { "id" : 26, "message_data" : "..." },
                  { "id" : 27, "message_data" : "..." },
                  { "id" : 28, "message_data" : "..." },
                  { "id" : 29, "message_data" : "..." },
                  { "id" : 30, "message_data" : "..." },
                  { "id" : 31, "message_data" : "..." },
                  { "id" : 32, "message_data" : "..." },
                  { "id" : 33, "message_data" : "..." },
                  { "id" : 34, "message_data" : "..." },
                  { "id" : 35, "message_data" : "..." },
                  { "id" : 36, "message_data" : "..." },
                  { "id" : 37, "message_data" : "..." },
                  { "id" : 38, "message_data" : "..." },
                  { "id" : 39, "message_data" : "..." },
                  { "id" : 40, "message_data" : "..." },
                  { "id" : 41, "message_data" : "..." },
                  { "id" : 42, "message_data" : "..." },
                  { "id" : 43, "message_data" : "..." },
                  { "id" : 44, "message_data" : "..." },
                  { "id" : 45, "message_data" : "..." },
                  { "id" : 46, "message_data" : "..." },
                  { "id" : 47, "message_data" : "..." },
                  { "id" : 48, "message_data" : "..." },
                  { "id" : 49, "message_data" : "..." }
                ]
                
            }

+ Parameters
    + memberId (required) ... MID for the account
    + pageSize (optional, number, `100`) ... number of records to return, default 100 
    + count (optional, number `300`) ... offset of records to return
    
### Retrieve Transactional Messages for an Account [GET]

+ Response 200
    [Account Messages Transactional Collection][]

## Account Messages Transactional Status [/accounts/{memberId}/messages/transactional/status]

Information about Transactional Messages sent by an account.

+ Model (application/json)
    JSON Representation of Statuses of Transactional Messages that have been created by an Account
    + Body
    
            {
                "_links": {
                    "self": { "href": "/accounts/{memberId}/messages/transactional/status" },
                    "parent": { "href": "/accounts/{memberId}/messages/transactional" },
                },
                "memberId": "{memberId}",
                "total": 134, 
                "active" : 32,
                "paused" : 7,
                "stopped" : 12,
                "deleted" : 38,
                "new" : 14
            }

+ Parameters
    + memberId (required) ... MID for the account

### Retrieve Transactional Messages for an Account [GET]

+ Response 200
    [Account Messages Transactional Status][]

## Account Jobs Status [/accounts/{memberId}/jobs/status{?fields,startDate,endDate}]
Total counts of jobs for a given account for a given date range, grouped by status

+ Parameters
    + memberId (required) ... MID for the account
    + fields (optional, string ) ... Comma Separated string of event fields to be returned.
        + Values 
            + `total`
            + `pending`
            + `processing`
            + `completed`
    + startDate =`today - 7 days` (optional, string) ... ISO8601 formatted Date String, from which to begin collecting counts from.  Depending on Precision, this may be rounded to the nearest Day or Hour.
    + endDate =`today` (optional, string) ... ISO8601 formatted Date string, end time to cap results on.

+ Model (application/json)
    JSON Representation of status of account jobs.
    + Body
    
            {
                "_links": {
                    "self": { "href": "/accounts/{memberId}/jobs/status" },
                    "parent": { "href": "/accounts/{memberId}/jobs" },
                },
                "memberId": "{memberId}",
                "total": 654248,
                "pending" : 234234,
                "processing" : 23423,
                "completed" : 234,
                "startDate": "2014-02-04T03:00:00Z",
                "endDate": "2014-02-10T03:00:00Z"
            }

### Retrieve Account Job Status [GET]
+ Response 200
    [Account Jobs Status][]


## Account Events [/accounts/{memberId}/events{?fields,startDate,endDate}]
A collection of all events that have occurred for an account, total.

+ Model (application/json)
    JSON Representation of events that have occurred on an Account, rolled up daily
    + Body
    
            {
                "_links": {
                    "daily": { "href": "/accounts/{id}/events/daily{?fields,startDate,endDate}"},
                    "hourly": { "href": "/accounts/{id}/events/hourly{?fields,startDate,endDate}"},
                    "self": { "href": "/accounts/{id}/events{?fields,startDate,endDate}" },
                    "parent": { "href": "/accounts/{id}" }
                },
                "id": "{id}",
                "toSend": 18714,
                "delivered": { "total" : 18500, "percent" : 98.85 },
                "bounces" : { "total" : 164, "hard" : 14, "soft" : 100, "blocked" : 50 },
                "opened" : { "unique" : 18333 },
                "clicked" : { "unique": 18222 },
                "unsubscribed": { "total" : 3, "percent" : 0.000 },
                "pending" : { "total" : 200, "percent" : 0.011 } ,
                "inProgress" : { "total" : 100, "percent" : 0.005 },
                "sent" : { "total" : 18414, "percent" : 98.397 }
            }


+ Parameters
    + memberId (required) ... MID for the account
    + fields (optional, string) ... event fields requested, default is all fields
    + startDate (optional, string) ... ISO8601 formatted Date String, from which to begin collecting events from.  Depending on Precision, this may be rounded to the nearest Day or Hour
    + endDate (optional, string) ... ISO8601 formatted Date string, end time to cap results on.

### Retrieve all Events for an Account [GET]
+ Response 200
    [Account Events][]

## Account Events Daily [/accounts/{memberId}/events/daily{?fields,startDate,endDate}]
A collection of events that have occurred for an account, rolled into 24 hour chunks

+ Model (application/json)
    JSON Representation of events that have occurred on an Account, rolled up daily
    + Body
    
            {
                "_links": {
                    "hourly": { "href": "/accounts/{id}/events/hourly{?fields,startDate,endDate}"},
                    "self": { "href": "/accounts/{id}/events/daily{?fields,startDate,endDate}" },
                    "parent": { "href": "/accounts/{id}/events" }
                },
                "id": "{id}",
                "Events": [
                    {
                        "date" : "2014-02-06T07:06:00Z",
                        "toSend": 18714,
                        "delivered": { "total" : 18500, "percent" : 98.85 },
                        "bounces" : { "total" : 164, "hard" : 14, "soft" : 100, "blocked" : 50 },
                        "opened" : { "unique" : 18333 },
                        "clicked" : { "unique": 18222 },
                        "unsubscribed": { "total" : 3, "percent" : 0.000 },
                        "pending" : { "total" : 200, "percent" : 0.011 },
                        "inProgress" : { "total" : 100, "percent" : 0.005 },
                        "sent" : { "total" : 18414, "percent" : 98.397 }
                    },
                    {
                        "date" : "2014-02-05T07:06:00Z",
                        "toSend": 18714,
                        "delivered": { "total" : 18500, "percent" : 98.85 },
                        "bounces" : { "total" : 164, "hard" : 14, "soft" : 100, "blocked" : 50 },
                        "opened" : { "unique" : 18333 },
                        "clicked" : { "unique": 18222 },
                        "unsubscribed": { "total" : 3, "percent" : 0.000 },
                        "pending" : { "total" : 200, "percent" : 0.011 },
                        "inProgress" : { "total" : 100, "percent" : 0.005 },
                        "sent" : { "total" : 18414, "percent" : 98.397 }
                    },
                    {
                        "date" : "2014-02-04T07:06:00Z",
                        "toSend": 18714,
                        "delivered": { "total" : 18500, "percent" : 98.85 },
                        "bounces" : { "total" : 164, "hard" : 14, "soft" : 100, "blocked" : 50 },
                        "opened" : { "unique" : 18333 },
                        "clicked" : { "unique": 18222 },
                        "unsubscribed": { "total" : 3, "percent" : 0.000 },
                        "pending" : { "total" : 200, "percent" : 0.011 }, 
                        "inProgress" : { "total" : 100, "percent" : 0.005 },
                        "sent" : { "total" : 18414, "percent" : 98.397 }
                    }
                ]
            }

+ Parameters
    + memberId (required) ... MID for the account
    + fields (optional, string) ... event fields requested, default is all fields
    + startDate (optional, string) ... ISO8601 formatted Date String, from which to begin collecting events from.  Depending on Precision, this may be rounded to the nearest Day or Hour
    + endDate (optional, string) ... ISO8601 formatted Date string, end time to cap results on.

### Retrieve Events for an Account with daily precision [GET]
+ Response 200
    [Account Events Daily][]

## Account Events Hourly [/accounts/{memberId}/events/hourly{?fields,startDate,endDate}]
+ Model (application/json)
    JSON Representation of events that have occurred on an Account, rolled up hourly.
    + Body
    
            {
                "_links": {
                    "daily": { "href": "/accounts/{id}/events/daily{?fields,startDate,endDate}"},
                    "self": { "href": "/accounts/{id}/events/hourly{?fields,startDate,endDate}" },
                    "parent": { "href": "/accounts/{id}/events" }
                },
                "Events": [
                    {
                        "date" : "2014-02-04T01:00:00Z",
                        "toSend": 18714,
                        "delivered": { "total" : 18500, "percent" : 98.85 },
                        "bounces" : { "total" : 164, "hard" : 14, "soft" : 100, "blocked" : 50 },
                        "opened" : { "unique" : 18333 },
                        "clicked" : { "unique": 18222 },
                        "unsubscribed": { "total" : 3, "percent" : 0.000 },
                        "pending" : { "total" : 200, "percent" : 0.011 } ,
                        "inProgress" : { "total" : 100, "percent" : 0.005 },
                        "sent" : { "total" : 18414, "percent" : 98.397 }
                    },
                    {
                        "date" : "2014-02-04T02:00:00Z",
                        "toSend": 18714,
                        "delivered": { "total" : 18500, "percent" : 98.85 },
                        "bounces" : { "total" : 164, "hard" : 14, "soft" : 100, "blocked" : 50 },
                        "opened" : { "unique" : 18333 },
                        "clicked" : { "unique": 18222 },
                        "unsubscribed": { "total" : 3, "percent" : 0.000 },
                        "pending" : { "total" : 200, "percent" : 0.011 } ,
                        "inProgress" : { "total" : 100, "percent" : 0.005 },
                        "sent" : { "total" : 18414, "percent" : 98.397 }
                    },
                    {
                        "date" : "2014-02-04T03:00:00Z",
                        "toSend": 18714,
                        "delivered": { "total" : 18500, "percent" : 98.85 },
                        "bounces" : { "total" : 164, "hard" : 14, "soft" : 100, "blocked" : 50 },
                        "opened" : { "unique" : 18333 },
                        "clicked" : { "unique": 18222 },
                        "unsubscribed": { "total" : 3, "percent" : 0.000 },
                        "pending" : { "total" : 200, "percent" : 0.011 } ,
                        "inProgress" : { "total" : 100, "percent" : 0.005 },
                        "sent" : { "total" : 18414, "percent" : 98.397 }
                    }
                ]
            }

+ Parameters
    + memberId (required) ... MID for the account
    + fields (optional, string) ... event fields requested, default is all fields
    + startDate (optional, string) ... ISO8601 formatted Date String, from which to begin collecting events from.  Depending on Precision, this may be rounded to the nearest Day or Hour
    + endDate (optional, string) ... ISO8601 formatted Date string, end time to cap results on.

### Retrieve Events for an Account, with Hourly precision [GET]

+ Response 200
    [Account Events Hourly][]


# Group Jobs resource

## Jobs Events [/jobs/{id}/events{?fields}]
A single Event object belonging to a job.

+ Parameters
    + id (required, number, `123`) ... Numeric `id` of the Job to retrieve events from
    + fields (optional, string, `sent,delivered,bouncesHard,bouncesSoft,bouncesBLocked,uniqueOpened,uniqueClicked,unsubscribed` ) ... Comma Separated string of event fields to be returned. 

+ Model (application/json)
    JSON Representation of events that have occurred on a job.
    + Body
    
            {
                "_links": {
                    "self": { "href": "/jobs/{id}/events" },
                    "parent": { "href": "/jobs/{id}" }
                },
                "id": "{id}",
                "total": {
                    "toSend": 18714,
                    "delivered": { "total" : 18500, "percent" : 98.85 },
                    "bounces" : { "total" : 164, "hard" : 14, "soft" : 100, "blocked" : 50 },
                    "opened" : { "unique" : 18333 },
                    "clicked" : { "unique": 18222 },
                    "unsubscribed": { "total" : 3, "percent" : 0.000 },
                    "pending" : { "total" : 200, "percent" : 0.011 } ,
                    "inProgress" : { "total" : 100, "percent" : 0.005 },
                    "sent" : { "total" : 18414, "percent" : 98.397 }
                }
            }

### Retrieve Events for a job [GET]
+ Response 200
    [Jobs Events][]


# Group Message Resource

## Message Root [/messages/{id}]
The Message Resource

+ Model (application/json)
    JSON Representation of events that have occurred on a Message, rolled up daily
    + Body
    
            {
                "_links": {
                    "self": { "href": "/messages/{id}" },
                    "parent": { "href": "/" }
                },
                "id": "{id}"
            }


+ Parameters
    + id (required) ... id for the message - can be the MessageID or CustomerKey of a message object

### Retrieve a Message [GET]
+ Response 200
    [Message Root][]    

### Delete a Message [DELETE]
+ Response 204


## Create Triggered Message [/messages/triggered]
Create a new TriggeredSendDefinition

+ Model (application/json)
    JSON Response when a TriggeredSendDefinition is created
    + Body
    
            {
                "id" : 9223372036854775807, 
                "name" : "TSD Name",
                "description" : "TSD Description",
                "emailId" : 9223372036854775807,
                "customerKey" : "customerKey123",
                "listId" : 9223372036854775807,
                "triggeredSendStatus" : "New", /*Inactive, Active, Canceled*/
                "sendClassification" : { 
                    "customerKey" : "sc CustomerKey123", 
                    "objectId" : "30dd879c-ee2f-11db-8314-0800200c9a66"
                },
                "senderProfile" : { 
                    "customerKey" : "sp CustomerKey", 
                    "objectId" : "30dd879c-ee2f-11db-8314-0800200c9a66" 
                },
                "deliveryProfile" : { 
                    "customerKey" : "dp CustomerKey", 
                    "objectId" : "30dd879c-ee2f-11db-8314-0800200c9a66" 
                },
                "autoAddSubscribers" : true, /*bool*/
                "autoUpdateSubscribers" : true, /*bool*/
                "ccEmail" : "an@email.com",
                "bccEmail" : "an@email.com",
                "emailSubject" : "The email subject",
                "isMultipart" : true,
                "isWrapped" : true,
                "suppressTracking" : true,
                "categoryId" : 2147483683,
                "campaignId" : 9223372036854775807, /* doesn't exist in current SDK */
                "refreshContent" : true,
                "exclusionFilter" : "ampScript Goes Here",
                "priority" : "Low", /* Medium, High */
                "sendSourceDataExtension" : { "customerKey" : "ssde customerKey" }
            }

### Create a Triggered Send Definition Message [POST]
+ Request (application/json)

        {
            "name" : "TSD Name",
            "description" : "TSD Description",
            "emailId" : 9223372036854775807,
            "customerKey" : "customerKey123",
            "listId" : 9223372036854775807,
            "triggeredSendStatus" : "New", /*Inactive, Active, Canceled - do we want to allow changing status upon creation?*/
            "sendClassification" : { 
                "customerKey" : "sc CustomerKey123", 
                "objectId" : "30dd879c-ee2f-11db-8314-0800200c9a66"
            },
            "senderProfile" : { 
                "customerKey" : "sp CustomerKey", 
                "objectId" : "30dd879c-ee2f-11db-8314-0800200c9a66" 
            },
            "deliveryProfile" : { 
                "customerKey" : "dp CustomerKey", 
                "objectId" : "30dd879c-ee2f-11db-8314-0800200c9a66" 
            },
            "autoAddSubscribers" : true, /*bool*/
            "autoUpdateSubscribers" : true, /*bool*/
            "ccEmail" : "an@email.com",
            "bccEmail" : "an@email.com",
            "emailSubject" : "The email subject",
            "isMultipart" : true,
            "isWrapped" : true,
            "suppressTracking" : true,
            "categoryId" : 2147483683,
            "campaignId" : 9223372036854775807, /* doesn't exist in current SDK */
            "refreshContent" : true,
            "exclusionFilter" : "ampScript Goes Here",
            "priority" : "Low", /* Medium, High */
            "sendSourceDataExtension" : { "customerKey" : "ssde customerKey" }
        }

+ Response 200
    [Create Triggered Message][]

## Search for Triggered Messages [/messages/triggered{?PartnerKey,CreatedDate,ModifiedDate,ClientId,CustomerKey,EmailId,ListId,Name,Description,TriggeredSendType,TriggeredSendStatus,HeaderContentAreaId,FooterContentAreaId,SendClassificationId,SendClassificationCustomerKey,SenderProfileCustomerKey,SenderProfileId,DeliveryProfileCustomerKey,DeliveryProfileId,PrivateDomainId,PrivateIPId,AutoAddSubscribers,AutoUpdateSubscribers,BatchInterval,FromName,FromAddress,BccEmail,EmailSubject,DynamicEmailSubject,IsMultipart,IsWrapped,TestEmailAddr,AllowedSlots,NewSlotTrigger,SendLimit,SendWindowOpen,SendWindowClose,SuppressTracking,Keyword,ListPartnerKey,EmailPartnerKey,SendClassificationPartnerKey,PrivateDomainPartnerKey,PrivateIPPartnerKey,ClientPartnerClientKey,IsPlatformObject,CategoryID}]
Search for triggeredSendDefinitions 

+ Parameters
    + PartnerKey (optional, string) ... Foo
    + CreatedDate (optional, string) ... Foo
    + ModifiedDate (optional, string) ... Foo
    + ClientId (optional, string) ... Foo
    + CustomerKey (optional, string) ... Foo
    + EmailId (optional, string) ... Foo
    + ListId (optional, string) ... Foo
    + Name (optional, string) ... Foo
    + Description (optional, string) ... Foo
    + TriggeredSendType (optional, string) ... Foo
    + TriggeredSendStatus (optional, string) ... Foo
    + HeaderContentAreaId (optional, string) ... Foo
    + FooterContentAreaId (optional, string) ... Foo
    + SendClassificationId (optional, string) ... Foo
    + SendClassificationCustomerKey (optional, string) ... Foo
    + SenderProfileCustomerKey (optional, string) ... Foo
    + SenderProfileId (optional, string) ... Foo
    + DeliveryProfileCustomerKey (optional, string) ... Foo
    + DeliveryProfileId (optional, string) ... Foo
    + PrivateDomainId (optional, string) ... Foo
    + PrivateIPId (optional, string) ... Foo
    + AutoAddSubscribers (optional, string) ... Foo
    + AutoUpdateSubscribers (optional, string) ... Foo
    + BatchInterval (optional, string) ... Foo
    + FromName (optional, string) ... Foo
    + FromAddress (optional, string) ... Foo
    + BccEmail (optional, string) ... Foo
    + EmailSubject (optional, string) ... Foo
    + DynamicEmailSubject (optional, string) ... Foo
    + IsMultipart (optional, string) ... Foo
    + IsWrapped (optional, string) ... Foo
    + TestEmailAddr (optional, string) ... Foo
    + AllowedSlots (optional, string) ... Foo
    + NewSlotTrigger (optional, string) ... Foo
    + SendLimit (optional, string) ... Foo
    + SendWindowOpen (optional, string) ... Foo
    + SendWindowClose (optional, string) ... Foo
    + SuppressTracking (optional, string) ... Foo
    + Keyword (optional, string) ... Foo
    + ListPartnerKey (optional, string) ... Foo
    + EmailPartnerKey (optional, string) ... Foo
    + SendClassificationPartnerKey (optional, string) ... Foo
    + PrivateDomainPartnerKey (optional, string) ... Foo
    + PrivateIPPartnerKey (optional, string) ... Foo
    + ClientPartnerClientKey (optional, string) ... Foo
    + IsPlatformObject (optional, string) ... Foo
    + CategoryID (optional, string) ... Foo


### Retrieve a collection of triggered send definition messages [GET]
+ Response 200

## Send a Triggered Message [/messages/{id}/send]
Send a message using a pre-existing triggered send definition


### Send a triggered send definition message [PUT]
+ Request (application/json)

        {
            "customerKey": "Send Customer Key",
            "emailAddress" : "an@email.com",
            "subscriberKey" : "an@email.com",
            "attributes" : [
                /* any attributes */
            ]
        }
        
+ Response 202



## Message Events [/messages/{id}/events{?fields,startDate,endDate}]
A collection of all events that have occurred for a message, total.

+ Model (application/json)
    JSON Representation of events that have occurred on a Message, rolled up daily
    + Body
    
            {
                "_links": {
                    "daily": { "href": "/message/{id}/events/daily{?fields,startDate,endDate}"},
                    "hourly": { "href": "/message/{id}/events/hourly{?fields,startDate,endDate}"},
                    "self": { "href": "/message/{id}/events{?fields,startDate,endDate}" },
                    "parent": { "href": "/message/{id}" }
                },
                "id": "{id}",
                "toSend": 18714,
                "delivered": { "total" : 18500, "percent" : 98.85 },
                "bounces" : { "total" : 164, "hard" : 14, "soft" : 100, "blocked" : 50 },
                "opened" : { "unique" : 18333 },
                "clicked" : { "unique": 18222 },
                "unsubscribed": { "total" : 3, "percent" : 0.000 },
                "pending" : { "total" : 200, "percent" : 0.011 },
                "inProgress" : { "total" : 100, "percent" : 0.005 },
                "sent" : { "total" : 18414, "percent" : 98.397 }
            }


+ Parameters
    + id (required) ... id for the message
    + fields (optional, string) ... event fields requested, default is all fields
    + startDate (optional, string) ... ISO8601 formatted Date String, from which to begin collecting events from.  Depending on Precision, this may be rounded to the nearest Day or Hour
    + endDate (optional, string) ... ISO8601 formatted Date string, end time to cap results on.

### Retrieve all Events for a Message [GET]
+ Response 200
    [Message Events][]

## Message Events Daily [/messages/{id}/events/daily{?fields,startDate,endDate}]
A collection of events that have occurred for a message, rolled into 24 hour chunks

+ Model (application/json)
    JSON Representation of events that have occurred on a Message, rolled up daily
    + Body
    
            {
                "_links": {
                    "hourly": { "href": "/message/{id}/events/hourly{?fields,startDate,endDate}"},
                    "self": { "href": "/message/{id}/events/daily{?fields,startDate,endDate}" },
                    "parent": { "href": "/message/{id}/events" }
                },
                "id": "{id}",
                "Events": [
                    {
                        "date" : "2014-02-06T07:06:00Z",
                        "toSend": 18714,
                        "delivered": { "total" : 18500, "percent" : 98.85 },
                        "bounces" : { "total" : 164, "hard" : 14, "soft" : 100, "blocked" : 50 },
                        "opened" : { "unique" : 18333 },
                        "clicked" : { "unique": 18222 },
                        "unsubscribed": { "total" : 3, "percent" : 0.000 },
                        "pending" : { "total" : 200, "percent" : 0.011 } ,
                        "inProgress" : { "total" : 100, "percent" : 0.005 },
                        "sent" : { "total" : 18414, "percent" : 98.397 }
                    },
                    {
                        "date" : "2014-02-05T07:06:00Z",
                        "toSend": 18714,
                        "delivered": { "total" : 18500, "percent" : 98.85 },
                        "bounces" : { "total" : 164, "hard" : 14, "soft" : 100, "blocked" : 50 },
                        "opened" : { "unique" : 18333 },
                        "clicked" : { "unique": 18222 },
                        "unsubscribed": { "total" : 3, "percent" : 0.000 },
                        "pending" : { "total" : 200, "percent" : 0.011 } ,
                        "inProgress" : { "total" : 100, "percent" : 0.005 },
                        "sent" : { "total" : 18414, "percent" : 98.397 }
                    },
                    {
                        "date" : "2014-02-04T07:06:00Z",
                        "toSend": 18714,
                        "delivered": { "total" : 18500, "percent" : 98.85 },
                        "bounces" : { "total" : 164, "hard" : 14, "soft" : 100, "blocked" : 50 },
                        "opened" : { "unique" : 18333 },
                        "clicked" : { "unique": 18222 },
                        "unsubscribed": { "total" : 3, "percent" : 0.000 },
                        "pending" : { "total" : 200, "percent" : 0.011 } ,
                        "inProgress" : { "total" : 100, "percent" : 0.005 },
                        "sent" : { "total" : 18414, "percent" : 98.397 }
                    }
                ]
            }

+ Parameters
    + id (required) ... id for the message
    + fields (optional, string) ... event fields requested, default is all fields
    + startDate (optional, string) ... ISO8601 formatted Date String, from which to begin collecting events from.  Depending on Precision, this may be rounded to the nearest Day or Hour
    + endDate (optional, string) ... ISO8601 formatted Date string, end time to cap results on.

### Retrieve Events for a Message with daily precision [GET]
+ Response 200
    [Message Events Daily][]

## Message Events Hourly [/messages/{id}/events/hourly{?fields,startDate,endDate}]
+ Model (application/json)
    JSON Representation of events that have occurred on a Message, rolled up hourly.
    + Body
    
            {
                "_links": {
                    "daily": { "href": "/message/{id}/events/daily{?fields,startDate,endDate}"},
                    "self": { "href": "/message/{id}/events/hourly{?fields,startDate,endDate}" },
                    "parent": { "href": "/message/{id}/events" }
                },
                "Events": [
                    {
                        "date" : "2014-02-04T01:00:00Z",
                        "toSend": 18714,
                        "delivered": { "total" : 18500, "percent" : 98.85 },
                        "bounces" : { "total" : 164, "hard" : 14, "soft" : 100, "blocked" : 50 },
                        "opened" : { "unique" : 18333 },
                        "clicked" : { "unique": 18222 },
                        "unsubscribed": { "total" : 3, "percent" : 0.000 },
                        "pending" : { "total" : 200, "percent" : 0.011 } ,
                        "inProgress" : { "total" : 100, "percent" : 0.005 },
                        "sent" : { "total" : 18414, "percent" : 98.397 }
                    },
                    {
                        "date" : "2014-02-04T02:00:00Z",
                        "toSend": 18714,
                        "delivered": { "total" : 18500, "percent" : 98.85 },
                        "bounces" : { "total" : 164, "hard" : 14, "soft" : 100, "blocked" : 50 },
                        "opened" : { "unique" : 18333 },
                        "clicked" : { "unique": 18222 },
                        "unsubscribed": { "total" : 3, "percent" : 0.000 },
                        "pending" : { "total" : 200, "percent" : 0.011 } ,
                        "inProgress" : { "total" : 100, "percent" : 0.005 },
                        "sent" : { "total" : 18414, "percent" : 98.397 }
                    },
                    {
                        "date" : "2014-02-04T03:00:00Z",
                        "toSend": 18714,
                        "delivered": { "total" : 18500, "percent" : 98.85 },
                        "bounces" : { "total" : 164, "hard" : 14, "soft" : 100, "blocked" : 50 },
                        "opened" : { "unique" : 18333 },
                        "clicked" : { "unique": 18222 },
                        "unsubscribed": { "total" : 3, "percent" : 0.000 },
                        "pending" : { "total" : 200, "percent" : 0.011 } ,
                        "inProgress" : { "total" : 100, "percent" : 0.005 },
                        "sent" : { "total" : 18414, "percent" : 98.397 }
                    }
                ]
            }

+ Parameters
    + id (required) ... id for the message
    + fields (optional, string) ... event fields requested, default is all fields
    + startDate (optional, string) ... ISO8601 formatted Date String, from which to begin collecting events from.  Depending on Precision, this may be rounded to the nearest Day or Hour
    + endDate (optional, string) ... ISO8601 formatted Date string, end time to cap results on.

### Retrieve Events for a Message, with Hourly precision [GET]

+ Response 200
    [Message Events Hourly][]

## Message Email Preview [/messages/{id}/preview]
Email preview for message jobs

+ Parameters
    + id (required) ... id for the message.  Could be a Triggered Send or an Email Send Definition id.

+ Model (application/json)
    JSON Representation of the email preview for all jobs associated to a message
    + Body
    
            {
                "id": "{id}",
                "Previews": [
                    {
                        "jobId": "654231",
                        "mostRecent": 1,
                        "encodedHtml": "",
                        "encodedText": ""
                    },
                    {
                        "jobId": "45642",
                        "mostRecent": 0,
                        "encodedHtml": "",
                        "encodedText": ""
                    },
                    {
                        "jobId": "5642",
                        "mostRecent": 0,
                        "encodedHtml": "",
                        "encodedText": ""
                    }
                ]
            }

### Retrieve Email Previews for a Message [GET]
+ Response 200
    [Message Email Preview][]

## Retrieve Queued Transactions [/messages/{id}/queue]
A collection of queued transactions for a paused message

+ Parameters
    + id (required) ... id for the message.

+ Model (application/json)
    JSON Representation for all queued transactions associated to a message
    + Body
    
            {
                "id": "{id}",
                "Transactions": [
                    {
                        "jobId": "654231",
                        "tssId": "8E844912-1429-E211-B468-0022642D9886",
                        "tssrId": "0993DAEE-2190-E311-BB14-00237D5401CE",
                        "dateQueued": "2014-02-04T03:00:00Z",
                        "Member":
                        {
                            "memberId": "654",
                            "listId": "8435"
                            "fullName": "Erin Smith"
                            "emailAddress": "esmith@foo.com"
                        }
                    },
                    {
                        "jobId": "654231",
                        "tssId": "8E844912-1429-E211-B468-0022642D9886",
                        "tssrId": "89844912-1429-E211-B468-0022642D9886",
                        "dateQueued": "2014-02-04T03:00:00Z",
                        "Member":
                        {
                            "memberId": "659",
                            "listId": "8435"
                            "fullName": "Bob Jones"
                            "emailAddress": "bjones@foo.com"
                        }
                    }
                ]
            }

### Retrieve Queued Transactions for a Message [GET]
+ Response 200
    [Retrieve Queued Transactions][]

## Delete Queued Transactions [/messages/{id}/queue/{tssid}/{tssrId}]
Delete a queued transaction from a paused message

+ Parameters
    + id (required) ... id for the message.
    + tssid (required) ... id for the triggered send subscriber.
    + tssrId (required) ... id for the triggered send subscriber request.

### Delete Queued Transaction for a Message [DELETE]
+ Response 204