FORMAT: 1A
HOST: http://www.exacttargetapis.com/

# ExactTarget API Specifications - Prototype
Prototype of ExactTarget APIs.

# Group Account Resource

## Account Object DRAFT [/accounts/{id,objectId}]

Definition of an Account resourc

+ Model (application/json)
    JSON Representation of a single Account resource. Based on http://help.exacttarget.com/en/technical_library/web_service_guide/objects/account/  
    + Body
    
            {
                "accountType" : "EXACTTARGET",
                "address" : "301 Brannan St., Suite 100, San Francisco, CA 94107",
                "brandId" : 0, 
                "businessName" : "Business Name of an account's owner",
                "children" : [ 1, 2, 3, 4], 
                "city" : "San Francisco",
                "client" : "<client-id>",
                "country" : "United States",
                "createdDate" : "2014-02-27T22:14:38+00:00",
                "deletedDate" : "2014-02-27T22:14:38+00:00",
                "editionId" : 123,
                "email" : "an@email.com",
                "fax" : "415-555-5555",
                "fromName" : "Sender's Name - Deprecated",
                "id" : 123,
                "inheritedAddress" : false,
                "isActive" : 1,
                "isTestAccount" : false,
                 "localeCode" : "US",
                "modifiedDate": "2014-02-27T22:14:38+00:00",
                "name" : "A fake account",
                "objectId" : "<guid>",
                "orgId" : 323,
                "ownerId" : 123,
                "parentId" : 133,
                "partnerKey" : "myPartnerKey",
                "phone" : "415-555-5322",
                "state" : "California",
                "timezoneId" : 87,
                "zip" : "94107"
            }

+ Parameters
    + objectId (optional) ... objectId for the account, required if no id is specified
    + id (required) ... id for the account, required if no objectId is specified

### Retrieve an Account [GET]

+ Response 200
    [Account Object DRAFT][]

## Account Send Limit Information [/accounts/{memberId}/sendlimits{?fields}]

Definition of an Account's Volume Capping information

+ Model (application/json)
    JSON Representation of an Account's Send Limits 
    + Body
    
            {
                "_links": {
                    "self": { "href": "/accounts/{memberId}/sendlimits" },
                    "parent": { "href": "/accounts/{memberId}" }
                },         
                "id" : {memberId},
                "currentCycle" : {
                    "email" : {
                        "sent" : 6500,
                        "remaining" : 3500,
                        "total" : 10000,
                        "cycleStartDate" : "2014-02-27T22:14:38+00:00",
                        "cycleEndDate" : "2014-03-26T22:14:38+00:00"
                    },
                    "sms" : {
                        "sent" : 2100,
                        "remaining" : 2900,
                        "total" : 5000,
                        "cycleStartDate" : "2014-02-27T22:14:38+00:00",
                        "cycleEndDate" : "2014-03-26T22:14:38+00:00"
                    }
                },
                "cycles" : {
                    "email" : [
                        {
                            "id" : 1,
                            "purchaseDate" : "2014-02-27T22:14:38+00:00",
                            "expirationDate" : "2014-03-26T22:14:38+00:00",
                            "messages" : 5000
                        },
                        {
                            "id" : 2,
                            "purchaseDate" : "2014-03-15T22:14:38+00:00",
                            "expirationDate" : "2014-04-14T22:14:38+00:00",
                            "messages" : 5000
                        }
                    ],
                    "sms" : [
                        {
                            "id" : 3,
                            "purchaseDate" : "2014-02-27T22:14:38+00:00",
                            "expirationDate" : "2014-03-26T22:14:38+00:00",
                            "messages" : 5000
                        }
                    ]
                }
            }

### Retrieve an Account's Send Limits [GET]

+ Parameters
    + memberId (required) ... MID for the account
    + fields (optional, string ) ... Comma Separated string of event fields to be returned.
        + Values 
            + `id`
            + `currentCycle`
            + `cycles`
            
+ Response 200
    [Account Send Limit Information][]

### Add Messages to Cycle [POST]

+ Parameters
    + memberId (required) ... MID for the account

+ Request

        {
            "type" : "email",
            "messages" : 5000,
            "expirationDate" : "2014-03-26T22:14:38+00:00"
        }
        
+ Response 200
    [Account Send Limit Information][]



## Account Messages Transactional Collection [/accounts/{memberId}/messages/transactional{?pageSize,count}]

Collection of Messages sent by an account.

+ Model (application/json)
    JSON Representation of Messages that have been created by an Account
    + Body
    
            {
                "_links": {
                    "self": { "href": "/accounts/{memberId}/messages/transactional" },
                    "parent": { "href": "/accounts/{memberId}" },
                    "next" : { "href": "/accounts/{memberId}/messages/transactional?pageSize=25&page=3" },
                    "prev" : { "href": "/accounts/{memberId}/messages/transactional?pageSize=25&page=1" },
                    "status" : { "href": "/accounts/{memberId}/messages/transactional/status" },
                    "search" : { "verb" : "POST", "href" : "/account/{memberId}/messages/transactional", "parameters" : "query" }
                },
                "memberId": "{memberId}",
                "count": 134, 
                "page": 2,
                "pageSize": 25,
                "messages" : [
                  { "id" : 25, "message_data" : "..." },
                  { "id" : 26, "message_data" : "..." },
                  { "id" : 27, "message_data" : "..." },
                  { "id" : 28, "message_data" : "..." },
                  { "id" : 29, "message_data" : "..." },
                  { "id" : 30, "message_data" : "..." },
                  { "id" : 31, "message_data" : "..." },
                  { "id" : 32, "message_data" : "..." },
                  { "id" : 33, "message_data" : "..." },
                  { "id" : 34, "message_data" : "..." },
                  { "id" : 35, "message_data" : "..." },
                  { "id" : 36, "message_data" : "..." },
                  { "id" : 37, "message_data" : "..." },
                  { "id" : 38, "message_data" : "..." },
                  { "id" : 39, "message_data" : "..." },
                  { "id" : 40, "message_data" : "..." },
                  { "id" : 41, "message_data" : "..." },
                  { "id" : 42, "message_data" : "..." },
                  { "id" : 43, "message_data" : "..." },
                  { "id" : 44, "message_data" : "..." },
                  { "id" : 45, "message_data" : "..." },
                  { "id" : 46, "message_data" : "..." },
                  { "id" : 47, "message_data" : "..." },
                  { "id" : 48, "message_data" : "..." },
                  { "id" : 49, "message_data" : "..." }
                ]
                
            }

+ Parameters
    + memberId (required) ... MID for the account
    + pageSize (optional, number, `100`) ... number of records to return, default 100 
    + count (optional, number `300`) ... offset of records to return
    
### Retrieve Transactional Messages for an Account [GET]

+ Response 200
    [Account Messages Transactional Collection][]

## Account Messages Transactional Status [/accounts/{memberId}/messages/transactional/status]

Information about Transactional Messages sent by an account.

+ Model (application/json)
    JSON Representation of Statuses of Transactional Messages that have been created by an Account
    + Body
    
            {
                "_links": {
                    "self": { "href": "/accounts/{memberId}/messages/transactional/status" },
                    "parent": { "href": "/accounts/{memberId}/messages/transactional" },
                },
                "memberId": "{memberId}",
                "total": 134, 
                "active" : 32,
                "paused" : 7,
                "stopped" : 12,
                "deleted" : 38,
                "new" : 14
            }

+ Parameters
    + memberId (required) ... MID for the account

### Retrieve Transactional Messages for an Account [GET]

+ Response 200
    [Account Messages Transactional Status][]

## Account Jobs Status [/accounts/{memberId}/jobs/status{?fields,startDate,endDate}]
Total counts of jobs for a given account for a given date range, grouped by status

+ Parameters
    + memberId (required) ... MID for the account
    + fields (optional, string ) ... Comma Separated string of event fields to be returned.
        + Values 
            + `total`
            + `pending`
            + `processing`
            + `completed`
    + startDate =`today - 7 days` (optional, string) ... ISO8601 formatted Date String, from which to begin collecting counts from.  Depending on Precision, this may be rounded to the nearest Day or Hour.
    + endDate =`today` (optional, string) ... ISO8601 formatted Date string, end time to cap results on.

+ Model (application/json)
    JSON Representation of status of account jobs.
    + Body
    
            {
                "_links": {
                    "self": { "href": "/accounts/{memberId}/jobs/status" },
                    "parent": { "href": "/accounts/{memberId}/jobs" },
                },
                "memberId": "{memberId}",
                "total": 654248,
                "pending" : 234234,
                "processing" : 23423,
                "completed" : 234,
                "startDate": "2014-02-04T03:00:00Z",
                "endDate": "2014-02-10T03:00:00Z"
            }

### Retrieve Account Job Status [GET]
+ Response 200
    [Account Jobs Status][]


## Account Events [/accounts/{memberId}/events{?fields,startDate,endDate}]
A collection of all events that have occurred for an account, total.

+ Model (application/json)
    JSON Representation of events that have occurred on an Account, rolled up daily
    + Body
    
            {
                "_links": {
                    "daily": { "href": "/accounts/{id}/events/daily{?fields,startDate,endDate}"},
                    "hourly": { "href": "/accounts/{id}/events/hourly{?fields,startDate,endDate}"},
                    "self": { "href": "/accounts/{id}/events{?fields,startDate,endDate}" },
                    "parent": { "href": "/accounts/{id}" }
                },
                "id": "{id}",
                "status" : {
                  "toSend": 18714, 
                  "inProgress" : { 
                    "total" : 100, 
                    "percent" : 0.005 
                  },
                  "pending" : { 
                    "total" : 200, 
                    "percent" : 0.011 
                  }
                },
                "sent" : { 
                  "total" : 18500, 
                  "percent" : 98.856 
                },
                "delivered": { 
                  "total" : 18495, 
                  "percent" : 98.830
                },
                "bounced" : { 
                  "total" : 164, 
                  "percent" : 0.009,
                  "hard" : 14, 
                  "soft" : 100, 
                  "blocked" : 50,
                  "technical" : 1,
                  "unknown" : 1
                },
                "opened" : { 
                  "unique" : {
                    "total" : 18333,
                    "percent" : 97.964
                  },
                  "total" : 18400
                },
                "clicked" : { 
                  "unique" : {
                    "total" : 18222,
                    "percent" : 97.371
                  },
                  "total" : 18300
                },
                "unsubscribed": { 
                  "total" : 3, 
                  "percent" : 0.001 
                },
                "apiErrors" : { 
                  "total" : 0
                },
                "emailErrors" : { 
                  "total" : 0, 
                  "percent" : 0.000 
                }
            }


+ Parameters
    + memberId (required) ... MID for the account
    + fields (optional, string) ... event fields requested, default is all fields
    + startDate (optional, string) ... ISO8601 formatted Date String, from which to begin collecting events from.  Depending on Precision, this may be rounded to the nearest Day or Hour
    + endDate (optional, string) ... ISO8601 formatted Date string, end time to cap results on.

### Retrieve all Events for an Account [GET]
+ Response 200
    [Account Events][]

## Account Events Daily [/accounts/{memberId}/events/daily{?fields,startDate,endDate}]
A collection of events that have occurred for an account, rolled into 24 hour chunks

+ Model (application/json)
    JSON Representation of events that have occurred on an Account, rolled up daily
    + Body
    
            {
                "_links": {
                    "hourly": { "href": "/accounts/{id}/events/hourly{?fields,startDate,endDate}"},
                    "self": { "href": "/accounts/{id}/events/daily{?fields,startDate,endDate}" },
                    "parent": { "href": "/accounts/{id}/events" }
                },
                "id": "{id}",
                "Events": [
                    {
                        "date" : "2014-02-06T07:06:00Z",
                        "status" : {
                          "toSend": 18714, 
                          "inProgress" : { 
                            "total" : 100, 
                            "percent" : 0.005 
                          },
                          "pending" : { 
                            "total" : 200, 
                            "percent" : 0.011 
                          }
                        },
                        "sent" : { 
                          "total" : 18500, 
                          "percent" : 98.856 
                        },
                        "delivered": { 
                          "total" : 18495, 
                          "percent" : 98.830
                        },
                        "bounced" : { 
                          "total" : 164, 
                          "percent" : 0.009,
                          "hard" : 14, 
                          "soft" : 100, 
                          "blocked" : 50,
                          "technical" : 1,
                          "unknown" : 1
                        },
                        "opened" : { 
                          "unique" : {
                            "total" : 18333,
                            "percent" : 97.964
                          },
                          "total" : 18400
                        },
                        "clicked" : { 
                          "unique" : {
                            "total" : 18222,
                            "percent" : 97.371
                          },
                          "total" : 18300
                        },
                        "unsubscribed": { 
                          "total" : 3, 
                          "percent" : 0.001 
                        },
                        "apiErrors" : { 
                            "total" : 0
                        },
                        "emailErrors" : { 
                          "total" : 0, 
                          "percent" : 0.000 
                        }
                    },
                    {
                        "date" : "2014-02-05T07:06:00Z",
                        "status" : {
                          "toSend": 18714, 
                          "inProgress" : { 
                            "total" : 100, 
                            "percent" : 0.005 
                          },
                          "pending" : { 
                            "total" : 200, 
                            "percent" : 0.011 
                          }
                        },
                        "sent" : { 
                          "total" : 18500, 
                          "percent" : 98.856 
                        },
                        "delivered": { 
                          "total" : 18495, 
                          "percent" : 98.830
                        },
                        "bounced" : { 
                          "total" : 164, 
                          "percent" : 0.009,
                          "hard" : 14, 
                          "soft" : 100, 
                          "blocked" : 50,
                          "technical" : 1,
                          "unknown" : 1
                        },
                        "opened" : { 
                          "unique" : {
                            "total" : 18333,
                            "percent" : 97.964
                          },
                          "total" : 18400
                        },
                        "clicked" : { 
                          "unique" : {
                            "total" : 18222,
                            "percent" : 97.371
                          },
                          "total" : 18300
                        },
                        "unsubscribed": { 
                          "total" : 3, 
                          "percent" : 0.001 
                        },
                        "apiErrors" : { 
                          "total" : 0
                        },
                        "emailErrors" : { 
                          "total" : 0, 
                          "percent" : 0.000 
                        }
                    },
                    {
                        "date" : "2014-02-04T07:06:00Z",
                        "status" : {
                          "toSend": 18714, 
                          "inProgress" : { 
                            "total" : 100, 
                            "percent" : 0.005 
                          },
                          "pending" : { 
                            "total" : 200, 
                            "percent" : 0.011 
                          }
                        },
                        "sent" : { 
                          "total" : 18500, 
                          "percent" : 98.856 
                        },
                        "delivered": { 
                          "total" : 18495, 
                          "percent" : 98.830
                        },
                        "bounced" : { 
                          "total" : 164, 
                          "percent" : 0.009,
                          "hard" : 14, 
                          "soft" : 100, 
                          "blocked" : 50,
                          "technical" : 1,
                          "unknown" : 1
                        },
                        "opened" : { 
                          "unique" : {
                            "total" : 18333,
                            "percent" : 97.964
                          },
                          "total" : 18400
                        },
                        "clicked" : { 
                          "unique" : {
                            "total" : 18222,
                            "percent" : 97.371
                          },
                          "total" : 18300
                        },
                        "unsubscribed": { 
                          "total" : 3, 
                          "percent" : 0.001 
                        },
                        "apiErrors" : { 
                          "total" : 0
                        },
                        "emailErrors" : { 
                          "total" : 0, 
                          "percent" : 0.000 
                        }
                    }
                ]
            }

+ Parameters
    + memberId (required) ... MID for the account
    + fields (optional, string) ... event fields requested, default is all fields
    + startDate (optional, string) ... ISO8601 formatted Date String, from which to begin collecting events from.  Depending on Precision, this may be rounded to the nearest Day or Hour
    + endDate (optional, string) ... ISO8601 formatted Date string, end time to cap results on.

### Retrieve Events for an Account with daily precision [GET]
+ Response 200
    [Account Events Daily][]

## Account Events Hourly [/accounts/{memberId}/events/hourly{?fields,startDate,endDate}]
+ Model (application/json)
    JSON Representation of events that have occurred on an Account, rolled up hourly.
    + Body
    
            {
                "_links": {
                    "daily": { "href": "/accounts/{id}/events/daily{?fields,startDate,endDate}"},
                    "self": { "href": "/accounts/{id}/events/hourly{?fields,startDate,endDate}" },
                    "parent": { "href": "/accounts/{id}/events" }
                },
                "Events": [
                    {
                        "date" : "2014-02-04T01:00:00Z",
                        "status" : {
                          "toSend": 18714, 
                          "inProgress" : { 
                            "total" : 100, 
                            "percent" : 0.005 
                          },
                          "pending" : { 
                            "total" : 200, 
                            "percent" : 0.011 
                          }
                        },
                        "sent" : { 
                          "total" : 18500, 
                          "percent" : 98.856 
                        },
                        "delivered": { 
                          "total" : 18495, 
                          "percent" : 98.830
                        },
                        "bounced" : { 
                          "total" : 164, 
                          "percent" : 0.009,
                          "hard" : 14, 
                          "soft" : 100, 
                          "blocked" : 50,
                          "technical" : 1,
                          "unknown" : 1
                        },
                        "opened" : { 
                          "unique" : {
                            "total" : 18333,
                            "percent" : 97.964
                          },
                          "total" : 18400
                        },
                        "clicked" : { 
                          "unique" : {
                            "total" : 18222,
                            "percent" : 97.371
                          },
                          "total" : 18300
                        },
                        "unsubscribed": { 
                          "total" : 3, 
                          "percent" : 0.001 
                        },
                        "apiErrors" : { 
                          "total" : 0
                        },
                        "emailErrors" : { 
                          "total" : 0, 
                          "percent" : 0.000 
                        }
                    },
                    {
                        "date" : "2014-02-04T02:00:00Z",
                        "status" : {
                          "toSend": 18714, 
                          "inProgress" : { 
                            "total" : 100, 
                            "percent" : 0.005 
                          },
                          "pending" : { 
                            "total" : 200, 
                            "percent" : 0.011 
                          }
                        },
                        "sent" : { 
                          "total" : 18500, 
                          "percent" : 98.856 
                        },
                        "delivered": { 
                          "total" : 18495, 
                          "percent" : 98.830
                        },
                        "bounced" : { 
                          "total" : 164, 
                          "percent" : 0.009,
                          "hard" : 14, 
                          "soft" : 100, 
                          "blocked" : 50,
                          "technical" : 1,
                          "unknown" : 1
                        },
                        "opened" : { 
                          "unique" : {
                            "total" : 18333,
                            "percent" : 97.964
                          },
                          "total" : 18400
                        },
                        "clicked" : { 
                          "unique" : {
                            "total" : 18222,
                            "percent" : 97.371
                          },
                          "total" : 18300
                        },
                        "unsubscribed": { 
                          "total" : 3, 
                          "percent" : 0.001 
                        },
                        "apiErrors" : { 
                          "total" : 0
                        },
                        "emailErrors" : { 
                          "total" : 0, 
                          "percent" : 0.000 
                        }
                    },
                    {
                        "date" : "2014-02-04T03:00:00Z",
                        "status" : {
                          "toSend": 18714, 
                          "inProgress" : { 
                            "total" : 100, 
                            "percent" : 0.005 
                          },
                          "pending" : { 
                            "total" : 200, 
                            "percent" : 0.011 
                          }
                        },
                        "sent" : { 
                          "total" : 18500, 
                          "percent" : 98.856 
                        },
                        "delivered": { 
                          "total" : 18495, 
                          "percent" : 98.830
                        },
                        "bounced" : { 
                          "total" : 164, 
                          "percent" : 0.009,
                          "hard" : 14, 
                          "soft" : 100, 
                          "blocked" : 50,
                          "technical" : 1,
                          "unknown" : 1
                        },
                        "opened" : { 
                          "unique" : {
                            "total" : 18333,
                            "percent" : 97.964
                          },
                          "total" : 18400
                        },
                        "clicked" : { 
                          "unique" : {
                            "total" : 18222,
                            "percent" : 97.371
                          },
                          "total" : 18300
                        },
                        "unsubscribed": { 
                          "total" : 3, 
                          "percent" : 0.001 
                        },
                        "apiErrors" : { 
                          "total" : 0
                        },
                        "emailErrors" : { 
                          "total" : 0, 
                          "percent" : 0.000 
                        }
                    }
                ]
            }

+ Parameters
    + memberId (required) ... MID for the account
    + fields (optional, string) ... event fields requested, default is all fields
    + startDate (optional, string) ... ISO8601 formatted Date String, from which to begin collecting events from.  Depending on Precision, this may be rounded to the nearest Day or Hour
    + endDate (optional, string) ... ISO8601 formatted Date string, end time to cap results on.

### Retrieve Events for an Account, with Hourly precision [GET]

+ Response 200
    [Account Events Hourly][]


# Group Jobs resource

## Jobs Events [/jobs/{id}/events{?fields}]
A single Event object belonging to a job.

+ Parameters
    + id (required, number, `123`) ... Numeric `id` of the Job to retrieve events from
    + fields (optional, string, `sent,delivered,bouncesHard,bouncesSoft,bouncesBLocked,uniqueOpened,uniqueClicked,unsubscribed` ) ... Comma Separated string of event fields to be returned. 

+ Model (application/json)
    JSON Representation of events that have occurred on a job. Percents are a percent of toSend.  Need to discuss minimum percentages.
    + Body
    
            {
                "_links": {
                    "self": { "href": "/jobs/{id}/events" },
                    "parent": { "href": "/jobs/{id}" }
                },
                "id": "{id}",
                "status" : {
                  "toSend": 18714, 
                  "inProgress" : { 
                    "total" : 100, 
                    "percent" : 0.005 
                  },
                  "pending" : { 
                    "total" : 200, 
                    "percent" : 0.011 
                  }
                },
                "sent" : { 
                  "total" : 18500, 
                  "percent" : 98.856 
                },
                "delivered": { 
                  "total" : 18495, 
                  "percent" : 98.830
                },
                "bounced" : { 
                  "total" : 164, 
                  "percent" : 0.009,
                  "hard" : 14, 
                  "soft" : 100, 
                  "blocked" : 50,
                  "technical" : 1,
                  "unknown" : 1
                },
                "opened" : { 
                  "unique" : {
                    "total" : 18333,
                    "percent" : 97.964
                  },
                  "total" : 18400
                },
                "clicked" : { 
                  "unique" : {
                    "total" : 18222,
                    "percent" : 97.371
                  },
                  "total" : 18300
                },
                "unsubscribed": { 
                  "total" : 3, 
                  "percent" : 0.001 
                },
                "apiErrors" : { 
                  "total" : 0
                },
                "emailErrors" : { 
                  "total" : 0, 
                  "percent" : 0.000 
                }
            }

### Retrieve Events for a job [GET]
+ Response 200
    [Jobs Events][]


# Group Message Resource

## Message Root [/messages/{id}]
The Message Resource

+ Model (application/json)
    JSON Representation of events that have occurred on a Message, rolled up daily
    + Body
    
            {
                "_links": {
                    "self": { "href": "/messages/{id}" },
                    "parent": { "href": "/" }
                },
                "id": "{id}"
            }


+ Parameters
    + id (required) ... id for the message - can be the MessageID or CustomerKey of a message object

### Retrieve a Message [GET]
+ Response 200
    [Message Root][]    

### Delete a Message [DELETE]
+ Response 204


## Create Triggered Message [/messages/triggered]
Create a new TriggeredSendDefinition

+ Model (application/json)
    JSON Response when a TriggeredSendDefinition is created
    + Body
    
            {
                "id" : 9223372036854775807, 
                "name" : "TSD Name",
                "description" : "TSD Description",
                "emailId" : 9223372036854775807,
                "customerKey" : "customerKey123",
                "listId" : 9223372036854775807,
                "triggeredSendStatus" : "New", /*Inactive, Active, Canceled*/
                "sendClassification" : { 
                    "customerKey" : "sc CustomerKey123", 
                    "objectId" : "30dd879c-ee2f-11db-8314-0800200c9a66"
                },
                "senderProfile" : { 
                    "customerKey" : "sp CustomerKey", 
                    "objectId" : "30dd879c-ee2f-11db-8314-0800200c9a66" 
                },
                "deliveryProfile" : { 
                    "customerKey" : "dp CustomerKey", 
                    "objectId" : "30dd879c-ee2f-11db-8314-0800200c9a66" 
                },
                "autoAddSubscribers" : true, /*bool*/
                "autoUpdateSubscribers" : true, /*bool*/
                "ccEmail" : "an@email.com",
                "bccEmail" : "an@email.com",
                "emailSubject" : "The email subject",
                "isMultipart" : true,
                "isWrapped" : true,
                "suppressTracking" : true,
                "categoryId" : 2147483683,
                "campaignId" : 9223372036854775807, /* doesn't exist in current SDK */
                "refreshContent" : true,
                "exclusionFilter" : "ampScript Goes Here",
                "priority" : "Low", /* Medium, High */
                "sendSourceDataExtension" : { "customerKey" : "ssde customerKey" }
            }

### Create a Triggered Send Definition Message [POST]
+ Request (application/json)

        {
            "name" : "TSD Name",
            "description" : "TSD Description",
            "emailId" : 9223372036854775807,
            "customerKey" : "customerKey123",
            "listId" : 9223372036854775807,
            "triggeredSendStatus" : "New", /*Inactive, Active, Canceled - do we want to allow changing status upon creation?*/
            "sendClassification" : { 
                "customerKey" : "sc CustomerKey123", 
                "objectId" : "30dd879c-ee2f-11db-8314-0800200c9a66"
            },
            "senderProfile" : { 
                "customerKey" : "sp CustomerKey", 
                "objectId" : "30dd879c-ee2f-11db-8314-0800200c9a66" 
            },
            "deliveryProfile" : { 
                "customerKey" : "dp CustomerKey", 
                "objectId" : "30dd879c-ee2f-11db-8314-0800200c9a66" 
            },
            "autoAddSubscribers" : true, /*bool*/
            "autoUpdateSubscribers" : true, /*bool*/
            "ccEmail" : "an@email.com",
            "bccEmail" : "an@email.com",
            "emailSubject" : "The email subject",
            "isMultipart" : true,
            "isWrapped" : true,
            "suppressTracking" : true,
            "categoryId" : 2147483683,
            "campaignId" : 9223372036854775807, /* doesn't exist in current SDK */
            "refreshContent" : true,
            "exclusionFilter" : "ampScript Goes Here",
            "priority" : "Low", /* Medium, High */
            "sendSourceDataExtension" : { "customerKey" : "ssde customerKey" }
        }

+ Response 200
    [Create Triggered Message][]

## Search for Triggered Messages [/messages/triggered{?fields,filters}]
Search for triggeredSendDefinitions 

+ Model
    
            {
                "_links": {
                    "self": { "href": "/messages/triggered{?PartnerKey,CreatedDate,ModifiedDate,ClientId,CustomerKey,EmailId,ListId,Name,Description,TriggeredSendType,TriggeredSendStatus,HeaderContentAreaId,FooterContentAreaId,SendClassificationId,SendClassificationCustomerKey,SenderProfileCustomerKey,SenderProfileId,DeliveryProfileCustomerKey,DeliveryProfileId,PrivateDomainId,PrivateIPId,AutoAddSubscribers,AutoUpdateSubscribers,BatchInterval,FromName,FromAddress,BccEmail,EmailSubject,DynamicEmailSubject,IsMultipart,IsWrapped,TestEmailAddr,AllowedSlots,NewSlotTrigger,SendLimit,SendWindowOpen,SendWindowClose,SuppressTracking,Keyword,ListPartnerKey,EmailPartnerKey,SendClassificationPartnerKey,PrivateDomainPartnerKey,PrivateIPPartnerKey,ClientPartnerClientKey,IsPlatformObject,CategoryID}"},
                    "parent": { "href": "/messages" },
                    "next" : { "href": "/messages/triggered{?pageSize=25&page=3&...}"},
                    "prev" : { "href": "/messages/triggered{?pageSize=25&page=1&...}"}
                },
                "count" : 3,
                "page": 2,
                "pageSize": 3,                
                "triggeredSendDefinitions" : [
                    {
                        "id" : 9223372036854775807, 
                        "name" : "TSD Name",
                        "description" : "TSD Description",
                        "emailId" : 9223372036854775807,
                        "customerKey" : "customerKey123",
                        "listId" : 9223372036854775807,
                        "triggeredSendStatus" : "New", /*Inactive, Active, Canceled*/
                        "sendClassification" : { 
                            "customerKey" : "sc CustomerKey123", 
                            "objectId" : "30dd879c-ee2f-11db-8314-0800200c9a66"
                        },
                        "senderProfile" : { 
                            "customerKey" : "sp CustomerKey", 
                            "objectId" : "30dd879c-ee2f-11db-8314-0800200c9a66" 
                        },
                        "deliveryProfile" : { 
                            "customerKey" : "dp CustomerKey", 
                            "objectId" : "30dd879c-ee2f-11db-8314-0800200c9a66" 
                        },
                        "autoAddSubscribers" : true, /*bool*/
                        "autoUpdateSubscribers" : true, /*bool*/
                        "ccEmail" : "an@email.com",
                        "bccEmail" : "an@email.com",
                        "emailSubject" : "The email subject",
                        "isMultipart" : true,
                        "isWrapped" : true,
                        "suppressTracking" : true,
                        "categoryId" : 2147483683,
                        "campaignId" : 9223372036854775807, /* doesn't exist in current SDK */
                        "refreshContent" : true,
                        "exclusionFilter" : "ampScript Goes Here",
                        "priority" : "Low", /* Medium, High */
                        "sendSourceDataExtension" : { "customerKey" : "ssde customerKey" }
                    },
                    {
                        "id" : 9223372036854775807, 
                        "name" : "TSD Name",
                        "description" : "TSD Description",
                        "emailId" : 9223372036854775807,
                        "customerKey" : "customerKey123",
                        "listId" : 9223372036854775807,
                        "triggeredSendStatus" : "New", /*Inactive, Active, Canceled*/
                        "sendClassification" : { 
                            "customerKey" : "sc CustomerKey123", 
                            "objectId" : "30dd879c-ee2f-11db-8314-0800200c9a66"
                        },
                        "senderProfile" : { 
                            "customerKey" : "sp CustomerKey", 
                            "objectId" : "30dd879c-ee2f-11db-8314-0800200c9a66" 
                        },
                        "deliveryProfile" : { 
                            "customerKey" : "dp CustomerKey", 
                            "objectId" : "30dd879c-ee2f-11db-8314-0800200c9a66" 
                        },
                        "autoAddSubscribers" : true, /*bool*/
                        "autoUpdateSubscribers" : true, /*bool*/
                        "ccEmail" : "an@email.com",
                        "bccEmail" : "an@email.com",
                        "emailSubject" : "The email subject",
                        "isMultipart" : true,
                        "isWrapped" : true,
                        "suppressTracking" : true,
                        "categoryId" : 2147483683,
                        "campaignId" : 9223372036854775807, /* doesn't exist in current SDK */
                        "refreshContent" : true,
                        "exclusionFilter" : "ampScript Goes Here",
                        "priority" : "Low", /* Medium, High */
                        "sendSourceDataExtension" : { "customerKey" : "ssde customerKey" }
                    },
                    {
                        "id" : 9223372036854775807, 
                        "name" : "TSD Name",
                        "description" : "TSD Description",
                        "emailId" : 9223372036854775807,
                        "customerKey" : "customerKey123",
                        "listId" : 9223372036854775807,
                        "triggeredSendStatus" : "New", /*Inactive, Active, Canceled*/
                        "sendClassification" : { 
                            "customerKey" : "sc CustomerKey123", 
                            "objectId" : "30dd879c-ee2f-11db-8314-0800200c9a66"
                        },
                        "senderProfile" : { 
                            "customerKey" : "sp CustomerKey", 
                            "objectId" : "30dd879c-ee2f-11db-8314-0800200c9a66" 
                        },
                        "deliveryProfile" : { 
                            "customerKey" : "dp CustomerKey", 
                            "objectId" : "30dd879c-ee2f-11db-8314-0800200c9a66" 
                        },
                        "autoAddSubscribers" : true, /*bool*/
                        "autoUpdateSubscribers" : true, /*bool*/
                        "ccEmail" : "an@email.com",
                        "bccEmail" : "an@email.com",
                        "emailSubject" : "The email subject",
                        "isMultipart" : true,
                        "isWrapped" : true,
                        "suppressTracking" : true,
                        "categoryId" : 2147483683,
                        "campaignId" : 9223372036854775807, /* doesn't exist in current SDK */
                        "refreshContent" : true,
                        "exclusionFilter" : "ampScript Goes Here",
                        "priority" : "Low", /* Medium, High */
                        "sendSourceDataExtension" : { "customerKey" : "ssde customerKey" }
                    }                    
                    
                ]
            }

+ Parameters
    + fields (optional, string) ... comma-separated collection of fields to be returned
        + Values
            + `PartnerKey`
            + `CreatedDate`
            + `ModifiedDate`
            + `ClientId`
            + `CustomerKey`
            + `EmailId`
            + `ListId`
            + `Name`
            + `Description`
            + `TriggeredSendType`
            + `TriggeredSendStatus`
            + `HeaderContentAreaId`
            + `FooterContentAreaId`
            + `SendClassificationId`
            + `SendClassificationCustomerKey`
            + `SenderProfileCustomerKey`
            + `SenderProfileId`
            + `DeliveryProfileCustomerKey`
            + `DeliveryProfileId`
            + `PrivateDomainId`
            + `PrivateIPId`
            + `AutoAddSubscribers`
            + `AutoUpdateSubscribers`
            + `BatchInterval`
            + `FromName`
            + `FromAddress`
            + `BccEmail`
            + `EmailSubject`
            + `DynamicEmailSubject`
            + `IsMultipart`
            + `IsWrapped`
            + `TestEmailAddr`
            + `AllowedSlots`
            + `NewSlotTrigger`
            + `SendLimit`
            + `SendWindowOpen`
            + `SendWindowClose`
            + `SuppressTracking`
            + `Keyword`
            + `ListPartnerKey`
            + `EmailPartnerKey`
            + `SendClassificationPartnerKey`
            + `PrivateDomainPartnerKey`
            + `PrivateIPPartnerKey`
            + `ClientPartnerClientKey`
            + `IsPlatformObject`
            + `CategoryID`
    + filters (optional, string) ... JSON Collection of filter objects to be used to filter results.  Must contain a TSD property, a Simple Operator, and a Value or DateValue.
        + values
            + `[{ "property" : "customerKey", "SimpleOperator" : "equals", "Value" : "customValue" }]`
            + `[{ "property" : "customerKey", "SimpleOperator" : "equals", "DateValue" : "customValue" },{ "property" : "customerKey", "SimpleOperator" : "equals", "Value" : "customValue" }]`
    




### Retrieve a collection of triggered send definition messages [GET]
+ Response 200
[Search for Triggered Messages][]

## Send a Triggered Message [/messages/{id}/send]
Send a message using a pre-existing triggered send definition


### Send a triggered send definition message [PUT]
+ Request (application/json)

        {
            "customerKey": "Send Customer Key",
            "emailAddress" : "an@email.com",
            "subscriberKey" : "an@email.com",
            "attributes" : [
                /* any attributes */
            ]
        }
        
+ Response 202



## Message Events [/messages/{id}/events{?fields,startDate,endDate}]
A collection of all events that have occurred for a message, total.

+ Model (application/json)
    JSON Representation of events that have occurred on a Message, rolled up daily
    + Body
    
            {
                "_links": {
                    "daily": { "href": "/message/{id}/events/daily{?fields,startDate,endDate}"},
                    "hourly": { "href": "/message/{id}/events/hourly{?fields,startDate,endDate}"},
                    "self": { "href": "/message/{id}/events{?fields,startDate,endDate}" },
                    "parent": { "href": "/message/{id}" }
                },
                "id": "{id}",
                "status" : {
                  "toSend": 18714, 
                  "inProgress" : { 
                    "total" : 100, 
                    "percent" : 0.005 
                  },
                  "pending" : { 
                    "total" : 200, 
                    "percent" : 0.011 
                  }
                },
                "sent" : { 
                  "total" : 18500, 
                  "percent" : 98.856 
                },
                "delivered": { 
                  "total" : 18495, 
                  "percent" : 98.830
                },
                "bounced" : { 
                  "total" : 164, 
                  "percent" : 0.009,
                  "hard" : 14, 
                  "soft" : 100, 
                  "blocked" : 50,
                  "technical" : 1,
                  "unknown" : 1
                },
                "opened" : { 
                  "unique" : {
                    "total" : 18333,
                    "percent" : 97.964
                  },
                  "total" : 18400
                },
                "clicked" : { 
                  "unique" : {
                    "total" : 18222,
                    "percent" : 97.371
                  },
                  "total" : 18300
                },
                "unsubscribed": { 
                  "total" : 3, 
                  "percent" : 0.001 
                },
                "apiErrors" : { 
                  "total" : 0
                },
                "emailErrors" : { 
                  "total" : 0, 
                  "percent" : 0.000 
                }
            }


+ Parameters
    + id (required) ... id for the message
    + fields (optional, string) ... event fields requested, default is all fields
    + startDate (optional, string) ... ISO8601 formatted Date String, from which to begin collecting events from.  Depending on Precision, this may be rounded to the nearest Day or Hour
    + endDate (optional, string) ... ISO8601 formatted Date string, end time to cap results on.

### Retrieve all Events for a Message [GET]
+ Response 200
    [Message Events][]

## Message Events Daily [/messages/{id}/events/daily{?fields,startDate,endDate}]
A collection of events that have occurred for a message, rolled into 24 hour chunks

+ Model (application/json)
    JSON Representation of events that have occurred on a Message, rolled up daily
    + Body
    
            {
                "_links": {
                    "hourly": { "href": "/message/{id}/events/hourly{?fields,startDate,endDate}"},
                    "self": { "href": "/message/{id}/events/daily{?fields,startDate,endDate}" },
                    "parent": { "href": "/message/{id}/events" }
                },
                "id": "{id}",
                "Events": [
                    {
                        "date" : "2014-02-06T07:06:00Z",
                        "status" : {
                          "toSend": 18714, 
                          "inProgress" : { 
                            "total" : 100, 
                            "percent" : 0.005 
                          },
                          "pending" : { 
                            "total" : 200, 
                            "percent" : 0.011 
                          }
                        },
                        "sent" : { 
                          "total" : 18500, 
                          "percent" : 98.856 
                        },
                        "delivered": { 
                          "total" : 18495, 
                          "percent" : 98.830
                        },
                        "bounced" : { 
                          "total" : 164, 
                          "percent" : 0.009,
                          "hard" : 14, 
                          "soft" : 100, 
                          "blocked" : 50,
                          "technical" : 1,
                          "unknown" : 1
                        },
                        "opened" : { 
                          "unique" : {
                            "total" : 18333,
                            "percent" : 97.964
                          },
                          "total" : 18400
                        },
                        "clicked" : { 
                          "unique" : {
                            "total" : 18222,
                            "percent" : 97.371
                          },
                          "total" : 18300
                        },
                        "unsubscribed": { 
                          "total" : 3, 
                          "percent" : 0.001 
                        },
                        "apiErrors" : { 
                          "total" : 0
                        },
                        "emailErrors" : { 
                          "total" : 0, 
                          "percent" : 0.000 
                        }
                    },
                    {
                        "date" : "2014-02-05T07:06:00Z",
                        "status" : {
                          "toSend": 18714, 
                          "inProgress" : { 
                            "total" : 100, 
                            "percent" : 0.005 
                          },
                          "pending" : { 
                            "total" : 200, 
                            "percent" : 0.011 
                          }
                        },
                        "sent" : { 
                          "total" : 18500, 
                          "percent" : 98.856 
                        },
                        "delivered": { 
                          "total" : 18495, 
                          "percent" : 98.830
                        },
                        "bounced" : { 
                          "total" : 164, 
                          "percent" : 0.009,
                          "hard" : 14, 
                          "soft" : 100, 
                          "blocked" : 50,
                          "technical" : 1,
                          "unknown" : 1
                        },
                        "opened" : { 
                          "unique" : {
                            "total" : 18333,
                            "percent" : 97.964
                          },
                          "total" : 18400
                        },
                        "clicked" : { 
                          "unique" : {
                            "total" : 18222,
                            "percent" : 97.371
                          },
                          "total" : 18300
                        },
                        "unsubscribed": { 
                          "total" : 3, 
                          "percent" : 0.001 
                        },
                        "apiErrors" : { 
                          "total" : 0
                        },
                        "emailErrors" : { 
                          "total" : 0, 
                          "percent" : 0.000 
                        }
                    },
                    {
                        "date" : "2014-02-04T07:06:00Z",
                        "status" : {
                          "toSend": 18714, 
                          "inProgress" : { 
                            "total" : 100, 
                            "percent" : 0.005 
                          },
                          "pending" : { 
                            "total" : 200, 
                            "percent" : 0.011 
                          }
                        },
                        "sent" : { 
                          "total" : 18500, 
                          "percent" : 98.856 
                        },
                        "delivered": { 
                          "total" : 18495, 
                          "percent" : 98.830
                        },
                        "bounced" : { 
                          "total" : 164, 
                          "percent" : 0.009,
                          "hard" : 14, 
                          "soft" : 100, 
                          "blocked" : 50,
                          "technical" : 1,
                          "unknown" : 1
                        },
                        "opened" : { 
                          "unique" : {
                            "total" : 18333,
                            "percent" : 97.964
                          },
                          "total" : 18400
                        },
                        "clicked" : { 
                          "unique" : {
                            "total" : 18222,
                            "percent" : 97.371
                          },
                          "total" : 18300
                        },
                        "unsubscribed": { 
                          "total" : 3, 
                          "percent" : 0.001 
                        },
                        "apiErrors" : { 
                          "total" : 0
                        },
                        "emailErrors" : { 
                          "total" : 0, 
                          "percent" : 0.000 
                        }
                    }
                ]
            }

+ Parameters
    + id (required) ... id for the message
    + fields (optional, string) ... event fields requested, default is all fields
    + startDate (optional, string) ... ISO8601 formatted Date String, from which to begin collecting events from.  Depending on Precision, this may be rounded to the nearest Day or Hour
    + endDate (optional, string) ... ISO8601 formatted Date string, end time to cap results on.

### Retrieve Events for a Message with daily precision [GET]
+ Response 200
    [Message Events Daily][]

## Message Events Hourly [/messages/{id}/events/hourly{?fields,startDate,endDate}]
+ Model (application/json)
    JSON Representation of events that have occurred on a Message, rolled up hourly.
    + Body
    
            {
                "_links": {
                    "daily": { "href": "/message/{id}/events/daily{?fields,startDate,endDate}"},
                    "self": { "href": "/message/{id}/events/hourly{?fields,startDate,endDate}" },
                    "parent": { "href": "/message/{id}/events" }
                },
                "Events": [
                    {
                        "date" : "2014-02-04T01:00:00Z",
                        "status" : {
                          "toSend": 18714, 
                          "inProgress" : { 
                            "total" : 100, 
                            "percent" : 0.005 
                          },
                          "pending" : { 
                            "total" : 200, 
                            "percent" : 0.011 
                          }
                        },
                        "sent" : { 
                          "total" : 18500, 
                          "percent" : 98.856 
                        },
                        "delivered": { 
                          "total" : 18495, 
                          "percent" : 98.830
                        },
                        "bounced" : { 
                          "total" : 164, 
                          "percent" : 0.009,
                          "hard" : 14, 
                          "soft" : 100, 
                          "blocked" : 50,
                          "technical" : 1,
                          "unknown" : 1
                        },
                        "opened" : { 
                          "unique" : {
                            "total" : 18333,
                            "percent" : 97.964
                          },
                          "total" : 18400
                        },
                        "clicked" : { 
                          "unique" : {
                            "total" : 18222,
                            "percent" : 97.371
                          },
                          "total" : 18300
                        },
                        "unsubscribed": { 
                          "total" : 3, 
                          "percent" : 0.001 
                        },
                        "apiErrors" : { 
                          "total" : 0
                        },
                        "emailErrors" : { 
                          "total" : 0, 
                          "percent" : 0.000 
                        }
                    },
                    {
                        "date" : "2014-02-04T02:00:00Z",
                        "status" : {
                          "toSend": 18714, 
                          "inProgress" : { 
                            "total" : 100, 
                            "percent" : 0.005 
                          },
                          "pending" : { 
                            "total" : 200, 
                            "percent" : 0.011 
                          }
                        },
                        "sent" : { 
                          "total" : 18500, 
                          "percent" : 98.856 
                        },
                        "delivered": { 
                          "total" : 18495, 
                          "percent" : 98.830
                        },
                        "bounced" : { 
                          "total" : 164, 
                          "percent" : 0.009,
                          "hard" : 14, 
                          "soft" : 100, 
                          "blocked" : 50,
                          "technical" : 1,
                          "unknown" : 1
                        },
                        "opened" : { 
                          "unique" : {
                            "total" : 18333,
                            "percent" : 97.964
                          },
                          "total" : 18400
                        },
                        "clicked" : { 
                          "unique" : {
                            "total" : 18222,
                            "percent" : 97.371
                          },
                          "total" : 18300
                        },
                        "unsubscribed": { 
                          "total" : 3, 
                          "percent" : 0.001 
                        },
                        "apiErrors" : { 
                          "total" : 0
                        },
                        "emailErrors" : { 
                          "total" : 0, 
                          "percent" : 0.000 
                        }
                    },
                    {
                        "date" : "2014-02-04T03:00:00Z",
                        "status" : {
                          "toSend": 18714, 
                          "inProgress" : { 
                            "total" : 100, 
                            "percent" : 0.005 
                          },
                          "pending" : { 
                            "total" : 200, 
                            "percent" : 0.011 
                          }
                        },
                        "sent" : { 
                          "total" : 18500, 
                          "percent" : 98.856 
                        },
                        "delivered": { 
                          "total" : 18495, 
                          "percent" : 98.830
                        },
                        "bounced" : { 
                          "total" : 164, 
                          "percent" : 0.009,
                          "hard" : 14, 
                          "soft" : 100, 
                          "blocked" : 50,
                          "technical" : 1,
                          "unknown" : 1
                        },
                        "opened" : { 
                          "unique" : {
                            "total" : 18333,
                            "percent" : 97.964
                          },
                          "total" : 18400
                        },
                        "clicked" : { 
                          "unique" : {
                            "total" : 18222,
                            "percent" : 97.371
                          },
                          "total" : 18300
                        },
                        "unsubscribed": { 
                          "total" : 3, 
                          "percent" : 0.001 
                        },
                        "apiErrors" : { 
                          "total" : 0
                        },
                        "emailErrors" : { 
                          "total" : 0, 
                          "percent" : 0.000 
                        }
                    }
                ]
            }

+ Parameters
    + id (required) ... id for the message
    + fields (optional, string) ... event fields requested, default is all fields
    + startDate (optional, string) ... ISO8601 formatted Date String, from which to begin collecting events from.  Depending on Precision, this may be rounded to the nearest Day or Hour
    + endDate (optional, string) ... ISO8601 formatted Date string, end time to cap results on.

### Retrieve Events for a Message, with Hourly precision [GET]

+ Response 200
    [Message Events Hourly][]

## Message Email Thumbnail [/messages/{id}/thumbnail{?width,height,subId}]
Email thumbnail for message jobs

+ Parameters
    + id (required) ... id for the message.  Could be a Triggered Send or an Email Send Definition id.
    + width (required) ... width of the image.
    + height (required) ... height of the image.
    + subId (optional) ... Subscriber ID. This would be used in the event that the consumer wants the resulting thumbnail to be customized for a particular subscriber

+ Model (application/json)
    JSON Representation of the email preview for all jobs associated to a message
    + Body
    
            {
                "id": "{id}",
                "img": "GQ8XQAYFAiEMfN0qD0COTgMX",
                "contentType": "image/jpeg"
            }

### Retrieve Email Thumbnail for a Message [GET]
+ Response 200
    [Message Email Thumbnail][]

## Retrieve Queued Transactions [/messages/{id}/queue]
A collection of queued transactions for a paused message

+ Parameters
    + id (required) ... id for the message.

+ Model (application/json)
    JSON Representation for all queued transactions associated to a message
    + Body
    
            {
                "id": "{id}",
                "Transactions": [
                    {
                        "jobId": "654231",
                        "tssId": "8E844912-1429-E211-B468-0022642D9886",
                        "tssrId": "0993DAEE-2190-E311-BB14-00237D5401CE",
                        "dateQueued": "2014-02-04T03:00:00Z",
                        "Member":
                        {
                            "memberId": "654",
                            "listId": "8435"
                            "fullName": "Erin Smith"
                            "emailAddress": "esmith@foo.com"
                        }
                    },
                    {
                        "jobId": "654231",
                        "tssId": "8E844912-1429-E211-B468-0022642D9886",
                        "tssrId": "89844912-1429-E211-B468-0022642D9886",
                        "dateQueued": "2014-02-04T03:00:00Z",
                        "Member":
                        {
                            "memberId": "659",
                            "listId": "8435"
                            "fullName": "Bob Jones"
                            "emailAddress": "bjones@foo.com"
                        }
                    }
                ]
            }

### Retrieve Queued Transactions for a Message [GET]
+ Response 200
    [Retrieve Queued Transactions][]

## Delete Queued Transactions [/messages/{id}/queue/{tssid}/{tssrId}]
Delete a queued transaction from a paused message

+ Parameters
    + id (required) ... id for the message.
    + tssid (required) ... id for the triggered send subscriber.
    + tssrId (required) ... id for the triggered send subscriber request.

### Delete Queued Transaction for a Message [DELETE]
+ Response 204
